*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="zensayorr.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	DataSource = .NULL.
	Height = 0
	Left = 0
	Name = "Dataenvironment"
	Top = 0
	Width = 0

ENDDEFINE

DEFINE CLASS zensayorr AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Command38" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cnt1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cnt1.List1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command8" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Text2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Txfechasel1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Txfechasel2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Text3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Text4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Text5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command7" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command9" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command10" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Combo1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command11" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command12" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command13" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command14" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Image1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command15" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: convertime
		*m: getarchivo
		*m: getcopy
		*m: getmunicip
		*m: grefresh
		*m: nombremes
		*m: older
		*m: radir
		*m: rdest
		*m: rdir
		*m: shoerror
		*m: suredir
		*p: num
		*p: pmousedown
	*</DefinedPropArrayMethod>

	BackColor = 184,201,197
	Caption = "Form1"
	DoCreate = .T.
	Height = 511
	Left = 0
	Name = "ZENSAYORR"
	num = .F.
	Picture = ..\patternacedistor.bmp
	pmousedown = .F.
	ShowWindow = 1
	Top = 0
	Width = 788

	ADD OBJECT 'Cnt1' AS container WITH ;
		Height = 200, ;
		Left = 399, ;
		Name = "Cnt1", ;
		Top = 46, ;
		Width = 200
		*< END OBJECT: BaseClass="container" />

	ADD OBJECT 'Cnt1.List1' AS listbox WITH ;
		FontSize = 8, ;
		Height = 187, ;
		Left = 4, ;
		Name = "List1", ;
		Top = 4, ;
		Width = 192
		*< END OBJECT: BaseClass="listbox" />

	ADD OBJECT 'Combo1' AS combobox WITH ;
		Height = 24, ;
		Left = 271, ;
		Name = "Combo1", ;
		Top = 135, ;
		Width = 100
		*< END OBJECT: BaseClass="combobox" />

	ADD OBJECT 'Command1' AS commandbutton WITH ;
		Caption = "Try Endtry", ;
		FontSize = 8, ;
		Height = 27, ;
		Left = 656, ;
		Name = "Command1", ;
		Top = 237, ;
		Width = 91
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Command10' AS commandbutton WITH ;
		Caption = "Command10", ;
		Height = 27, ;
		Left = 265, ;
		Name = "Command10", ;
		Top = 20, ;
		Width = 91
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Command11' AS commandbutton WITH ;
		Caption = "Command11", ;
		Height = 27, ;
		Left = 529, ;
		Name = "Command11", ;
		Top = 383, ;
		Width = 91
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Command12' AS commandbutton WITH ;
		Caption = "Command12", ;
		Height = 27, ;
		Left = 284, ;
		Name = "Command12", ;
		Top = 79, ;
		Width = 91
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Command13' AS commandbutton WITH ;
		Caption = "Command13", ;
		Height = 27, ;
		Left = 500, ;
		Name = "Command13", ;
		Top = 299, ;
		Width = 91
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Command14' AS commandbutton WITH ;
		Caption = "Command14", ;
		Height = 27, ;
		Left = 447, ;
		Name = "Command14", ;
		Top = 405, ;
		Width = 91
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Command15' AS commandbutton WITH ;
		Caption = "Command15", ;
		Height = 27, ;
		Left = 665, ;
		Name = "Command15", ;
		Top = 345, ;
		Width = 91
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Command2' AS commandbutton WITH ;
		Caption = "Command2", ;
		Height = 27, ;
		Left = 35, ;
		Name = "Command2", ;
		Top = 175, ;
		Width = 84
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Command3' AS commandbutton WITH ;
		Caption = "Command3", ;
		Height = 27, ;
		Left = 284, ;
		Name = "Command3", ;
		Top = 226, ;
		Width = 84
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Command38' AS commandbutton WITH ;
		Caption = "Try Endtry", ;
		FontSize = 8, ;
		Height = 27, ;
		Left = 661, ;
		Name = "Command38", ;
		Top = 198, ;
		Width = 91
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Command4' AS commandbutton WITH ;
		Caption = "Command4", ;
		Height = 27, ;
		Left = 644, ;
		Name = "Command4", ;
		Top = 127, ;
		Width = 84
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Command5' AS commandbutton WITH ;
		Caption = "Command4", ;
		Height = 27, ;
		Left = 651, ;
		Name = "Command5", ;
		Top = 159, ;
		Width = 84
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Command6' AS commandbutton WITH ;
		Caption = "Command6", ;
		Height = 27, ;
		Left = 628, ;
		Name = "Command6", ;
		Top = 39, ;
		Width = 84
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Command7' AS commandbutton WITH ;
		Caption = "Command7", ;
		Height = 27, ;
		Left = 56, ;
		Name = "Command7", ;
		Top = 387, ;
		Width = 84
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Command8' AS commandbutton WITH ;
		Caption = "Command8", ;
		Height = 27, ;
		Left = 393, ;
		Name = "Command8", ;
		Top = 13, ;
		Width = 84
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Command9' AS commandbutton WITH ;
		Caption = "Command9", ;
		Height = 27, ;
		Left = 307, ;
		Name = "Command9", ;
		Top = 412, ;
		Width = 84
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Image1' AS image WITH ;
		Height = 17, ;
		Left = 647, ;
		Name = "Image1", ;
		Top = 308, ;
		Width = 100
		*< END OBJECT: BaseClass="image" />

	ADD OBJECT 'Text1' AS textbox WITH ;
		Height = 21, ;
		Left = 403, ;
		Name = "Text1", ;
		Top = 248, ;
		Width = 181
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'Text2' AS textbox WITH ;
		Alignment = 3, ;
		BorderColor = 114,136,141, ;
		FontSize = 8, ;
		Format = "D", ;
		Height = 21, ;
		Left = 402, ;
		Name = "Text2", ;
		SpecialEffect = 1, ;
		Top = 276, ;
		Value = (cTOD("")), ;
		Width = 63
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'Text3' AS textbox WITH ;
		Alignment = 3, ;
		Height = 23, ;
		Left = 176, ;
		Name = "Text3", ;
		Top = 230, ;
		Value = 0, ;
		Width = 100
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'Text4' AS textbox WITH ;
		Alignment = 3, ;
		Height = 23, ;
		Left = 180, ;
		Name = "Text4", ;
		Top = 257, ;
		Value = 0, ;
		Width = 100
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'Text5' AS textbox WITH ;
		Height = 22, ;
		Left = 22, ;
		Name = "Text5", ;
		Top = 351, ;
		Width = 356
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'Txfechasel1' AS txfechasel WITH ;
		Left = 403, ;
		Name = "Txfechasel1", ;
		Top = 311
		*< END OBJECT: ClassLib="..\clases\mzmanak.vcx" BaseClass="textbox" />

	ADD OBJECT 'Txfechasel2' AS txfechasel WITH ;
		Left = 402, ;
		Name = "Txfechasel2", ;
		Top = 334
		*< END OBJECT: ClassLib="..\clases\mzmanak.vcx" BaseClass="textbox" />
	
	PROCEDURE convertime
		*	PROCEDURE convertime
		LPARAMETERS XDFECHA,XHORA,xnTipoDev
		if vartype(xnTipodev)#"N"
			xnTipodev=0
		endif
		if !Between(xnTipodev,0,2)
			xnTipodev=0
		endif
		if vartype(xdFEcha)#"D"
			xdfecha=Date()
			xhora=time()
		endif
		if vartype(xhora)#"C"
			xhora="00:00:00"
		endif
				
		Local lnDia,lnMes,lnAno,lnHora,lnMinutos,lnSeconds,nat,retime
		Store 0 to lnDia,lnMes,lnAno,lnHora,lnMinutos,lnSeconds,nat
		LOCAL ARRAY gaHora(1)		
		retime=iif(xnTipodev=0,CTOT(""),"")
		lnDia=day(xdfecha)
		lnMes=month(xdfecha)
		lnAno=year(xdfecha)
		nat=ALINES(gaHora,xHora,1,":")
		IF nat>0
			lnHora=VAL(gaHora[1])
		ENDIF
		IF nat>1
			lnMinutos=VAL(gaHora[2])
		ENDIF
		IF nat>2
			lnSeconds=VAL(gaHora[3])
		ENDIF
				
		if Between(lnAno,101,9999) AND  ;
			Between(lnMes,1,12) AND between(lnDia,1,31)
			if xnTipodev=0
				retime=DateTime(lnAno,lnMes,lnDia,lnHora,lnMinutos,lnSeconds)
			else
				retime=dtoc(xdfecha)+Repli(chr(32),xnTipodev);
					+PADL(TRANSFORM(lnHora),2,"0")+":";
					+PADL(TRANSFORM(lnMinutos),2,"0")+":";
					+PADL(TRANSFORM(lnSeconds),2,"0")
			endif
		endif
		RETURN reTime
				
		
	ENDPROC

	PROCEDURE getarchivo
		*PROCEDURE getArchivo
		LPARAMETERS pcFile,pnFirst,pnLast,pcSeparator
		LOCAL lnHand,lnCount,LcGet,LcSTring,;
			lcFile,lnFirst,lnLast,lcSeparator
		STORE 0 TO lnCount
		STORE "" TO lcString
		lnFirst=IIF(!EMPTY(pnFirst) and VARTYPE(pnFirst)="N",pnfirst,4)
		lnLast=IIF(!EMPTY(pnLast) AND VARTYPE(pnLast)="N",pnLast,5)
		lcSeparator=IIF(!EMPTY(pcSeparator) and VARTYPE(pcSeparator)="C",pcSEparator,CHR(45))
		lcFile=pcFile
		
		*<Obtiene el nombre de archivo (o es un parámetro)
		IF VARTYPE(lcFile)#"C" OR EMPTY(lcFile)	
			lcfile=GETFILE("txt")
			IF EMPTY(lcFile)
				RETURN ""
			ENDIF
		ENDIF
		
		*<Intenta abrir archivo>
		lnHand=FOPEN(lcfile,0)
		IF m.lnHand<0
			MESSAGEBOX("No se pudo abrir el archivo "+lcFile)
			RETURN ""
		ENDIF
		
		*<Recorrer el archivo abierto>
		FSEEK(m.lnHand,0,0)
		DO WHILE !FEOF(m.lnHand)
			lcGet=FGETS(m.lnHand,2048)
			lnCount = m.lnCount + 1
			IF BETWEEN(m.lnCount,m.lnFirst,m.lnLast)
				* Se toma el valor sin espacios delante y detrás
				* El archivo puede tener tabuladores (chr(9) que se eliminan
				lcString=m.lcString ;
					+ ALLTRIM(CHRTRAN(m.lcGet,CHR(9),"")) ;
					+ m.lcSeparator
			ENDIF
		ENDDO
		=FCLOSE(m.lnHand)
		
		*<Evaluar resultados>
		IF EMPTY(lcString)
			MESSAGEBOX("No se encontró contenido")
			RETURN ""
		ENDIF
		
		*<Publicar resultados>
		RETURN LEFT(m.lcSTring,LEN(m.lcString)-1)
		
		*ENDPROC
		
		*!*	<Nota>
		*!*	Si los renglones a leer no son contiguos, se puede
		*!*	definir un Array que contenga los números de líneas.
		*!*	También se puede identificar un inicio de área de
		*!*	lectura (determinar tags).
		*!*	Por ejemplo, este texto tiene etiquetas tipo xml
		*!*	<PICTURE>imaarenaaten31.bmp</PICTURE>
		*!*	<TITLE>Mercaderías Transportadas</TITLE>
		*!*	<ICON>c:\theodore\graphics\fibona5inv.ico</ICON>
		*!*	<BACKCOLOR>RGB(184,201,197)</BACKCOLOR>
		*!*	<METOD>PICTURE</METOD>
		*!*	</Nota
		
	ENDPROC

	PROCEDURE getcopy
		LPARAMETERS xnCopias,xnSize
		CLEAR TYPEAHEAD
		LOCAL fsObj,lcSource,lcDestino,lnAcumSize,lnAcumCopy,lStop
		STORE 0 TO lnAcumSize,lnAcumcopy
		ADDPROPERTY(_Screen,"gaFallas[1]",null)
		ADDPROPERTY(_screen,"gnFallas",0)
		*xcCarpeDes=xcCArpedes+"\"
		lcTitulo="Copiando archivos * "
		_screen.Forms(1).Caption=lcTitulo+"0% realizado"
		fsObj=CreateObject('Scripting.FileSystemObject')
		SELECT curFiles
		SET ORDER TO
		SCAN FOR getcopy
			RELEASE loEx
			IF lStop
				lnMess=MESSAGEBOX("Desea interrumpir la copia?",4,PROGRAM())
				IF lnMess=6
					_Screen.InterrupCopy=.t.
					EXIT
				ENDIF
				lStop=.f.
			ENDIF
			
			TRY
				LOCAL loex as Exception
				
				lcSource=ALLTRIM(filenames)
				? " Copiando "+LOWER(lcSource)+" » ";
					+LTRIM(TRANSFORM(curfiles.sizes,"999,999,999,999"));
					+" kb ..."
				lcDestino=ADDBS(JUSTPATH(busfiles))
				FSObj.CopyFile(lcSource,lcDestino)
				replace docopy WITH .t.
			CATCH TO loEx
				
				_screen.gnFallas=_screen.gnFallas + 1
				DIMENSION _screen.gaFallas(_screen.gnFallas)
				_screen.gaFallas[_screen.gnFallas]=lcSource+" "+loex.Message
			FINALLY
				lnACumSize=lnAcumSize + curFiles.Sizes
				lnAcumCopy=lnAcumCopy + 1
				_screen.Forms(1).Caption=lcTitulo;
					+TRANSFORM(ROUND(lnAcumSize/xnSize*100,2) ,"999.99")+"% realizado » ";
					+TRANSFORM(lnAcumCopy)+"/"+TRANSFORM(xnCopias)+" Archivos";
					+"  [F8]=Cancel"
				
			ENDTRY
			IF INKEY()=-7
				lStop=.t.
			ENDIF
			
		ENDSCAN
		
		
	ENDPROC

	PROCEDURE getmunicip
		LPARAMETERS xcProvin
		WITH thisform.pgfGran.page2.combo2
			.Clear
			.RowSource=""
		ENDWITH
		
		
		IF USED("pepe")
			SELECT pepe
			USE
		ENDIF
		SELECT ciudad,cpostal,provincia,codprov ;
			FROM zip_code ;
			WHERE codprov=xcProvin ;
			INTO CURSOR pepe
		SELECT pepe
		GO top
		WITH thisform.pgfGran.page2.combo2
			.clear
			.boundcolumn=3
			.ControlSource='pepe.cpostal'
			.RowSourcetype=2
			.rowSource='pepe.ciudad,provincia,cpostal'
			.ColumnCount=3
			.ColumnWidths="150,120,50"
			.ColumnLines=.f.
			.Fontsize=8
			.Style=2
			.SpecialEffect=1
			.BorderColor=RGB(114,136,141)		
			.Sorted=.t.
			.requery
			.refresh
		ENDWITH
		
	ENDPROC

	PROCEDURE grefresh
		LOCAL lnEvents,obj,oControl
		LOCAL ARRAY gaEvents(1)
		lnEvents=AEVENTS(gaEvents,0)
		IF lnEvents=0
			RETURN
		ENDIF
		obj=gaEvents[1]
		FOR EACH oControl IN obj.Controls
			IF oControl.baseclass="Grid"
				oControl.refresh
			ENDIF
		ENDFOR
		
		
	ENDPROC

	PROCEDURE Init
		LOCAL obf,objCreate,LcScript
		TEXT TO lcScript TEXTMERGE NOSHOW PRETEXT 1
		LPARAMETERS poForm
		poForm.Text2.Value=_screen.fechasel
		poForm.text2.setfocus
		ENDTEXT
		
		
		obf=NEWOBJECT("funmanak","mzmanak","",.t.)
		ObjCreate=obf.getmanak(thisform,60,3,lcScript)
		obf=null
		ObjCreate.manak_bind()
		
		
		
	ENDPROC

	PROCEDURE nombremes
		LPARAMETERS xnMes,xnFlag
		* xnMes: Número de mes, puede ser caracter
		* xnFlag: 0 (.F.), Nada (Proper)
		*		  1        Upper
		*		  2        Lower
		*         4        Short  
		* NombreMes( 5 , 1 + 4 ) -> "MAY"
		*------------------------------------------ 	
		IF VARTYPE(xnMes)="C"
			xnMes=VAL(xnMes)
		ENDIF
		IF VARTYPE(xnMes)#"N" OR EMPTY(xnMes)
			xnMes=MONTH(DATE())
		ENDIF
		IF VARTYPE(xnFlag)#"N"
			xnFlag=0
		ENDIF
		IF !INLIST(xnFlag,0,1,2,4,5,6)
			xnFlag=0
		ENDIF
		
		local lcMes,lcName
		lcmes="Enero,Febrero,Marzo,Abril,Mayo,Junio,Julio,Agosto,Septiembre,Octubre,Noviembre,Diciembre"
		lcName=GetWordNum(lcMes,xnMes,",")
		DO case
			CASE INLIST(xnFlag,0,4)
				lcName=IIF(xnFlag=4,LEFT(lcName,3),LcName )
			CASE INLIST(xnFlag,1,5)
				lcName=UPPER(IIF(xnFlag=5,LEFT(lcName,3),LcName))
			CASE INLIST(xnFlag,2,6)
				lcName=LOWER(IIF(xnFlag=6,LEFT(lcName,3),LcName))
		ENDCASE
		RETURN lcName
		
	ENDPROC

	PROCEDURE older
		*!*				DO case
		*!*					CASE LEFT(lcpatFolder,1)="*"
		*!*						lcMira=chrtran(lcpatFolder,"*","")
		*!*						FOR j=3 TO lnfolder
		*!*							IF RIGHT(gapath[j],LEN(lcMira))==lcMira
		*!*								lExclude=.t.
		*!*								EXIT
		*!*							ENDIF
		*!*							IF !llAll
		*!*								EXIT
		*!*							ENDIF
		*!*						NEXT
		*!*					
		*!*					CASE RIGHT(lcpatFolder,1)="*"
		*!*						lcMira=chrtran(lcpatFolder,"*","")
		*!*						FOR j=3 TO lnfolder
		*!*							IF LEFT(gapath[j],LEN(lcMira))==lcMira
		*!*								lExclude=.t.
		*!*								EXIT
		*!*							ENDIF
		*!*							IF !llAll
		*!*								EXIT
		*!*							ENDIF
		*!*						NEXT			
		*!*				
		*!*					CASE AT("?",lcpatFolder)>0
		*!*						FOR j=3 TO lnfolder
		*!*							lResult=thisform.compare_string(gapath[j],lcpatFolder)
		*!*							IF lREsult
		*!*								lExclude=.t.
		*!*								EXIT
		*!*							ENDIF
		*!*							IF !llAll
		*!*								EXIT
		*!*							ENDIF
		*!*						NEXT
		*!*					
		*!*				
		*!*					OTHERWISE
		
		*!*				ENDCASE
	ENDPROC

	PROCEDURE radir
		LPARAMETERS xcDir,xcParam,xcDirCopy
		*<ControlParameters>
		IF VARTYPE(xcDir)#"C" OR EMPTY(xcDir) OR !DIRECTORY(xcDir)
			MESSAGEBOX("Directorio inválido",0,PROGRAM())
			RETURN
		ENDIF
		IF VARTYPE(xcParam)#"C"
			xcParam=""
		ENDIF
		*</ControlParameters>
		
		*<screenDefinitions>
		ADDPROPERTY(_screen,"InterrupRead",.f.)
		ADDPROPERTY(_screen,"InterrupCopy",.f.)
		*</screenDefinitions>
		
		*<LocalDefinitions>
		LOCAL lcExcFolders,lRootOnly,lcExcFiles,lcIncFiles,lnParam,i,j,;
			lnExcFolders,lnExcFiles,lnIncFiles,lDoit,lExclude,lcPath,;
			lInclude,lcRuta,lnr,lcput,lnHand,lcFile,lnDirCopy,lcDirCopy,;
			lcDirBusca,lnCopies,lnMax,o,lcPatFolder,lnSumary,;
			lnOmitForIdentical,lnOmitForOldDate,lnReccount,;
			lnCancelCopy,lnOther,lnCounted,lnCopied
			
		STORE "" TO lcExcFolders,lcExcFiles,lcIncFiles
		STORE 0 TO LnExcFolders,lnExcFiles,lnIncFiles,lnDirCopy,lnmax,;
			lnOmitForIdentical,lnOmitForOldDate,lnReccount,;
			lnCancelCopy,lnSumary,lnOther,lnCounted,lnCopied
		STORE .t. TO lRootOnly
		LOCAL ARRAY gaparam(1),;
				gaExcFolders(1),;
				gaExcFiles(1),;
				gaIncFiles(1),;
				gaPath(1),;
				gaRoot(1),;
				gaDirCopy(1)
		
		* Tags
		* <excFolder=[All]back*,pep??no/><ExcFiles=cab*.*/><IncFiles=*.xl*,*.do*/>
		* <excFolders<All>><ExcFiles><IncFiles>
		
		*</LocalDefinitions>
		
		*<ParametersParser>
		? " Parser de parámetros..."
		lnParam=ALINES(gaparam,UPPER(xcparam),16,"/>")
		FOR i=1 TO lnParam
			lcTag=UPPER(CHRTRAN(gaParam[i],"</>"+CHR(32),""))
			DO case
				CASE LEFT(lcTag,LEN("excfolders="))=="EXCFOLDERS="
		
					lnExcFolders=ALINES(gaExcFolders,SUBSTR(lcTag,LEN("EXCFOLDERS=")+1),5,",")
		
				CASE LEFT(lcTag,LEN("excfiles="))=="EXCFILES="
					lnExcFiles=ALINES(gaExcFiles,SUBSTR(lcTag,LEN("EXCFILES=")+1),5,",")
				CASE LEFT(lcTag,LEN("INCFILES="))=="INCFILES="
					lnIncFiles=ALINES(gaIncFiles,SUBSTR(lcTag,LEN("INCFILES=")+1),5,",")
					
			
			ENDCASE
		ENDFOR
		lcAdd="excFolders="
		
		
		*<CreateForm>
		oform=NEWOBJECT("Form")
		WITH oform
			.ControlBox=.f.
			.BackColor= RGB(255,247,230)
			.FontName="Arial"
			.FontSize=8
			.Height=CEILING(_Screen.Height*0.70)
			.Width=CEILING(_Screen.width*0.70)
			.Autocenter=.t.
			.Alwaysontop=.t.
			.Caption="Buscando Carpetas y Archivos en "+xcDir
			.Show()
		ENDWITH
		
		*</CreateForm>
		
		*<CreateCursor>
		? " Creando un cursor..."
		IF USED("curFiles")
			SELECT curFiles
			USE
		ENDIF
		CREATE CURSOR curFiles ;
		("FILENAMES" M ,;
		"SIZES" N(15,0),;
		"FECHABAS" T,;
		"BUSFILES" M,;
		"BUSSIZES" N(15,0),;
		"BUSFECHA" T,;
		"IDENTIF" N(15,0),;
		"EXCBYFOLD" L,;
		"EXCBYFILE" L,;
		"INCBYFILE" L,;
		"GETCOPY" L,;
		"IDENTIS" L,;
		"OLDFECHA" L,;
		"DOCOPY" L)
		*</CreateCursor>
		
		*<RecursiveProc>
		thisform.rdir(xcDir,"curFiles",.f.)
		*</RecursiveProc>
		
		*<Parameters revision>
		? " Revisando parámetros de inclusión y exclusión..."
		SELECT curFiles
		SCAN
			lcPath=UPPER(JUSTPATH(filenames))
			lcFile=UPPER(JUSTFNAME(filenames))
		
			STORE .F. TO lExclude, lInclude
			IF lnIncFiles>0
				replace getcopy WITH .f.
			ENDIF
			
			* ExcludeFolder
			lnFolder=ALINES(gaPath,lcPath,5,"\")
		
			IF lnFolder>2	
				FOR i=1 TO lnExcFolders
					llAll=.f.
					lcPatFolder=UPPER(gaExcFolders[i])
					IF AT("[ALL]",lcPatFolder)>0
						lcpatFolder=STRTRAN(lcPatFolder,"[ALL]","")
						llall=.t.
					ENDIF
					
					FOR j=3 TO lnFolder
						lREsult=LIKE(lcPatFolder,gapath[j])
						IF lREsult
							lExclude=.t.
							EXIT
						ENDIF
						IF llAll
							EXIT
						ENDIF
						
					
					next
					replace excbyfold WITH lExclude
					IF lExclude
						EXIT
					ENDIF
				
				NEXT
			ENDIF
			
			* ExcludeFiles
			IF !lExclude
				FOR i=1 TO lnExcFiles
					lREsult=LIKE(gaExcFiles[i],lcFile)
					IF lREsult
						lExclude=.t.
						EXIT
					ENDIF
				NEXT
			ENDIF
			replace EXCBYFILE WITH lExclude
			
			* IncludeFiles
			IF !lExclude
				FOR i=1 TO lnIncFiles
					lREsult=LIKE(gaIncFiles[i],lcFile)
					IF lREsult
						lInclude=.t.
						EXIT
					ENDIF
				NEXT	
			ENDIF
			replace INCBYFILE WITH lInclude
			
			IF !incByFile
				IF excByFold OR excByFile
					replace getcopy WITH .f.
				ENDIF
			ENDIF
		
			
		ENDSCAN
		
		*</Parameters revision>
		
		*<DetermineCopy>
		? " Recuento y finalización de exploración inicial."
		SELECT curFiles
		
		
		? " Creando las rutas de destino de copias..."
		SCAN
			DO CASE 
				CASE AT(":",filenames)>0
					LcIdentif=SUBSTR(filenames,AT(":",filenames)+2)
					replace busfiles WITH ADDBS(xcDirCopy);
						+lcIdentif
				CASE RIGHT(filenames,2)="\\"
					lcIdentif=SUBSTR(filenames,AT("\",filenames,3)+1)
					replace busfiles WITH ADDBS(xcDirCopy);
						+lcIdentif
			ENDCASE
			replace identif WITH VAL(SYS(2007,lcIdentif,0,1))
		
			
		ENDSCAN
		
		? " Indexando el cursor generado..."
		INDEX on identif TAG icurfiles
		
		GO top
		? " Verificando existencia de carpetas de destino..."
		FOR i=1 TO _screen.gnDirs
			lcRuta=_screen.gadirs[i]
			DO case
				CASE AT(":",lcRuta)#0
					lcRuta=ADDBS(xcDirCopy);
						+SUBSTR(lcRuta,AT(":",lcRuta)+2)	
				CASE RIGHT(lcRuta,2)=="\\"
					lcRuta=ADDBS(xcDirCopy);
						+SUBSTR(lcRuta,AT("\",lcruta,3)+1)
				
			ENDCASE
		
			lnr=ALINES(gaRoot,lcRuta,1,"\")
			lcRuta=""
			FOR j=1 TO lnr
				lcRuta=lcRuta+IIF(EMPTY(lcRuta),"","\")+PROPER(gaRoot[j])
			NEXT
			
			IF !DIRECTORY(lcRuta)
				lcRuta=thisform.Suredir(lcruta)
				MD &lcRuta
			ENDIF
		ENDFOR
			
		*</DetermineCopy>
		
		*<BuscaDestino>
		DO CASE 
			CASE AT(":",xcDir)#0
				lcDirBusca=ADDBS(xcDirCopy);
					+SUBSTR(xcdir,AT(":",xcDir)+2)
			CASE LEFT(xcDir,2)="\\"
				lcDirBusca=ADDBS(xcDirCopy);
					+SUBSTR(xcDir,AT("\",xcDir,3)+1)
		ENDCASE
		oform.Caption="Buscando en "+LOWER(xcDirCopy)
		Thisform.rdest(lcDirBusca,xcDirCopy,"curFiles","icurfiles",.f.)
		oform.caption="Preparando para copiar "+LOWER(xcDir)+" » "+LOWER(xcDirCopy)
		*</BuscaDestino>
		
		*<Backup>
		SELECT curFiles
		COUNT FOR getcopy TO lnCopies
		SUM sizes ALL FOR getcopy TO lnSizes
		IF lnCopies>0
			thisform.getcopy(lnCopies,lnSizes)
		ELSE
			MESSAGEBOX("No es necesario copiar nada",0,program,1500)
		ENDIF
		
		*</Backup>
		*<ReleaseForm>
		oform.release
		oform=null
		*</ReleaseForm>
		
		*<Summary>
		SELECT curFiles
		SCAN
			lnMax=MAX(lnMax,LEN(filenames))
		ENDSCAN
		
		
		lcfile=ADDBS(dtemp)+"rvDir.txt"
		lnhand=FCREATE(lcFile)
		=FPUTS(lnHand,"<target>"+xcDir+"</target>")
		=FPUTS(lnHand,"<dirs>"+TRANSFORM(_screen.gnDirs)+"</dirs>")
		=FPUTS(lnHand,"<files>"+TRANSFORM(LnCopies)+"</files>")
		=FPUTS(lnHand,"<size>"+TRANSFORM(lnSizes)+"</size>")
		
		=FPUTS(lnHand,"<folders>")
		FOR i=1 TO _screen.gndirs
			=FPUTS(lnHand,CHR(9)+_Screen.gaDirs[i])
		NEXT
		=FPUTS(lnHand,"</folders>")
		
		
		SELECT curfiles
		COUNT FOR docopy TO lnDoCopy
		IF lnDoCopy=0
			=FPUTS(lnHand,"<FilesCopied= />")
		ELSE
			=FPUTS(lnHand,"<FilesCopied>")
			SCAN FOR docopy
				=FPUTS(lnHand,CHR(9)+"<file>"+PADR(filenames,lnMax)+" ";
					+TRANSFORM(sizes,"999,999,999,999")+" ";
					+TTOC(fechabas)+"</file>")
			ENDSCAN
			=FPUTS(lnHand,"</FilesCopied>")
		ENDIF
		
		SELECT curFiles
		lnReccount=RECCOUNT()
		
		COUNT FOR excbyfold TO lnOmitbyFold
		IF lnOmitByFold=0
			=FPUTS(lnHand,"<OmitbyFold= />")
		ELSE
			=FPUTS(lnHand,"<OmitedbyFold>")
			=FPUTS(lnHand,CHR(9)+"<Omited="+TRANSFORM(lnOmitbyfold)+"/>")
			SCAN FOR excbyfold
				=FPUTS(lnHand,CHR(9)+"<file>"+filenames+"</file>")
			ENDSCAN
			=FPUTS(lnHand,"</OmitedbyFold>")
		ENDIF
		
		COUNT FOR excbyfile AND !excbyfold TO lnOmitbyFile
		IF lnOmitByFile=0
			=FPUTS(lnHand,"<OmitbyFile= />")
		ELSE
			lnOmitByFile=0
			=FPUTS(lnHand,"<OmitedbyFile>")
			=FPUTS(lnHand,CHR(9)+"<Omited="+TRANSFORM(lnOmitbyfile)+"/>")	
			SCAN FOR excbyfile 
				IF !excbyFold
					lnOmitByFile=lnOmitByFile + 1
					=FPUTS(lnHand,CHR(9)+"<file>"+filenames+"</file>")
				ENDIF
				
			ENDSCAN
			=FPUTS(lnHand,"</OmitedbyFile>")
		ENDIF
		
		COUNT FOR IDENTIS TO lnOmitForIdentical
		IF lnOmitForIdentical=0
			=FPUTS(lnHand,"<OmitForIdentical= />")
		ELSE
			=FPUTS(lnHand,"<OmitForIdentical>")
			=FPUTS(lnHand,CHR(9)+"<Omited="+TRANSFORM(lnOmitForIdentical)+"/>")	
			SCAN FOR identis
				=FPUTS(lnHand,CHR(9)+"<file>"+filenames+"</file>")
			ENDSCAN
			=FPUTS(lnHand,"</OmitForIdentical>")
		ENDIF
		
		COUNT FOR oldfecha TO lnOmitForOldDate
		IF lnOmitForOldDate=0
			=FPUTS(lnHand,"<OmitForOldDate= />")
		ELSE
			=FPUTS(lnHand,"<OmitForOldDate>")
			=FPUTS(lnHand,CHR(9)+"<Omited="+TRANSFORM(lnOmitForOldDate)+"/>")	
			SCAN FOR identis
				=FPUTS(lnHand,CHR(9)+"<file>"+filenames+"</file>")
			ENDSCAN
			=FPUTS(lnHand,"</OmitForOldDate>")
		ENDIF
		
		IF _screen.gnFallas>0
			=FPUTS(lnHand,"<fallas>")
			=FPUTS(lnHand,"CHR(9)+<Omited="+TRANSFORM(_screen.gnFallas)+"/>")
			FOR i=1 TO _screen.gnFallas
				=FPUTS(lnHand,CHR(9)+"<file>"+_screen.gaFallas[i]+"</file>")
			NEXT
			=FPUTS(lnHand,"</fallas>")
		ELSE
			=FPUTS(lnHand,"<fallas= />")
		ENDIF
		
		IF _Screen.InterrupCopy
			=FPUTS(lnHand,"<CopyCanceledByUser>")
			SCAN FOR getCopy AND !docopy
				lnCancelCopy = lnCancelCopy + 1
				=FPUTS(lnHand,CHR(9)+"<file>"+filenames+"</files>")	
			ENDSCAN
				
			=FPUTS(lnHand,"</CopyCanceledByUser>")
		ENDIF
		
		COUNT FOR docopy TO lnCopied
		COUNT TO lnCounted
		
		
		
		
		lnSumary=lnOmitbyFold;
			+lnOmitbyFile;
			+lnOmitForIdentical;
			+lnOmitForOldDate ;
			+_screen.gnFallas ;
			+lnCancelCopy ;
			+lnCopied
		
		=FPUTS(lnHand,"<Summary>")
		=FPUTS(lnHand,CHR(9)+"<Files="+TRANSFORM(lnReccount)+"/>")
		=FPUTS(lnHand,CHR(9)+"<Copied="+TRANSFORM(lnCopied)+"/>")
		=FPUTS(lnHand,CHR(9)+"<OmitedbyFolder="+TRANSFORM(lnOmitbyFold)+"/>")
		=FPUTS(lnHand,CHR(9)+"<Omitedbyfile="+TRANSFORM(lnOmitbyFile)+"/>")
		=FPUTS(lnHand,CHR(9)+"<OmitedIdentical="+TRANSFORM(lnOmitForIdentical)+"/>")
		=FPUTS(lnHand,CHR(9)+"<OmitedOldDate="+TRANSFORM(lnOmitForOldDate)+"/>")
		=FPUTS(lnHand,CHR(9)+"<OmitedforFalls="+TRANSFORM(_screen.gnFallas)+"/>")
		=FPUTS(lnHand,CHR(9)+"<CanceledByUser="+TRANSFORM(lnCancelCopy)+"/>")
		=FPUTS(lnHand,CHR(9)+"<ControlCount="+TRANSFORM(lnSumary)+"/>")
		=FPUTS(lnHand,"</Summary>")
		=FCLOSE(lnHand)
		
		*</Summary>
		
		*<garbage>
		FOR i=1 TO ALINES(gaProp,"gnFiles,gaDirs,gnDirs,gaFallas,gnFallas,;
			interrupCopy,interrupRead",1,",")
			IF PEMSTATUS(_Screen,gaProp[i],5)
				REMOVEPROPERTY(_screen,gaProp[i])
			ENDIF
		NEXT
		IF USED("CURFILES")
			SELECT CURFILES
			USE
		ENDIF
		*</garbage>
		
		o = CREATEOBJECT("Shell.Application")
		o.ShellExecute("notepad.exe", '&LcFile', "", "open", 1)
	ENDPROC

	PROCEDURE rdest
		LPARAMETERS xcDir,xcDirCopy,xcNameCur,xcIndice,xlOmitDefine
		
		? " Buscando en "+LOWER(xcdir)+"..."
		IF !xlOmitDefine
			* Reserved for some definitions
		ENDIF
		
		LOCAL LnDir,lnHand,lcfile,lndir,lnItems,i,j,;
			lcFile,lcToma
		LOCAL ARRAY gadFiles(1,5),gaDir(1,5)
		lnDir=0
		lnItems=ADIR(gadFiles,ADDBS(xcDir)+"*.*","DHS")
		FOR i=1 TO lnItems
			IF AT("D",gadFiles[i,5])#0
				DO CASE 
					CASE gadFiles[i,1]==".."
					CASE gadFiles[i,1]=="."
					
					OTHERWISE
					
						LnDir=lnDir+1
						DIMENSION gaDir[lnDir,5]
						FOR j=1 TO 5
							gaDir[lndir,j]=gadFiles[i,j]
						NEXT
				ENDCASE 
			ELSE
				lcFile=ADDBS(xcDir)+gadFiles[i,1]
				lcToma=SUBSTR(lcFile,LEN(xcDirCopy)+2)
				lnCrc=VAL(SYS(2007,lcToma,0,1))
				IF INDEXSEEK(LnCrc,.f.,xcNameCur,xcIndice)
					SELECT (xcNamecur)
					INDEXSEEK(lnCrc,.t.,xcNameCur,xcIndice)
					REPLACE BUSSIZES WITH gadFiles[i,2],;
						busfecha WITH thisform.Convertime(gadFiles[i,3],gadFiles[i,4])
					DO CASE
						CASE FECHABAS=BUSFECHA AND SIZES=BUSSIZES
							REPLACE GETCOPY WITH .F.,IDENTIS WITH .T.
						CASE FECHABAS<BUSFECHA
							REPLACE GETCOPY WITH .F.,OLDFECHA WITH .T.
					ENDCASE
					
				ENDIF
				
			ENDIF		
		NEXT
		FOR i=1 TO lnDir
			thisform.rdest(ADDBS(xcDir)+gaDir[i,1],xcDirCopy,xcNamecur,xcIndice,.t.)
		NEXT
		
	ENDPROC

	PROCEDURE rdir
		LPARAMETERS xcDir,xcNameCur,xlOmitDefine
		? " Buscando en "+LOWER(xcdir)+"..."
		IF !xlOmitDefine
			ADDPROPERTY(_screen,"gnFiles",0)
			ADDPROPERTY(_screen,"gaDirs[1]",null)
			ADDPROPERTY(_screen,"gnDirs",0)
		ENDIF
		_screen.gnDirs=_screen.gnDirs + 1
		DIMENSION _screen.gadirs(_screen.gnDirs)
		_screen.gadirs[_screen.gnDirs]=xcDir
		
		LOCAL LnDir,lnHand,lcfile,lndir,lnItems,i,j
		LOCAL ARRAY gaFiles(1,5),gaDir(1,5)
		lnDir=0
		lnItems=ADIR(gaFiles,ADDBS(xcDir)+"*.*","DHS")
		FOR i=1 TO lnItems
			IF AT("D",gaFiles[i,5])#0
				DO CASE 
					CASE gaFiles[i,1]==".."
					CASE gaFiles[i,1]=="."
					
					OTHERWISE
					
						LnDir=lnDir+1
						DIMENSION gaDir[lnDir,5]
						FOR j=1 TO 5
							gaDir[lndir,j]=gaFiles[i,j]
						NEXT
				ENDCASE 
			ELSE
				_screen.gnFiles=_screen.gnFiles+1
		
					INSERT INTO (xcNameCur) (filenames,sizes,fechabas,getCopy) ;
						VALUES (ADDBS(xcDir)+gaFiles[i,1],gafiles[i,2],;
							thisform.convertime(gaFiles[i,3],gafiles[i,4]),.t.)		
			ENDIF
		NEXT
		FOR i=1 TO lnDir
			thisform.rdir(ADDBS(xcDir)+gaDir[i,1],xcNameCur,.t.)
		NEXT
		
		
		
	ENDPROC

	PROCEDURE shoerror
		LPARAMETERS objExcep,xoForm,xoControl,xlNotLog,xlContinue
		*loExcep,thisform,this,.f.
		LOCAL lLog,lReturn
		lLog=!xlNotLog
		
		lcStore="Ocurrió un error";
			+ CHR(13) + "Fecha: "+TRANSFORM(DATETIME()) ;
			+ CHR(13) + "Error Nro: "+TRANSFORM(objExcep.ErrorNo)
		IF VARTYPE(xoForm)="O"
			lcStore=lcStore;
				+CHR(13)+"Form: "+xoForm.name
		ENDIF
		IF VARTYPE(xoControl)="O"
			lcStore=lcStore+CHR(13);
				+"Control: "+xoControl.name
		ENDIF
		lcStore=lcStore + CHR(13);
			+"Procedure: "+objExcep.procedure ;
			+ CHR(13) + "Sentencia: " + objExcep.linecontents ;
			+ CHR(13) + "Mensaje: " + objExcep.message ;
			+ CHR(13)
		
		       
		IF lLog
			STRTOFILE(lcStore,ADDBS(dtemp)+"Errors.log",.T.)
		ENDIF
		IF xlContinue
			nMess=MESSAGEBOX(lcStore+"Desea Continuar?",4,Th_mensaje)
			lREturn=IIF(nMess=6,.t.,.f.)
		ELSE
			MESSAGEBOX(lcStore+"Imposible Continuar",0,Th_Mensaje)
		ENDIF
		RETURN lReturn
		
	ENDPROC

	PROCEDURE suredir
		LPARAMETERS xcNameDir
		***************************
		* PROCEDURE SUREDIR(xcNameDir)
		****************************
		* Evita la falla de ciertos comandos como CD
		* por rutas que contienen espacios
		*********************************************
		* Versión 11/01/2013
		*********************************************
		xcNameDir=alltrim(xcNameDir)
		cAdd=[']
		IF LEFT(xcNameDir,1)$['"]
			xcNameDir=SUBSTR(xcNameDir,2)
		ENDIF
		IF RIGHT(xcNameDir,1)$['"]
			xcNameDir=SUBSTR(xcNameDir,1,LEN(xcNameDir)-1)
		ENDIF
		lHavSymbol=IIF(AT(['],xcNameDir)#0,.t.,.f.)
		if At(Chr(32),xcNameDir)#0
			xcNameDir=IIF(lHavSymbol,"["+xcNameDir+"]",cAdd+xcNameDir+cAdd)
		ENDIF
		return xcNameDir
	ENDPROC

	PROCEDURE Combo1.Init
		*<Combo1.Init>
		ADDPROPERTY(thisform,"miselec","")
		WITH this
			.Clear
			.ControlSource='thisform.miselec'
			.BoundColumn=2		&& Columna que corresonde al valor de Thisform.Miselec
			.RowSourceType= 0	&& para trabajar con AddItem o AddListItem
			.Style= 2			&& no permite agregar valores directamente
			.SpecialEffect= 1	&& borde plano
			.BorderColor= RGB(114,136,141)
			.FontSize=8
			.AddListItem("(Seleccione Opción)",1,1)
			.AddListItem("",1,2)
			.AddListItem("Hola",2,1)
			.AddListItem("H",2,2)
			.AddListItem("Chau",3,1)
			.AddListItem("C",3,2)
			.AddListItem("Adiós",4,1)
			.AddListItem("A",4,2)
			.Requery
			.Refresh
		ENDWITH
		*</Combo1.Init>
		
			
	ENDPROC

	PROCEDURE Combo1.InteractiveChange
		*<Combo1.InteractiveChange>
		LOCAL lnItem
		lnItem=this.ListItemId
		IF !EMPTY(lnItem)
			MESSAGEBOX("Ha Seleccionado "+this.ListItem(lnItem,1)+CHR(13);
				+"Opción Correspondiente="+this.ListItem(lnItem,2))
		ENDIF
		*</Combo1.InteractiveChange>
				
	ENDPROC

	PROCEDURE Command1.Click
		LOCAL nl
		nl=0
		
		TRY
			LOCAL loExcep as Exception,lContinue
			lContinue=.t.
			nl=ALINES(la, FILETOSTR(GETFILE("TXT")),0,CHR(10))
			nl=nl+thisform.num
			MESSAGEBOX(TRANSFORM(nl)+" párrafos encontrados")
		CATCH TO loExcep
		
			lContinue=thisform.shoerror(loExcep,thisform,this,.f.,.f.)
		
		
		FINALLY
			RELEASE la
			
		
		ENDTRY
		
	ENDPROC

	PROCEDURE Command10.Click
		TEXT TO lcSelect NOSHOW PRETEXT 15
		select * from tcancelacion a
		where a.fecha>='01-03-2014' and a.fecha<'20-03-2014'
		AND A.CODIGO_CONTRATO!='641' and a.CODIGO_CONTRATO!='581'
		and a.TIPO_OPERACION='1' and a.N_SERIE_CANCELADORA!='3701' 
		AND NOT EXISTS (select b.NUM_TAR from ttprueba b where b.NUM_TAR=a.NUM_TAR)
		ENDTEXT
		
		TEXT TO lcSelect NOSHOW PRETEXT 15
		Esta
		es una
		conversación
		toda
		separada.
		ENDTEXT 
		
		MESSAGEBOX(LCSELECT)
		
	ENDPROC

	PROCEDURE Command11.Click
		LOCAL lnPages,i,lnCount
		*<Creo 5 cursores>
		SELECT * FROM clientes WHERE .t. INTO CURSOR Cursor1
		SELECT * FROM provedor WHERE .t. INTO CURSOR cursor2
		SELECT * FROM personal WHERE .t. INTO CURSOR cursor3
		SELECT * FROM pl_plan WHERE .t. INTO CURSOR Cursor4
		SELECT * FROM zip_code WHERE .t. INTO CURSOR CURSOR5
		
		
		lnPages=5
		thisform.NewObject("pgfMarco","pageframe")
		WITH thisform.pgfMarco
			.pagecount=lnPages
			.Top=10
			.Left=20
			.Height=300
			.Width=400
			.TabStyle=1
			.visible=.t.
			
		ENDWITH
		
		*<Array de asociación (simplificado)>
		LOCAL ARRAY gaFrame(lnpages,2)
		FOR i=1 TO lnPages
			gaFrame[i,1]="Hoja "+TRANSFORM(i)
			gaFrame[i,2]="Cursor"+TRANSFORM(i)
		NEXT
		
		
		lnCount=0
		FOR EACH oPage IN thisform.pgfMarco.pages
			lnCount=lncount+1
			lcName="grdPage"+TRANSFORM(lnCount)
			oPage.NewObject(lcName,"Grid")
			opage.Caption=gaFrame[lnCount,1]
			WITH oPage.&lcName.
				.top=8
				.left=3
				.Width=thisform.pgfMarco.width-6
				.Height=thisform.pgfMarco.Height-36
				.recordSource=gaFrame[lnCount,2]
				.visible=.t.
			ENDWITH	
			BINDEVENT(oPage,"Activate",thisform,"gRefresh")	
		ENDFOR
		
		
	ENDPROC

	PROCEDURE Command12.Click
		
		
		IF USED("PEPE")
			SELECT PEPE
			USE
		ENDIF
		IF USED("pOPO")
			SELECT POPO
			USE
		ENDIF
		
		SELECT usedoc
		*AFIELDS(gaFields)
		COPY TO &dtemp\pusdoc
		USE ADDBS(dtemp)+"pusdoc" IN 0 ALIAS pepe SHARED
		USE ADDBS(dtemp)+"pusdoc" IN 0 again ALIAS popo SHARED
		SELECT PEPE
		SET FILTER TO EMPTY(IDFORM)
		SELECT POPO
		SET FILTER TO !EMPTY(IDFORM)
		
		
		thisform.NewObject("pgfMarco","pageframe")
		WITH thisform.pgfMarco
			.pagecount=2
			.Top=10
			.Left=20
			.Height=300
			.Width=400
			.TabStyle=1
			.visible=.t.
			
		ENDWITH
		WITH thisform.pgfMarco.Page1
			.Caption="Info Pag 1"
			.FontSize=8
			.BackColor= RGB(220,228,224)
		ENDWITH
		WITH thisform.pgfMarco.Page2
			.Caption="Info Pag 2"
			.FontSize=8
			.BackColor= RGB(220,228,224)
		ENDWITH
		thisform.pgfmarco.page1.NewObject("grdPage1","Grid")
		thisform.pgfmarco.page2.NewObject("grdPage2","Grid")
		WITH thisform.pgfmarco.page1.grdPage1
			.top=8
			.left=3
			.Width=thisform.pgfMarco.width-6
			.Height=thisform.pgfMarco.Height-36
			.recordSource="Cursor1"
			.visible=.t.
		ENDWITH
		WITH thisform.pgfmarco.page2.grdPage2
			.top=8
			.left=3
			.Width=thisform.pgfMarco.width-6
			.Height=thisform.pgfMarco.Height-36
			.recordsource="Cursor2"
			.visible=.t.
		ENDWITH
		BINDEVENT(thisform.pgfMarco.Page1,"Activate",thisform,"gRefresh")
		BINDEVENT(thisform.pgfMarco.Page2,"Activate",thisform,"grefresh")
		
		RETURN
		
		*<Thisform.gRefresh>
		LOCAL lnEvents,obj,oControl
		LOCAL ARRAY gaEvents(1)
		lnEvents=AEVENTS(gaEvents,0)
		IF lnEvents=0
			RETURN
		ENDIF
		obj=gaEvents[1]
		FOR EACH oControl IN obj.Controls
			IF oControl.baseclass="Grid"
				oControl.refresh
			ENDIF
		ENDFOR
		
		*</Thisform.gRefresh>
		
		
		
	ENDPROC

	PROCEDURE Command13.Click
		IF PEMSTATUS(_screen,"CntScreen",5)
			_screen.RemoveObject("CntScreen")
		ENDIF
		_screen.newobject("CntScreen","Container")
		WITH _screen
			.CntScreen.Height=100
			.cntScreen.Width=200
			.CntScreen.Top=CEILING(.Height/2 - .CntScreen.Height/2)
			.CntScreen.Top=CEILING(.Height/2 - .CntScreen.height/2)
			.CntScreen.Left=CEILING(.width/2 - .cntScreen.width/2)
			.cntScreen.zorder(0)
			.cntScreen.Visible=.t.
		ENDWITH
		_Screen.CntScreen.NewObject("shpMess","Shape")
		_Screen.CntScreen.NewObject("lblMess","Label")
		WITH _screen.CntSCreen
			.Borderwidth=0
			.backstyle=0
			.shpMess.top=1
			.shpMess.left=1
			.shpmess.Width=.Width-1
			.shpmess.Height=.height-1
			.shpmess.backColor=RGB(221,226,222)
			.shpmess.SpecialEffect= 0
			.shpMess.visible=.t.
			
			
			.lblMess.Caption="Theodore Ensayos"
			.lblMess.backstyle=0
			.lblMess.FontSize=9
			.lblMess.FontBold=.t.
			.lblMess.Autosize=.t.
			.lblMess.Visible=.t.
			.lblMess.top=CEILING(.Height/2 - .lblMess.Height/2)
			.lblMess.left=CEILING(.width/2 - .lblMess.width/2)
			.lblMess.visible=.t.
		ENDWITH
		
	ENDPROC

	PROCEDURE Command14.Click
		thisform.NewObject("pgfVista","pFrame","Pariente.vcx")
		WITH thisform.pgfVista
			.newobject("Page1","pPage","Pariente.vcx")
			.Newobject("Page2","pPage","Pariente.vcx")
			.top=40
			.left=200
			.height=200
			.width=250
			.visible=.t.
			*.Page1.visible=.t.
			*.page2.visible=.t.
		ENDWITH
		
		
		
	ENDPROC

	PROCEDURE Command15.Click
		lcFile=GETFILE("bmp")
		IF !EMPTY(lcfile)
		*	thisform.image1.Picture=lcfile
			CREATE CURSOR pepe ("fotos" M)
			INSERT INTO pepe (fotos) VALUES (lcfile)
			thisform.image1.Picture=ALLTRIM(pepe.fotos)
		ENDIF
		
	ENDPROC

	PROCEDURE Command2.Click
		obf=NEWOBJECT("funmanak","mzmanak","",.t.)
		obf.getmanak(thisform)
		obf=null
	ENDPROC

	PROCEDURE Command3.Click
		MESSAGEBOX(thisform.nombremes(thisform.text3.Value,thisform.text4.value))
	ENDPROC

	PROCEDURE Command38.Click
		nl=0
		TRY
			nl=ALINES(la, FILETOSTR(GETFILE("TXT")),0,CHR(10))
		
		CATCH TO oException
		
		   IF oException.ErrorNo = 1
		
		      STRTOFILE("Error occurred at: " + TRANSFORM(DATETIME());
		      	 + CHR(13) + this.Name+"."+oException.procedure ;      	
		      	 + CHR(13) + oException.linecontents ;
		      	 + CHR(13) + oException.message ;
		         + CHR(13),ADDBS(dtemp)+"Errors.log",.T.)
		
			*  terr=terr
		
		   ENDIF
		
		FINALLY
			IF nl#0
				MESSAGEBOX(TRANSFORM(nl)+" párrafos encontrados")
			ENDIF
			
		
		ENDTRY
		
	ENDPROC

	PROCEDURE Command4.Click
		thisform.cnt1.ZOrder(0)
		
	ENDPROC

	PROCEDURE Command5.Click
		thisform.cnt1.ZOrder(1)
		
	ENDPROC

	PROCEDURE Command6.Click
		LOCAL lnPosicion,lnTimer,lNotOnTop,oCondiShut,;
			lcCaption,lcScriptDestroy,lBindHide,;
			lcNameMenu,nLis,nCol,i
		nLis=8
		NcOL=6
		LOCAL ARRAY gaMenu(nLis,nCol),afecha(nLis)
		*Store "" to gaMenu
		
		gaMenu[1,1]=" Facturas de Proveedores Pendientes de Pago"
		gaMenu[2,1]=" Facturas a Clientes no canceladas a una fecha"
		gaMenu[3,1]=" Cheques en Cartera a una Fecha Determinada"
		gaMenu[4,1]=" Cheques de Pago Diferido y Valores en Giro"
		gaMenu[5,1]=" Cupones Presentados no Acreditados"	
		gaMenu[6,1]=" Incorporaciones de Bienes de Uso"
		gaMenu[7,1]=" Depósitos a Plazo Fijo no Rescatados"
		gaMenu[8,1]=" Inventario Probable al Cierre"		
			
		gaMenu[1,2]="<DOFORM>KORDVIM2</DOFORM>"
		gaMenu[2,2]="<DOFORM>KORDVIM1</DOFORM>"
		
		TEXT TO lcScript TEXTMERGE NOSHOW PRETEXT 1
		LOCAL OBJ
		OBJ=NEWOBJECT("Rutin","calcuviar.vcx","",.t.)
		obj.ValCarPend("VOLANTE")
		OBJ=null
		ENDTEXT
		gaMenu[3,2]="<SCRIPT>"+lcScript+"</SCRIPT>"
		
		TEXT TO lcScript TEXTMERGE NOSHOW PRETEXT 1
		LOCAL OBJ
		OBJ=NEWOBJECT("Rutin","calcuviar.vcx","",.t.)
		obj.cHEPADIF()
		OBJ=null
		ENDTEXT
		gaMenu[4,2]="<SCRIPT>"+lcScript+"</SCRIPT>"
		
		TEXT TO lcScript TEXTMERGE NOSHOW PRETEXT 1
		LOCAL OBJ
		OBJ=NEWOBJECT("Rutin","calcuviar.vcx","",.t.)
		obj.TARPENDING()
		OBJ=null
		ENDTEXT
		
		gaMenu[5,2]="<SCRIPT>"+lcScript+"</SCRIPT>"
		
		TEXT TO lcScript TEXTMERGE NOSHOW PRETEXT 1
		LOCAL OBJ
		OBJ=NEWOBJECT("Rutin","calcuviar.vcx","",.t.)
		obj.BIENDUSO()
		OBJ=null
		ENDTEXT
		gaMenu[6,2]="<SCRIPT>"+lcScript+"</SCRIPT>"
		
		TEXT TO lcScript TEXTMERGE NOSHOW PRETEXT 1
		LOCAL OBJ
		OBJ=NEWOBJECT("Rutin","calcuviar.vcx","",.t.)
		obj.PLAFIPEND()
		OBJ=null
		ENDTEXT
		gaMenu[7,2]="<SCRIPT>"+lcScript+"</SCRIPT>"
		
		
		gaMenu[8,2]="<DOFORM>TELCOMPRINV</DOFORM>"
		
		nlis=nlis+1
		DIMENSION gamenu(nlis,6)
		gaMenu[nlis,1]=[\<Cerrar Formularios]
		gaMenu[nlis,2]="<CLOSEMYFORMS/>"
		gaMenu[nlis,3]=.t.
		
		
		lcMensaje="Desea cerrar el Menú?"+CHR(13)+"Se cerrarán todos los formularios dependientes"
		nlis=nlis+1
		DIMENSION gamenu(nlis,6)
		gaMenu[nlis,1]=[Ce\<rrar Menú]
		gaMenu[nlis,2]="<CLOSEMYFORMS/><CLOSETHIS/><PREVENT>"+lcMensaje+"</PREVENT>"
		gaMenu[nlis,3]=.t.
		
		FOR I=1 to alen(gaMenu,1)
			gaMenu[i,3]=.t.
			gaMenu[i,4]=i
			gaMenu[i,5]=""
			gaMenu[i,6]=null
		next
		
		*!*	LPARAMETERS xgaARray,;
		*!*		xnPosicion,;
		*!*		xnTimer,;
		*!*		xlNotOntop,;
		*!*		xoCondishut,;
		*!*		xcCaption,;
		*!*		xcSCriptDestroy,;
		*!*		xlBindHide,;
		*!*		xcNameMenu
		
		lnPosicion=5
		lnTimer=3
		lNotOntop=.T.
		oCondishut=null
		lcCaption="Balance » Datos Complementarios"
		lcScriptDestroy=""
		lBindHide=.f.
		lcNameMenu="mnDatComp"
		objMenu=NEWOBJECT("gmenu","thmenu")
		objMenu.GralMenu(@gaMenu,lnPosicion,lnTimer,;
			lNotOnTop,null,lcCaption,lcScriptDestroy,.F.,lcNameMenu,RGB(0,128,192) )
		objMenu=null
		
		
		
		
		*mnConsul[ x ]=.t.
	ENDPROC

	PROCEDURE Command7.Click
		thisform.text5.Value="Hoy es "+transform(day(date()))+" de "+thisform.NombreMes(month(date()))+" de "+transform(year(date()))
	ENDPROC

	PROCEDURE Command8.Click
		LOCAL lcRoot,lcFileName		&& pueden ser parámetros
		local oWsh,objShell,lcFileOPen
		
		* Para el ejemplo tengo un pdf en Mis Documentos
		* Detecto la ubicación de Mis Documentos con WScript.Shell
		oWsh = CREATEOBJECT("WScript.Shell")
		lcRoot=oWsh.SpecialFolders("MyDocuments")
		owsh=null
		
		* Si la ruta contiene espacios, necesitaré encomillar
		IF AT(CHR(32),lcRoot)#0
			lcRoot=["]+lcRoot+["]
		ENDIF
		
		* Nombre del archivo a mostrar
		lcFileName="Acindar_PC_4837533.pdf"
		lcFileName="De la particular teoría de las causas.doc"
		lcFileName="RvCaja2.xls"
		* Ruta + Nombre de archivo
		lcFileOPen=ADDBS(lcRoot)+lcFilename
		
		* Apertura del archivo con Shell.Aplication [open]
		objShell = CreateObject("Shell.Application")
		objShell.ShellExecute(lcFileOpen,"","","open",1)
		objShell=null
		
	ENDPROC

	PROCEDURE Command9.Click
		DO FORM forms\zensayob TO objDevuelto
		IF VARTYPE(objDevuelto)#"O"
			MESSAGEBOX("objDevuelto no es un objeto")
			RETURN
		ENDIF
		FOR i=1 TO ALEN(objDevuelto.newArray)
			MESSAGEBOX(objDevuelto.newArray[i])
		NEXT
		objDevuelto=null
		
	ENDPROC

	PROCEDURE Text3.LostFocus
		
		
		
	ENDPROC

ENDDEFINE
