*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="fblib.vcx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS cntvcx AS container 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="shpMain" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdVcx" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmbMultiple" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmbUnico" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lstLibrary" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdBrowse" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="shpMaxproc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblMaxproc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtMaxproc" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="shpMultiple" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblmultiple" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtMultiple" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="shpUnico" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblUnico" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtUnico" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdLimpiar" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="shpRuta" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblRuta" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtRuta" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: cleanforms
		*m: fb_vcx
		*m: genlstlibrary
		*m: getfopen
		*m: getvaltag
		*m: getvcx
		*m: gfmresize
		*m: limpiar
		*m: puttag
		*m: teldecim
		*p: metono
		*p: metosel
		*p: nforms
		*p: usedir
		*a: gaforms[1,0]
	*</DefinedPropArrayMethod>

	BackStyle = 0
	BorderWidth = 0
	Height = 166
	metono = 
	metosel = 
	Name = "cntvcx"
	nforms = 0
	usedir = 
	Width = 279

	ADD OBJECT 'cmbMultiple' AS combobox WITH ;
		BorderColor = 114,136,141, ;
		DisabledBackColor = 231,237,234, ;
		DisabledForeColor = 0,0,0, ;
		Enabled = .F., ;
		FontSize = 8, ;
		Height = 21, ;
		Left = 147, ;
		Name = "cmbMultiple", ;
		SpecialEffect = 1, ;
		Style = 2, ;
		TabIndex = 2, ;
		Top = 50, ;
		Width = 117
		*< END OBJECT: BaseClass="combobox" />

	ADD OBJECT 'cmbUnico' AS combobox WITH ;
		BorderColor = 114,136,141, ;
		DisabledBackColor = 231,237,234, ;
		DisabledForeColor = 0,0,0, ;
		Enabled = .F., ;
		FontSize = 8, ;
		Height = 21, ;
		Left = 147, ;
		Name = "cmbUnico", ;
		SpecialEffect = 1, ;
		Style = 2, ;
		TabIndex = 3, ;
		Top = 70, ;
		Width = 117
		*< END OBJECT: BaseClass="combobox" />

	ADD OBJECT 'cmdBrowse' AS commandbutton WITH ;
		Caption = "\<Ver", ;
		Enabled = .F., ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 188, ;
		Name = "cmdBrowse", ;
		TabIndex = 6, ;
		Top = 5, ;
		Width = 32
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdLimpiar' AS commandbutton WITH ;
		Caption = "\<Limpiar", ;
		Enabled = .F., ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 220, ;
		Name = "cmdLimpiar", ;
		TabIndex = 5, ;
		Top = 5, ;
		Width = 44
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdVcx' AS commandbutton WITH ;
		Caption = "\<Buscar", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 5, ;
		Name = "cmdVcx", ;
		TabIndex = 1, ;
		Top = 5, ;
		Width = 48
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'lblMaxproc' AS label WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "Procedures", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 59, ;
		Name = "lblMaxproc", ;
		TabIndex = 7, ;
		ToolTipText = "Límite de Procedures", ;
		Top = 9, ;
		Width = 58
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'lblmultiple' AS label WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "Uso Múltiple", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 11, ;
		Name = "lblmultiple", ;
		TabIndex = 9, ;
		Top = 53, ;
		Width = 59
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'lblRuta' AS label WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "Ruta Analizada", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 11, ;
		Name = "lblRuta", ;
		TabIndex = 9, ;
		Top = 33, ;
		Width = 75
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'lblUnico' AS label WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "Uso Unico", ;
		FontSize = 8, ;
		Height = 16, ;
		Left = 11, ;
		Name = "lblUnico", ;
		TabIndex = 11, ;
		Top = 73, ;
		Width = 51
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'lstLibrary' AS listbox WITH ;
		BorderColor = 114,136,141, ;
		Enabled = .F., ;
		FontSize = 8, ;
		Height = 66, ;
		Left = 5, ;
		Name = "lstLibrary", ;
		SpecialEffect = 1, ;
		TabIndex = 4, ;
		Top = 90, ;
		Width = 259
		*< END OBJECT: BaseClass="listbox" />

	ADD OBJECT 'shpMain' AS shape WITH ;
		BackColor = 221,226,222, ;
		Height = 160, ;
		Left = 1, ;
		Name = "shpMain", ;
		SpecialEffect = 0, ;
		Top = 1, ;
		Width = 268
		*< END OBJECT: BaseClass="shape" />

	ADD OBJECT 'shpMaxproc' AS shape WITH ;
		BackColor = 231,237,234, ;
		BorderColor = 114,136,141, ;
		Height = 21, ;
		Left = 53, ;
		Name = "shpMaxproc", ;
		Top = 6, ;
		Width = 80
		*< END OBJECT: BaseClass="shape" />

	ADD OBJECT 'shpMultiple' AS shape WITH ;
		BackColor = 231,237,234, ;
		BorderColor = 114,136,141, ;
		Height = 21, ;
		Left = 5, ;
		Name = "shpMultiple", ;
		Top = 50, ;
		Width = 100
		*< END OBJECT: BaseClass="shape" />

	ADD OBJECT 'shpRuta' AS shape WITH ;
		BackColor = 231,237,234, ;
		BorderColor = 114,136,141, ;
		Height = 21, ;
		Left = 5, ;
		Name = "shpRuta", ;
		Top = 30, ;
		Width = 100
		*< END OBJECT: BaseClass="shape" />

	ADD OBJECT 'shpUnico' AS shape WITH ;
		BackColor = 231,237,234, ;
		BorderColor = 114,136,141, ;
		Height = 21, ;
		Left = 5, ;
		Name = "shpUnico", ;
		Top = 70, ;
		Width = 100
		*< END OBJECT: BaseClass="shape" />

	ADD OBJECT 'txtMaxproc' AS textbox WITH ;
		Alignment = 3, ;
		BorderColor = 114,136,141, ;
		DisabledBackColor = 231,237,234, ;
		DisabledForeColor = 0,0,0, ;
		FontSize = 8, ;
		Format = "Z", ;
		Height = 21, ;
		InputMask = "99,999", ;
		Left = 119, ;
		Name = "txtMaxproc", ;
		SpecialEffect = 1, ;
		TabIndex = 8, ;
		Top = 6, ;
		Value = 0, ;
		Width = 50
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'txtMultiple' AS textbox WITH ;
		Alignment = 3, ;
		BorderColor = 114,136,141, ;
		DisabledBackColor = 242,247,243, ;
		DisabledForeColor = 0,0,0, ;
		Enabled = .F., ;
		FontSize = 8, ;
		Format = "Z", ;
		Height = 21, ;
		InputMask = "99,999", ;
		Left = 98, ;
		Name = "txtMultiple", ;
		SpecialEffect = 1, ;
		TabIndex = 10, ;
		Top = 50, ;
		Value = 0, ;
		Width = 50
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'txtRuta' AS textbox WITH ;
		Alignment = 3, ;
		BorderColor = 114,136,141, ;
		DisabledBackColor = 242,247,243, ;
		DisabledForeColor = 0,0,0, ;
		Enabled = .F., ;
		FontSize = 8, ;
		Height = 21, ;
		Left = 98, ;
		Name = "txtRuta", ;
		SpecialEffect = 1, ;
		TabIndex = 10, ;
		Top = 30, ;
		Width = 166
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'txtUnico' AS textbox WITH ;
		Alignment = 3, ;
		BorderColor = 114,136,141, ;
		DisabledBackColor = 242,247,243, ;
		DisabledForeColor = 0,0,0, ;
		Enabled = .F., ;
		FontSize = 8, ;
		Format = "Z", ;
		Height = 21, ;
		InputMask = "99,999", ;
		Left = 98, ;
		Name = "txtUnico", ;
		SpecialEffect = 1, ;
		TabIndex = 12, ;
		Top = 70, ;
		Value = 0, ;
		Width = 50
		*< END OBJECT: BaseClass="textbox" />
	
	PROCEDURE cleanforms
		this.nforms=0
		FOR i=1 TO ALEN(this.gaforms)
			IF VARTYPE(this.gaforms)="O"
				this.gaforms[i].release
			ENDIF
		NEXT
		DIMENSION this.gaforms(1)
		STORE null TO this.gaforms
	ENDPROC

	PROCEDURE Destroy
		IF PEMSTATUS(_screen,"fb_metosel",5)
			REMOVEPROPERTY(_screen,"fb_metosel")
		ENDIF
		IF PEMSTATUS(_screen,"fb_metono",5)
			REMOVEPROPERTY(_screen,"fb_metono")
		ENDIF
		IF PEMSTATUS(_screen,"fb_Usedir",5)
			REMOVEPROPERTY(_screen,"fb_Usedir")
		ENDIF
		
	ENDPROC

	PROCEDURE fb_vcx
		LPARAMETERS xcValor
		
		LOCAL lcValor,i,lnt,lcBusca,lnLines,lcProc,lcCaption,;
			lcFile,lntop,lnleft,lnWidth,lnHeight,;
			lnFormCount,lcLastCaption,lcNewCaption
		lnTop=5
		lnLeft=10
		lnWidth=200
		lnHeight=400
		lnFormCount=_screen.FormCount
		lcLastCaption=""
		IF lnFormCount>0
			lcLastCaption=_screen.Forms(1).caption
		ENDIF
		
		lcFile=ADDBS(_screen.dapli)+"fd_listop.txt"
		IF !FILE(lcFile)
			lnHand=FCREATE(lcFile)
			=FPUTS(lnHand,This.PutTag("Top",lntop))
			=FPUTS(lnHand,This.PutTag("Left",lnleft))
			=FPUTS(lnHand,This.PutTag("Width",lnWidth))
			=FPUTS(lnHand,This.PutTag("Height",lnHeight))
			=FCLOSE(lnHand)
		ENDIF
		lnHand=FOPEN(lcFile,0)
		DO WHILE !FEOF(lnHand)
			lcGet=FGETS(lnHand,2048)
			oRet=this.GEtValTag(lcGet,.t.)
			DO case
				CASE oREt.tag="Top"
					lnTop=oret.value
				CASE oRet.tag="Left"
					lnLeft=oRet.value
				CASE oRet.tag="Width"
					lnWidth=oret.value
				CASE oret.tag="Height"
					lnHeight=oret.value
			ENDCASE
		ENDDO
		=FCLOSE(lnHand)
			
		STORE "" TO lcCaption,lcProc
		LOCAL ARRAY galines(1),gatem(1)
		lcValor=UPPER(ALLTRIM(xcValor))
		IF EMPTY(lcValor)
			RETURN
		ENDIF
		lnLines=ALINES(galines,lcvalor,5,".")
		IF lnLines<2
			RETURN
		ENDIF
		
		
		lnt=0
		lcLib=UPPER(galines[1])+".VC2"
		lcBusca="."+UPPER(galines[2])+">"
		lcProc=""
		SELECT metodos
		lnLines=ALINES(gaLines,metodos.trydiff)
		lRead=.f.
		FOR i=1 TO lnlines
			IF LEFT(galines[i],LEN("</version>"))=="</version>"
				lREad=.f.
				LOOP
				
			ENDIF
		
			IF AT(lcLib,UPPER(gaLines[i]))#0 AND RIGHT(UPPER(galines[i]),LEN(lcBusca))==lcBusca
				lcCaption=gaLines[i]
				lRead=.t.
				LOOP
			ENDIF
			IF lREad
				lcProc=lcProc+galines[i]+CHR(13)+CHR(10)
				lnt=lnt+1
				DIMENSION gatem(lnt)
				gatem[lnT]=gaLines[i]
			ENDIF
		ENDFOR
		This.nForms=This.nForms + 1
		DIMENSION This.gaforms(This.nForms)
		
		
		This.gaForms[This.nForms]=NEWOBJECT("Form")
		This.gaForms[This.nForms].NewObject("edtMetod","Editbox")
		
		WITH This.gaForms[This.nForms]
			.CAption=lcCaption
			.top=lnTop
			.left=lnLeft
			.width=lnWidth
			.Height=lnHeight
			
		
		ENDWITH
		WITH This.gaForms[This.nForms].edtMetod
			.top=3
			.left=3
			.Width=This.gaForms[This.nForms].Width - 6
			.Height=This.gaForms[This.nForms].Height - 6
			.Fontsize=9
			.FontName="Courier New"
			.Value=lcProc
			.Visible=.t.
		ENDWITH
		BINDEVENT(This.gaForms[This.nForms],"Resize",This,"gfmResize")
		BINDEVENT(This.gaForms[This.nForms],"Moved",This,"gfmResize")
		This.gaForms[This.nForms].Show()
	ENDPROC

	PROCEDURE genlstlibrary
		LPARAMETERS xnRec,xcCaption
		LOCAL ARRAY galines(1)
		LOCAL lnLines,i,fmCount,obj,lcCaption
		SELECT metodos
		GO xnRec
		lnLines=ALINES(gaLines,metodos.usuarios,1,",")
		WITH this.lstLibrary
			.clear
			.Enabled=.f.
			FOR i=1 TO lnLines
				.addItem(gaLines[i])
			NEXT
			.requery
			.refresh
			.Enabled=IIF(i>0,.t.,.f.)
		ENDWITH
		
		TRY
			LOCAL loMenu as Exception
			fmCount=lnLines
			obj=NEWOBJECT("gmenu","ThMenu")	
			LOCAL ARRAY gaMenu(fmCount+3,6)
			FOR i=1 TO lnLines
				lcTit=["]+gaLInes[i]+["]
				TEXT TO lcSCript TEXTMERGE NOSHOW PRETEXT 1
				LPARAMETERS xoForm
				LOCAL lcParam
				lcParam=<<lcTit>>
				xoForm.fb_vcx(lcParam)
				ENDTEXT
				gamenu[i,1]=galines[i]
				gamenu[i,2]="<SCRIPT>"+lcSCript+"</SCRIPT>"
				gamenu[i,3]=.t.
				gaMenu[i,4]=i
				gaMenu[i,5]=""
				gaMenu[i,6]=this
			NEXT
			
		
		
			gaMenu[fmCount+1,1]=[<RAYA/>]
			gaMenu[fmCount+1,2]=""
			gaMenu[fmCount+1,3]=.F.
			gaMenu[fmCount+1,4]=4	
			gaMenu[fmCount+1,5]=""
			gaMenu[fmCount+1,6]=null
					
			gaMenu[fmCount+2,1]="Cerrar Formularios"
			gaMenu[fmCount+2,2]="<CLOSEMYFORMS/>"
			gaMenu[fmCount+2,3]=.T.
			gaMenu[fmCount+2,4]=5
			gaMenu[fmCount+2,5]=""
			gaMenu[fmCount+2,6]=null
				
			gaMenu[fmCount+3,1]="Cerrar Menú"
			gaMenu[fmCount+3,2]="<CLOSEMYFORMS/><CLOSETHIS/><PREVENT>Desea cerrar los formularios asociados?</PREVENT>"
			gaMenu[fmCount+3,3]=.T.
			gaMenu[fmCount+3,4]=6
			gaMenu[fmCount+3,5]=""
			gaMenu[fmCount+3,6]=null
		
			
			lnPos=5
			lnTimer=3
			lNotOnTop=.t.
			lcCaption="Consulta de "+PROPER(xcCaption)
		
			obj.GralMenu(@gaMenu,lnPos,lntimer,lNotOnTop,null,;
				lcCaption,.f.,.f.,"MyFoxBin")		
		
			
		CATCH TO loMenu
			loMenu.UserValue=PROGRAM()
			showerror(loMenu)
		FINALLY
			obj=null	
		ENDTRY
		
		*!*	PROCEDURE gralMenu
		*!*	LPARAMETERS xgaARray,;
		*!*		xnPosicion,;
		*!*		xnTimer,;
		*!*		xlNotOntop,;
		*!*		xoCondishut,;
		*!*		xcCaption,;
		*!*		xcSCriptDestroy,;
		*!*		xlBindHide,;
		*!*		xcNameMenu,;
		*!*		xnCursorColor
		
		
	ENDPROC

	PROCEDURE getfopen
		LPARAMETERS xcFile,xnHandler,xlNotVerb,xnPrivileg,xlOpenEmpty
		**************************************************************
		*!*	Objeto: abrir un archivo con FOPEN()
		*!*	xcFile:    	Ruta y Nombre de archivo completo que se intenta abrir
		*!*				Se puede pasar como xcfile+"<eof/>" 
		*!*				para que quede en EOF()
		*!*	xnHandler: @ Handler pasado por referencia
		*!*	xlNotVerb: suprime comentarios si es .t.
		*!*	xnPrivileg, may be:
		*!*		0 Read Only Buffer
		*!*	 	1 Write ONly Buffer
		*!*	 	2 Read Write Buffer
		*!*	 	10 Read Only No Buffer
		*!*	 	11 Write ONly No Buffer
		*!*	 	12 Read Write No Buffer
		*!*	xlOpenEmpty: Valida la apertura de un archivo vacío
		*!* --------------------------------------------------------------
		*!*	IF !This.GetFopen(addbs(lcRoot)+"archivo.txt",@nfop,.F.,12)
		*!*		RETURN
		*!*	ENDIF
		*!* --------------------------------------------------------------
		
		local lRet,gnEnd,gnTop,nat,lcTag
		lREt=.t.
		STORE "" TO lcTag
		IF EMPTY(xcfile)
			IF !xlNotVerb
				MESSAGEBOX("Nombre de archivo vacío",0,"GetFopen Message")
			ENDIF
			RETURN .F.
		ENDIF
		nat=AT("<",xcFile)
		IF nat > 0
			lcTag=LOWER(TRIM(SUBSTR(xcFile,nat)))
			xcFile=LEFT(xcfile,nat-1)
		ENDIF
		
		IF !file(xcFile)
			if !xlNotVerb
				MESSAGEBOX("El archivo &xcFile no existe",0,"GetFopen Message")
			endif
			RETURN .F.
		endif
		if vartype(xnPrivileg)#"N"
			xnPrivileg=0
		ENDIF
		IF !INLIST(xnPrivileg,0,1,2,10,11,12)
			xnPrivileg=12
		ENDIF
		
		xnHandler=fopen(xcFile,xnPrivileg)
		if xnHandler=-1
			if !xlNotVerb
				MESSAGEBOX("El archivo &xcFile no pudo abrirse",0,"GetFopen Message")
			ENDIF
			RETURN .F.
		ENDIF
		gnEnd=Fseek(xnHandler,0,2)
		IF EMPTY(lcTag) OR lcTag#"<eof/>"
			gntop=Fseek(xnHandler,0)	
		ENDIF
		
		IF !xlOpenEmpty AND gnEnd<=0
			if !xlnotVerb
				MESSAGEBOX("El archivo &xcFile no tiene contenido",0,"GetFopen Message")
			endif
			FCLOSE(xnHandler)
			lRet=.f.
		ENDIF
		
		RETURN lret
		
		
	ENDPROC

	PROCEDURE getvaltag
		LPARAMETERS xcTag,xlReturnObj
		**************************************
		* PROCEDURE getValTag(xcTag,xlReturnObj)
		**************************************
		* Etiquetas calificadas ( <NOMBRE|N|1250.12/>  )
		*-----------------------------------------------
		* Si xlREturnObj=.F. (Default)
		* 	Devuelve el valor de una etiqueta
		*	lcTag="<ESTADO|L|.T./>
		*	? GetValTag(lcTag)	&& muestra .T.
		*
		* Si xlReturnObj= .T.
		*	Devuelve la referencia a un objeto "empty"
		*	con tres propiedades: Tag, Value y Type
		*
		*	lcTag="<IMPORTE|N|12726.15/>
		*	obj=GetValTAg(LcTag,.t.)
		*	if !isnull(obj)
		*		? obj.value	&& devuelve 12726.15
		*		? obj.Tag	&& devuelve "IMPORTE"
		*		? Obj.type	&& devuelve "N"
		*		obj=null
		*	ENDIF
		*-----------------------------------------------------
		* Etiquetas cerradas simples
		*-----------------------------------------------------
		* lcTag="<ANIMAL=PERRO/>
		* ? GetvalTAg(lcTag)	&& muestra "PERRO"
		*
		* 	obj=GetValTag(lcTag,.t.)
		*	IF !isnull(obj)
		*		? Obj.TAg	&& muestra "ANIMAL"
		*		? obj.Value	&& muestra "PERRO"
		*		? obj.type	&& siempre muestra "C"
		*	ENDIF
		*-------------------------------------------------------
		* Rutina de exploración:
		*	LOCAL obj,fcr,nHand,lnResp
		*	FCR=ADDBS(FullPath(""))+"formula.txt"
		*	nhand=-1
		*	IF !This.GetFopen(fcr,@nhand,.f.,12)
		*		RETURN
		*	ENDIF
		*	DO WHILE !FEOF(nhand)
		*		lcTag=FGETS(nhand,2048)
		*		DO case
		*			CASE AT("|S|=",UPPER(lcTag))#0	&& ExecScrip()
		*				=GetValTAg(lcTag)
		
		*			CASE AT("#|=",lcTAg)#0			&& Define la tag como variable de paso y le asigna el valor
		*				obj=GetValTAg(lcTAg,.t.)
		*				IF !ISNULL(obj)
		*					lcEtiq=obj.Tag
		*					&lcEtiq=obj.Value
		*					obj=null
		*				ENDIF
		*
		*			OTHERWISE
		*		
		*				lnResp=GetValtag(lcTag)		&& Asigna a lnResp el valor contenido de la tag (puede ser |E|)
		*				
		*		ENDCASE
		*	
		*	ENDDO
		*	=FCLOSE(nhand)
		*	
		******************************************************
		
		LOCAL lcLast,lcREs,lnLines,nPart,lcVari,lctype,;
			lxReturn,objReturn,lcTryValor
		
		IF VARTYPE(xctag)#"C" OR EMPTY(xcTag)
			RETURN IIF(xlREturnObj,null,"")
		ENDIF
		LOCAL ARRAY gaTags(1),gaTypes(1)
		xcTAg=ALLTRIM(xcTag)
		xcTAg=ALLTRIM(xctag)
		* Tag inválida
		IF LEFT(xcTag,1)#"<" OR ;
				AT("=",xcTAg)=0 OR ;
				RIGHT(xcTag,1)#">"
			RETURN IIF(xlREturnObj,null,"")
		ENDIF
		lxREturn=""
		lcType="C"
		
		xcTag=ALLTRIM(xcTag)
		lcLast=IIF(RIGHT(xcTag,2)=="/>","/>",RIGHT(xcTag,1))
		lcRes=STREXTRACT(xcTag,"<",lcLast)
		
		IF AT("|=",lcRes)#0
			lnlines=ALINES(gaTags,lcRes,1+2,"|=")
			IF lnLines>0
				gaTAgs[1]=gaTags[1]+"|"
			ENDIF
		ELSE
			lnLines=ALINES(gatags,lcRes,1+2,"=")
		ENDIF
		*lcVari=gatags[1]
		IF lnLines>1
			lcTryValor=""
			FOR i=2 TO lnLines
				lcTryValor=lcTryValor+gaTags[i]
			NEXT
			IF AT("#|",gatags[1])#0
				xlREturnObj=.t.
				gaTAgs[1]=STRTRAN(gaTAgs[1],"#|","|")
			ENDIF
			lcVari=gatags[1]
			lcTryValor=gatags[2]
			nat=AT("|",gatags[1])
			IF nAt=LEN(gatags[1])-IIF(RIGHT(gatags[1],1)="|",2,1)
				nPart=ALINES(gatypes,gatags[1],5,"|")
				lcVari=gatypes[1]
				lcType=UPPER(gatypes[2])
				DO case
					CASE lcType$"NI"
						lxReturn=VAL(lcTryValor)
					CASE lcType="L"
						lxReturn=IIF(AT("T",lcTryValor)#0,.t.,.f.)
					
					CASE LCTYPE="D"
						lxReturn=CTOD(lcTryValor)
					
					CASE LCTYPE="T"
						lxReturn=CTOT(lcTryValor)
					CASE lctype="E"
						lxReturn=EVALUATE(lcTRyValor)
					CASE lcType="S"
						lcTryValor=CHRTRAN(lcTryValor,CHR(10),"")
						lcTryValor=CHRTRAN(lcTRyValor,CHR(28),CHR(13))
						lxReturn = EXECSCRIPT(lcTryValor)
					CASE lctype="X"
						lxREturn=null
					CASE lcType="O"
						lxReturn=null
					OTHERWISE
						lxReturn=lcTRyValor
				ENDCASE
			ELSE
				lxReturn = lcTryValor		
			ENDIF
		ENDIF
		IF xlREturnObj
			objReturn=CREATEOBJECT("empty")
			ADDPROPERTY(objReturn,"Tag",lcVari)
			ADDPROPERTY(objReturn,"Value",lxREturn)
			ADDPROPERTY(objReturn,"Type",lctype)
		ENDIF
		RETURN IIF(xlReturnObj,ObjReturn,lxREturn)
		
	ENDPROC

	PROCEDURE getvcx
		LOCAL lcmodel,lcdir,i,lnbin,lnLInes,lnWrite,si,lcTry,;
			LnFallas,LnApari,lni,LcObjeto,lnUsers,lcUsedir,lcFilesp,lnLimit,;
			lStopProc
		lnLimit=this.txtMaxproc.Value
		CLEAR TYPEAHEAD
		
		LOCAL ARRAY gadirs(1),gabin(1),gametod(1),gaBib(1),gaWrite(1),gaUser(1)
		_screen.fb_Usedir=FULLPATH("")
		this.nforms=0
		FOR i=1 TO ALEN(this.gaforms)
			IF VARTYPE(this.gaforms)="O"
				this.gaforms[i].release
			ENDIF
		NEXT
		DIMENSION this.gaforms(1)
		STORE null TO this.gaforms
		
		lcFilesp=ADDBS(_screen.dapli)+"fb_vcx.txt"
		IF FILE(lcFilesp)
			lcusedir=ALLTRIM(FILETOSTR(lcFilesp))
			IF !EMPTY(lcUseDir) AND DIRECTORY(lcUsedir)
				_screen.fb_Usedir=lcUsedir
			ENDIF
			
		ENDIF
		
		lcmodel="*m: *"
		lnFallas=0
		lcDir=GETDIR(_screen.fb_Usedir,"Seleccione Carpeta2","Foxbin2 Classes Directory",48)
		IF EMPTY(lcDir)
			RETURN
		ENDIF
		_screen.fb_Usedir=lcDir
		STRTOFILE(lcDir,ADDBS(_screen.dapli)+"fb_vcx.txt",0)
		this.txtRuta.Value=LOWER(_screen.fb_usedir)
		lnDir=ADIR(gaDirs,ADDBS(lcDir)+"*.vcx")
		IF lnDir=0
			MESSAGEBOX("No hay archivos *.vcx en la ruta "+lcDir)
			RETURN
		ENDIF
		
		LOCAL oform
		oform=NEWOBJECT("Form")
		WITH oform
			.Width=400
			.Height=300
			.alwaysontop=.t.
			.autocenter=.t.
			.BackColor = RGB(255,247,230)
			.FontSize=8
			.Caption="Detección de Procedures en vcx » [F8]=Interrumpir"
			.Show()
		ENDWITH
		
		LOCAL loCnv AS c_foxbin2prg OF "FOXBIN2PRG.PRG"
		loCnv = NEWOBJECT("c_foxbin2prg",ADDBS(_screen.dprog)+"FOXBIN2PRG.PRG")
		*loCnv.Ejecutar( xcFile )
		FOR i=1 TO lnDir
			IF UPPER(gadirs[i,1])=="CNTVCX"
				LOOP
			ENDIF
			lcFile=ADDBS(lcDir)+gadirs[i,1]
			? " Conviertiendo "+lcfile+"..."
			loCnv.Ejecutar( lcFile )
			IF INKEY()=-7
				lStopProc=.t.
				CLEAR TYPEAHEAD
			endif
			
			IF lStopProc
				nMess=MESSAGEBOX("Desea Detener el Proceso?"+CHR(13);
					+"El análisis quedará incompleto.",4,PROGRAM())
				IF nMess=6
					EXIT
				ELSE
					lStopProc=.f.
				endif
			endif	
			
		NEXT
		loCnv=null
		
		lnBin=ADIR(gaBin,ADDBS(lcDir)+"*.vc2")
		*WAIT clear
		*MESSAGEBOX(TRANSFORM(lnBin)+" Archivos Foxbin vc2")
		
		? " Creando tabla de registros..."
		IF USED("METODOS")
			SELECT METODOS
			USE
		ENDIF
		
		lcTable=ADDBS(_SCREEN.dapli)+"metodos"
		CREATE TABLE &lcTable FREE ;
			("METODO" C(40) ,;
			"USUARIOS" M ,;
			"ARCHIVOS" M,;
			"TRYDIFF" M,;
			"REPIT" N(3,0),;
			"SELVER" C(40))
		
		? " Registrando Procedures..."	
		SELECT METODOS
		INDEX ON metodo TAG IMETOD
		LcObjeto=""
		FOR i=1 TO lnbin
			lcFile=ADDBS(lcDir)+gabin[i,1]
			lnHand=-1
			IF !This.getFopen(lcfile,@lnHand,.f.,0)
				LnFallas=lnFallas+1
				LOOP
			ENDIF
			DO WHILE !FEOF(lnHand)
				lcGet=FGETS(lnHand,2048)
				lcGet=ALLTRIM(CHRTRAN(lcGet,CHR(9),""))
				IF LEFT(lcget,LEN("DEFINE CLASS"))=="DEFINE CLASS"
					lcObjeto=GETWORDNUM(lcGet,3,CHR(32))
					LOOP
				ENDIF
				IF LEFT(lcget,LEN("ENDDEFINE"))=="ENDDEFINE"
					lcObjeto=""
					LOOP
				ENDIF		
				IF LEFT(lcGet,LEN(lcModel))==lcModel
					lcNametod=ALLTRIM(SUBSTR(lcGet,LEN(lcModel)+1))
					lnLines=ALINES(GaMetod,lcNametod,1,"&")
					IF lnLines>0
						lcNametod=gaMetod[1]
					ENDIF
					IF !INDEXSEEK(lcNametod,.f.,"METODOS","IMETOD")
						INSERT INTO Metodos (metodo,usuarios,archivos);
						 VALUES (lcNametod,JUSTSTEM(lcFile)+"."+lcObjeto+"," ,;
						 	 ","+JUSTSTEM(lcFile)+",")
					ELSE
						INDEXSEEK(lcNametod,.t.,"METODOS","IMETOD")
						REPLACE USUARIOS WITH TRIM(Usuarios)+JUSTSTEM(lcFile)+"."+lcObjeto+","
						IF AT(","+JUSTSTEM(lcFile)+",",archivos)=0
							replace archivos WITH TRIM(archivos)+JUSTSTEM(lcfile)+","
						ENDIF
						
					ENDIF
				ENDIF
			ENDDO
			=FCLOSE(lnHand)
		NEXT
		SELECT metodos
		PACK MEMO 
		GO top
		
		IF lnFallas>0
			MESSAGEBOX(TRANSFORM(lnFallas)+" Aperturas han fallado")
		ENDIF
		
		? " Buscando Procedures..."
		lStopProc=.f.
		* Buscar métodos
		LcObjeto=""
		lnCount=0
		STORE 0 TO lnFallas
		SELECT metodos
		SCAN
			lnCount=lnCount + 1
			IF LnLimit>0 AND lnCount > lnLimit
				EXIT
			ENDIF
			
			lnWrite=0
			DIMENSION gaWrite(1)
			lcNametod=TRIM(metodo)
			lcBuscar="PROCEDURE"+CHR(32)+lcNametod
			lcUsuarios=TRIM(usuarios)
			lcArchivos=TRIM(archivos)
			lnUsers=ALINES(gaUser,lcUsuarios,5,",")
			lnApari=ALINES(gaBib,lcArchivos,5,",")
			*WAIT lcBuscar+"..." WINDOW AT 12,15 NOWAIT 
			? " "+lcBuscar+"..."
			FOR i=1 TO lnApari
				lnHand=-1
				lcFile=ADDBS(lcDir)+FORCEEXT(gaBib[i],"vc2")
				IF !This.getFopen(lcFile,@lnHand,.f.,0)
					lnFallas=lnFallas + 1		
					LOOP
				ENDIF
		
				STORE .f. TO lread
				DO WHILE !FEOF(lnHand)
					lcGet=FGETS(lnHand,2048)
					lcComp=ALLTRIM(CHRTRAN(lcGEt,CHR(9),""))
					IF LEFT(lcget,LEN("DEFINE CLASS"))=="DEFINE CLASS"
						lcObjeto=GETWORDNUM(lcGet,3,CHR(32))
						LOOP
					ENDIF
					IF LEFT(lcget,LEN("ENDDEFINE"))=="ENDDEFINE"
						lcObjeto=""
						LOOP
					ENDIF			
					IF LEFT(lcComp,LEN(lcBuscar))==lcBuscar
						lnWrite=lnWrite + 1
						DIMENSION gaWrite(lnWrite)
						gaWrite[lnwrite]="<version="+lcFile+"."+lcObjeto+">"
		
						lRead=.t.
					ENDIF
					IF lRead AND !EMPTY(lcGet)
						lnWrite=lnWrite + 1
						DIMENSION gaWrite(lnWrite)
						gaWrite[lnwrite]=lcGet
					ENDIF
					
					IF lread AND LEFT(lcComp,LEN("ENDPROC"))=="ENDPROC"
						lnWrite=lnWrite + 1
						DIMENSION gaWrite(lnWrite)
						gaWrite[lnwrite]="</version>"		
						lREad=.f.
					ENDIF
					
					
				ENDDO
				=FCLOSE(lnHand)
			NEXT
			lcTry=""
			FOR si=1 TO lnWrite
				lcTry=lcTry+gaWrite[si]+CHR(13)+CHR(10)
			NEXT
			replace trydiff WITH lcTry,repit WITH lnUsers	
			IF INKEY()=-7
				lStopProc=.t.
				CLEAR TYPEAHEAD
			endif
			
			IF lStopProc
				nMess=MESSAGEBOX("Desea Detener el Proceso?"+CHR(13);
					+"El análisis quedará incompleto.",4,PROGRAM())
				IF nMess=6
					EXIT
				ELSE
					lStopProc=.f.
				endif
			endif	
			
		ENDSCAN
		SELECT metodos
		PACK MEMO 
		GO top
		IF lnFallas>0
			MESSAGEBOX(TRANSFORM(lnFallas)+" reaperturas han fallado")
		ENDIF
		
		? " Creando Interfase..."
		
		
		_Screen.fb_metosel=""
		_Screen.fb_metono=""
		
		STORE 0 TO lni
		WITH this.cmbMultiple
			.BoundColumn=2
			.ControlSource='_screen.fb_metosel'
			lni=lni+1
			.addListitem("(Método)",lni,1)
			.addListitem("",lni,2)
			.addlistitem("",lni,3)
			SELECT metodos
			SCAN FOR repit>1
				lni=lni+1
				.addlistitem(PROPER(ALLTRIM(metodo)),lni,1)
				.addListitem(ALLTRIM(metodo),lni,2)
				.addlistitem(TRANSFORM(RECNO()),lni,3)
			ENDSCAN
			.requery
			.refresh
			.enabled=IIF(lni>1,.t.,.f.)
		ENDWITH
		this.txtMultiple.Value=lni
		STORE 0 TO lni
		WITH this.cmbUnico
			.BoundColumn=2
			.ControlSource='_screen.fb_metono'
			lni=lni+1
			.addListitem("(Método)",lni,1)
			.addListitem("",lni,2)
			.addlistitem("",lni,3)
			SELECT metodos
			SCAN FOR repit=1
				lni=lni+1
				.addlistitem(PROPER(ALLTRIM(metodo)),lni,1)
				.addListitem(ALLTRIM(metodo),lni,2)
				.addlistitem(TRANSFORM(RECNO()),lni,3)
			ENDSCAN
			.requery
			.refresh
			.enabled=IIF(lni>1,.t.,.f.)
		ENDWITH
		this.txtUnico.Value=lni
		this.cmdBrowse.Enabled=USED("METODOS")
		this.cmdLimpiar.Enabled=.t.
		this.cmdvcx.Enabled=.f.
		oform.release
		oform=null
		
		
		
	ENDPROC

	PROCEDURE gfmresize
		LOCAL lnEvents,obj,lcfile,lnHand
		LOCAL ARRAY gaEvents(1)
		lnEvents=AEVENTS(gaEvents,0)
		IF lnEvents=0
			RETURN
		ENDIF
		obj=gaEvents[1]
		WITH obj
			.edtMetod.width=.width- .edtMetod.left * 2
			.edtMetod.Height=.Height - .edtMetod.top * 2
		ENDWITH
		lcFile=ADDBS(_screen.dapli)+"fd_listop.txt"
		lnHand=FCREATE(lcFile)
			=FPUTS(lnHand,This.PutTag("Top",obj.top))
			=FPUTS(lnHand,This.PutTag("Left",obj.left))
			=FPUTS(lnHand,This.PutTag("Width",obj.width))
			=FPUTS(lnHand,This.PutTag("Height",obj.Height))
		=FCLOSE(lnHand)
	ENDPROC

	PROCEDURE Init
		WITH this
			.Width=.shpMain.Width+1
			.Height=.shpMain.Height+1
		ENDWITH
		IF !PEMSTATUS(_screen,"fb_metosel",5)
			ADDPROPERTY(_screen,"fb_metosel","")
		ENDIF
		IF !PEMSTATUS(_screen,"fb_metono",5)
			ADDPROPERTY(_screen,"fb_metono","")
		ENDIF
		IF !PEMSTATUS(_screen,"fb_Usedir",5)
			ADDPROPERTY(_screen,"fb_Usedir",FULLPATH(""))
		ENDIF
		lcFilesp=ADDBS(_screen.dapli)+"fb_vcx.txt"
		IF FILE(lcFilesp)
			lcusedir=ALLTRIM(FILETOSTR(lcFilesp))
			IF !EMPTY(lcUseDir) AND DIRECTORY(lcUsedir)
				_screen.fb_Usedir=lcUsedir
			ENDIF
			
		ENDIF
		this.txtRuta.Value=LOWER(_screen.fb_usedir)
		
			
	ENDPROC

	PROCEDURE limpiar
		this.cleanforms()
		WITH this
			.cmdLimpiar.Enabled=.f.
			.cmdBrowse.Enabled=.f.
			.cmdVcx.Enabled=.t.
			.cmbMultiple.Clear
			.cmbUnico.Clear
			.lstLibrary.Clear
			.txtMultiple.Value=0
			.txtUnico.Value=0
			.cmbMultiple.Enabled=.f.
			.cmbUnico.Enabled=.f.
			.lstLibrary.Enabled=.f.
		ENDWITH
		this.cmdvcx.SetFocus
		
			
	ENDPROC

	PROCEDURE puttag
		LPARAMETERS xcClave,xcValor,xnLevel,xcForceType,xlNotype,xcSep1,xcSep2
		****************************************************************************
		* PROCEDURE This.PutTag(xcClave,xcValor,xnLevel,xcForceType,xlNotype,xcSep1,xcSep2)
		****************************************************************************
		* Genera una Tag Cerrada
		*!*		xcClave:		Clave de etiqueta
		*!*		xcValor:		Valor de la etiqueta
		*!*		xnLevel:		Desplazamiento de escritura (REPLICATE(CHR(9),xnLevel)
		*!*		xcForceType:	Tipo Forzado (I,E,S) cuando se necesita un comportamiento especial
		*!*		xlNoType:		Etiqueta no calificada (cerrada normal)
		*!*		xcSep1:			Separador de apertura	("<" default)
		*!*		xcSep2:			Separador de cierre		("/>" default)
		*-----------------------------------------------------------------------------------------
		* xlNotype=.F. (Default)
		* <NOMBRE|N|1250.12/> (tipo numérico)
		* <DIA|D|25/12/2013/> (Tipo date)
		* <RESOLVE|E|SQRT( lnCateto1**2 + lnCateto2**2 )/>
		* <PROCEDE|S|MESSAGEBOX("Resultado="+LTRIM(STR(lnResp,14,4)))/>
		*---------------------------------------------------------------
		* Los tipos "CNLDT" se autocalifican
		* This.PutTag("VALOR",2012) genera: "<VALOR|N|=2012/>"
		* This.PutTag("ESTADO",.T.) genera: "<ESTADO|L|.T./>"
		* This.PutTag("CUIT","20120482980") genera "<CUIT|C|=2012048298/>"
		* This.PutTag("FECHA",17/12/2013")  genera "FECHA|D|=17/12/2013/>"
		*
		*-------------------------------------------------------------------------
		* Definición forzada
		*
		*	Escritura
		*	LOCAL lcform,lcPut
		*	LCFORM=""
		*	TEXT TO LCFORM TEXTMERGE NOSHOW PRETEXT 7
		*	<<This.PutTag("LNRESP",0,0,"*N")>>
		*	<<This.PutTag("LNCATETO1",12,0,"*N")>>
		*	<<This.PutTag("LNCATETO2",20,0,"*N")>>
		*	<<This.PutTag("LNRESP","SQRT( lnCateto1**2 + lnCateto2**2 )",0,"*E")>>
		*	<<This.PutTag("LNRESP","(lnResp+LnResp**2)/2",0,"*E")>>
		*	<<This.PutTag("MESSAGE",[MESSAGEBOX("Resultado="+LTRIM(STR(lnResp,14,4)))],0,"S")>>
		*	ENDTEXT
		*
		*	LcFile=ADDBS(fULLPATH(""))+"Formula.txt"
		*	STRTOFILE(lcForm,lcFile)
		*
		*	Nota: En xcForceType se utiliza "*", pero también se puede utilizar
		*	      cualiquier otro símbolo que no sea una letra
		*	      También se podría escribir a la inversa, "E*" en lugar de "*E"   	
		*
		*-------------------------------------------------------------------------------------
		*	REsultado (Archvivo Formula.txt)
		*	<LNRESP|N#|=0/>						&& define lnREsp=0
		*	<LNCATETO1|N#|=12/>					&& define LnCateto1=12
		*	<LNCATETO2|N#|=20/>					&& define LnCateto2=20
		*	<LNRESP|E#|=SQRT( lnCateto1**2 + lnCateto2**2 )/> 	&& lnResp=Sqrt(ln..."
		*	<LNRESP|E#|=(lnResp+LnResp**2)/2/>			&& lnResp=(lnResp+lnResp**2)/2
		*	<MESSAGE|S|=MESSAGEBOX("Resultado="+LTRIM(STR(lnResp,14,4)))/>
		*
		*	Nota: Al ejecutar, el Messagebox mostrará "Resultado=283.6619"
		*
		*---------------------------------------------------------------
		* Ejemplo para type "S" [ ExecScript() ]
		*	*Generación de la etiquta
		*
		*	LOCAL lcform,lcPut
		*	LCFORM=""
		*	TEXT TO LCFORM NOSHOW PRETEXT 7
		*	USE C:\THEODORE\ALOJA IN 0 EXCLUSIVE
		*	SELECT ALOJA
		*	IF RECCOUNT()>10
		*		GO 10
		*		replace valchar WITH "RGB() FUNCTION"
		*	ENDIF
		*	BROWSE
		*	USE
		*	ENDTEXT
		*
		*	LCPUT="SCRIPT"
		*	LcFile=ADDBS(Fullpath(""))+"ScripTag.txt"
		*	STRTOFILE(This.PutTag(lcPut,lcForm,,"S"),lcFile)
		*
		*	*Ejecuta procedimiento
		*	LcFile=ADDBS(FullPath(""))+"ScripTag.txt"
		*	=This.GetValTag(FILETOSTR(lcFile))
		*------------------------------------------------------
		
		LOCAL lcType,lcPutVal,lcAddComm
		STORE "" TO lcAddComm
		lcType=VARTYPE(xcValor)
		IF VARTYPE(xcForceType)="C" AND !EMPTY(xcForceType) 
			xcForceType=UPPER(ALLTRIM(xcForceType))
			IF LEN(xcForceType)>1
				xcForceType=This.ValidTExt(xcForceType,2)
				lcAddComm="#"
			ENDIF
			IF xcForceType$'CNDTLES'
				lcType=xcForceType
				xlNotype=.F.
				IF lcType="S"
					xcValor=CHRTRAN(xcValor,CHR(10),"")
					xcValor=CHRTRAN(xcValor,CHR(13),CHR(28))
				ENDIF
				
			ENDIF
		ENDIF
		
		
		DO case
			CASE lcType="N"
		
				LcPutVal=ltrim(str(xcValor,20,this.TelDecim(xcValor)))
			CASE LCTYPE="L"
				lcPutVal=IIF(xcValor,".T.",".F.")
			CASE lcType="D"
				lcPutVal=DTOC(xcValor)	
			CASE lcType="T"
				lcPutVal=TTOC(xcValor)
			CASE lcType="X"
				LcPutVal=".null."
			CASE lcType="O"
				lcPutVal="Object Reference"
			OTHERWISE
				LcPutVal=xcValor
		ENDCASE
		
		IF VARTYPE(xcSep1)#"C" OR EMPTY(xcSep1)
			xcSep1="<"
		ENDIF
		IF VARTYPE(xcSep2)#"C" OR EMPTY(xcSep2)
			xcSep2="/>"
		ENDIF
		IF VARTYPE(xnLevel)#"N"
			xnLevel=0
		ENDIF
		lcType=lcType+lcAddComm
		RETURN REPLICATE(CHR(9),xnLevel);
			+xcSep1;
			+ALLTRIM(xcClave);
			+IIF(xlNoType,"","|"+lcType+"|");
			+"=";
			+ALLTRIM(lcPutVal);
			+xcSep2
		
	ENDPROC

	PROCEDURE teldecim
		LPARAMETERS xcnNUmero,xnPrecision
		*****************************************
		* Determina la cantidad de decimales de un número.
		* xnPrecision podría ser Entre 10 y 16
		* 16 daría una precisión mayor pero válida para
		* números con alta cantidad de decimales.
		*********************************************
		local i_,minumero,pnumero,cRest,nDecimales
		if vartype(xnprecision)#"N"
			xnPrecision=10
		endif
		kevar=Vartype(xcnNumero)
		do case
			case kevar="C"
				minumero=val(xcnNumero)
			case kevar$'NI'
				Minumero=xcnNumero
			other
				return 0
		endcase
		if minumero=0
			return 0
		endif
		nDecimales=16
		for i_=0 to 16
			pNumero=Round(MiNumero*10**i_,xnPrecision)
			cRest=pNumero-Int(pNumero)
			nDecimales=i_
			if Round(cRest,xnPrecision)=0
				exit
			endif
		next
		return nDecimales
		
	ENDPROC

	PROCEDURE cmbMultiple.Click
		LOCAL lnItem,lnREc
		lnItem=this.ListItemId
		IF lnitem=0
			RETURN
		ENDIF
		lnRec=VAL(this.ListItem(lnItem,3))
		IF lnREc=0
			MESSAGEBOX(This.ListItem(lnItem,1)+" Valor Cero")
			RETURN
		ENDIF
		This.Parent.genlstLibrary(lnRec,this.ListItem(lnItem,1))
		
		
	ENDPROC

	PROCEDURE cmbMultiple.InteractiveChange
		This.Parent.cleanforms()
		
	ENDPROC

	PROCEDURE cmbUnico.Click
		LOCAL lnItem,lnREc
		lnItem=this.ListItemId
		IF lnitem=0
			RETURN
		ENDIF
		lnRec=VAL(this.ListItem(lnItem,3))
		IF lnREc=0
			MESSAGEBOX(This.ListItem(lnItem,1)+" Valor Cero")
			RETURN
		ENDIF
		This.Parent.genlstLibrary(lnRec,this.ListItem(lnItem,1))
	ENDPROC

	PROCEDURE cmbUnico.InteractiveChange
		This.Parent.cleanforms()
		
	ENDPROC

	PROCEDURE cmdBrowse.Click
		SELECT metodos
		BROWSE
		
	ENDPROC

	PROCEDURE cmdLimpiar.Click
		This.Parent.limpiar()
		
		
	ENDPROC

	PROCEDURE cmdVcx.Click
		This.Parent.getvcx()
		
		
		
		
		
				
		
	ENDPROC

	PROCEDURE lstLibrary.DblClick
		IF !EMPTY(this.Value)
			this.Parent.fb_vcx(this.Value)
		ENDIF
		
	ENDPROC

ENDDEFINE
