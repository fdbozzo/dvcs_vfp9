*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="thmenu.vcx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS cntmenu AS container 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Gmenu1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SHAPE3D1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="SHAPE3D2" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*p: barra
		*p: objcall		&& Objeto Activo
		*p: wkeys
	*</DefinedPropArrayMethod>

	BackColor = 255,255,255
	BackStyle = 0
	barra = 0
	BorderColor = 114,136,141
	BorderWidth = 0
	Height = 200
	Name = "cntmenu"
	objcall = NULL		&& Objeto Activo
	Width = 200
	wkeys = 

	ADD OBJECT 'Gmenu1' AS gmenu WITH ;
		Left = 111, ;
		Name = "Gmenu1", ;
		Top = 87
		*< END OBJECT: ClassLib="thmenu.vcx" BaseClass="custom" />

	ADD OBJECT 'SHAPE3D1' AS shape3d WITH ;
		BackColor = 243,245,244, ;
		BorderColor = 114,136,141, ;
		Left = 53, ;
		Name = "SHAPE3D1", ;
		SpecialEffect = 1, ;
		Top = 126
		*< END OBJECT: ClassLib="thmenu.vcx" BaseClass="shape" />

	ADD OBJECT 'SHAPE3D2' AS shape3d WITH ;
		BackColor = 255,255,255, ;
		BorderColor = 86,102,105, ;
		Left = 57, ;
		Name = "SHAPE3D2", ;
		SpecialEffect = 1, ;
		Top = 137
		*< END OBJECT: ClassLib="thmenu.vcx" BaseClass="shape" />
	
	PROCEDURE Destroy
		FOR EACH ocontrol IN this.Controls
			IF LOWER(ocontrol.class)="labmenu"
				oControl.objForm=null
			ENDIF
		ENDFOR
		
	ENDPROC

	PROCEDURE Init
		WITH this
			.shape3d1.Left=1
			.shape3d1.Top=1
		ENDWITH
		
	ENDPROC

ENDDEFINE

DEFINE CLASS frmmenu AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="tmrMenu1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Gmove1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tmrMenu2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="imgMenu" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tmrMenu3" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: capture
		*m: countmyforms
		*m: getlabel
		*m: objfollow
		*m: opera
		*p: autoshut
		*p: barras
		*p: condishut
		*p: cursorcolor
		*p: implement
		*p: onunloadquit
		*p: operonshut
		*p: qlabels
		*p: scriptdestroy
		*p: showimage
	*</DefinedPropArrayMethod>

	AlwaysOnTop = .T.
	autoshut = .F.
	BackColor = 0,64,128
	barras = 0
	BorderStyle = 0
	Caption = "Form"
	condishut = null
	cursorcolor = .F.
	DoCreate = .T.
	Height = 120
	Icon = ..\graphics\fibona5inv.ico
	implement = .F.
	KeyPreview = .T.
	Left = 0
	MaxButton = .F.
	MinButton = .F.
	Name = "frmmenu"
	onunloadquit = .F.
	operonshut = 
	qlabels = 0
	scriptdestroy = .F.
	showimage = .T.
	ShowTips = .T.
	ShowWindow = 1
	TitleBar = 1
	Top = 0
	Width = 200

	ADD OBJECT 'Gmove1' AS gmove WITH ;
		Left = 76, ;
		Name = "Gmove1", ;
		Top = 57
		*< END OBJECT: ClassLib="thmenu.vcx" BaseClass="custom" />

	ADD OBJECT 'imgMenu' AS image WITH ;
		Height = 17, ;
		Left = 33, ;
		Name = "imgMenu", ;
		Picture = ..\graphics\mnumage.bmp, ;
		ToolTipText = "Enfocar el Menú", ;
		Top = 58, ;
		Visible = .F., ;
		Width = 32
		*< END OBJECT: BaseClass="image" />

	ADD OBJECT 'tmrMenu1' AS timer WITH ;
		Enabled = .F., ;
		Height = 23, ;
		Interval = 200, ;
		Left = 32, ;
		Name = "tmrMenu1", ;
		Top = 24, ;
		Width = 23
		*< END OBJECT: BaseClass="timer" />

	ADD OBJECT 'tmrMenu2' AS timer WITH ;
		Enabled = .F., ;
		Height = 23, ;
		Interval = 200, ;
		Left = 59, ;
		Name = "tmrMenu2", ;
		Top = 24, ;
		Width = 23
		*< END OBJECT: BaseClass="timer" />

	ADD OBJECT 'tmrMenu3' AS timer WITH ;
		Enabled = .F., ;
		Height = 23, ;
		Interval = 200, ;
		Left = 83, ;
		Name = "tmrMenu3", ;
		Top = 24, ;
		Width = 23
		*< END OBJECT: BaseClass="timer" />
	
	PROCEDURE Activate
		IF !this.AlwaysOnTop
			this.imgMenu.Visible=.F.
		ENDIF
		
	ENDPROC

	PROCEDURE capture
		LPARAMETERS xnkey
		* 5 REsta (arriba=)
		* 24 suma (abajo)
		LOCAL lcTiene,lcGo,objCont,lnColor,oControl,oLabel,;
			lcNameCont
		
		lctiene=""
		lncolor=this.cursorcolor
		FOR EACH OCONTROL IN THISFORM.Controls
			IF oControl.class#"Cntmenu"
				LOOP
			ENDIF
			objCont=ocontrol
			FOR EACH oLabel IN ocontrol.controls
				IF olabel.Class#"Labmenu"
					LOOP
				ENDIF
				IF olabel.enabled AND olabel.BackStyle=1 ;
						AND olabel.backcolor=lnColor
					lcTiene=olabel.name
					EXIT
				ENDIF
			ENDFOR
		
		ENDFOR
		IF EMPTY(lcTiene)
			lcGo="labmenu1"
		ELSE
			DO WHILE .t.
				lcGo=this.objfollow(lcTiene,IIF(xnKey=24,1,-1))
				IF !PEMSTATUS(objCont,lcGo,5)
					IF xnKey=24
						lcGo="Labmenu1"
				
					ELSE
						lcGo="Labmenu"+TRANSFORM(this.qlabels)
					ENDIF
					EXIT
					
				ENDIF
				IF objCont.&lcGo..Enabled
					EXIT
				ENDIF
				lcTiene=lcGo
			ENDDO
			
			
		ENDIF
		
		objCont.gmenu1.desactiver(objCont)
		WITH objCont.&lcGo.
			.BackColor=lnColor
			.Forecolor=RGB(255,255,255)
			.BackStyle=1
		ENDWITH
		
		
		
		
		
	ENDPROC

	PROCEDURE countmyforms
		LOCAL ocontrol,olabel, i,j,lnForms
		LOCAL ARRAY gaMenu(1)
		
		lnForms=0
		FOR EACH ocontrol IN this.controls
			IF oControl.Class#"Cntmenu"
				LOOP
			ENDIF
			FOR EACH olabel IN ocontrol.Controls
				IF olabel.class#"Labmenu"
					LOOP
				ENDIF
				
				FOR j=1 TO ALEN(olabel.gaForms,1)
					IF !ISNULL(olabel.gaForms[j,1])
						lnForms=lnForms + 1
					ENDIF
				NEXT
			ENDFOR
		ENDFOR
		RETURN lnForms
	ENDPROC

	PROCEDURE Deactivate
		IF !this.AlwaysOnTop
			this.imgMenu.Visible=THIS.SHOwimage
		ENDIF
		
	ENDPROC

	PROCEDURE Destroy
		LOCAL lcScriptDestroy,lcScriptParam,lnScript,lnparam
		LOCAL ARRAY gaScript(1),gaparam(1)
		STORE 0 TO lnScript,lnParam
		lcScriptDestroy=this.scriptdestroy
		IF !EMPTY(lcScriptDestroy)
			LnScript=ALINES(gaScript,lcScriptDestroy,16,">")
			lcScriptDestroy=LEFT(gaSCript[2],AT("<",gaScript[2])-1)
			IF lnScript>3
				lcScriptParam=LEFT(gaSCript[4],AT("<",gaScript[4])-1)
				lnParam=ALINES(gaparam,lcScriptParam,1,",")
			ENDIF
		ENDIF
		IF lnScript>0
			DO case
				CASE lnParam=6
					EXECSCRIPT(lcScriptDestroy,gaParam[1],gaParam[2],gaParam[3],gaParam[4],gaParam[5],gaParam[6])			
				CASE lnParam=5
					EXECSCRIPT(lcScriptDestroy,gaParam[1],gaParam[2],gaParam[3],gaParam[4],gaParam[5])		
				CASE lnParam=4
					EXECSCRIPT(lcScriptDestroy,gaParam[1],gaParam[2],gaParam[3],gaParam[4])
				CASE lnParam=3
					EXECSCRIPT(lcScriptDestroy,gaParam[1],gaParam[2],gaParam[3])
				CASE lnParam=2
					EXECSCRIPT(lcScriptDestroy,gaParam[1],gaParam[2])		
				CASE lnParam=1
					EXECSCRIPT(lcScriptDestroy,gaParam[1])		
				CASE lnParam=0
					EXECSCRIPT(lcScriptDestroy)		
			ENDCASE
		ENDIF
		
		
		IF PEMSTATUS(_screen,"gmenu1",5)
			_screen.RemoveObject("gmenu1")
		ENDIF
		
	ENDPROC

	PROCEDURE getlabel
		LPARAMETERS xnKeyCode
		LOCAL ocontrol,oLabel,lcBus,nat,lcTecla
		lcTEcla=UPPER(CHR(xnKeyCode))
		lcBus="\<"
		FOR EACH ocontrol IN this.Controls
			IF ocontrol.class#"Cntmenu"
				LOOP
			ENDIF
			FOR EACH olabel IN ocontrol.controls
				IF olabel.class#"Labmenu"
					LOOP
				ENDIF
				IF !olabel.enabled
					LOOP
				ENDIF
				nat=AT(lcBus,oLabel.Caption)
				IF nat>0
					IF UPPER(SUBSTR(olabel.Caption,nat+2,1))=lcTecla
						oLabel.Click()
						EXIT
					ENDIF
				ENDIF
			ENDFOR
		ENDFOR
		
			
	ENDPROC

	PROCEDURE Init
		LPARAMETERS xnWinType,xcNameImplem
		
		IF VARTYPE(xcNameImplem)#"C" OR EMPTY(xcNameImplem)
			xcNameImplem="oFrmCopy"
		ENDIF
		
		this.WindowType=EVL(xnWinType,0)
		this.implement=xcNameImplem
		
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		DO CASE
			CASE BETWEEN(nKeyCode,65,122)
				this.getlabel(nKeyCode)
			CASE INLIST(nKeyCode,5,24)
				this.capture(nKeyCode)
				
			CASE nKeyCode=13
				this.opera()	
		ENDCASE
		
		
	ENDPROC

	PROCEDURE Load
		DECLARE LONG SendMessage IN "User32";
		LONG HANDLE, LONG wMsg, ;
		LONG wParam, LONG LPARAM
		
		this.cursorcolor=RGB(10,36,106)
	ENDPROC

	PROCEDURE objfollow
		LPARAMETERS xcObjeto,xnAdd
		************************************
		* Para un objeto "text1", si xnAdd=1 Devolvera "text2"
		* Para un Objeto "Text1", si xnAdd= -1, Devolvera "Text1"
		* --------------------------------------------------------
		LOCAL lcnum,lnNum
		IF VARTYPE(xcObjeto)#"C" OR empty(xcObjeto)
			RETURN ""
		ENDIF
		IF VARTYPE(xnAdd)#"N" OR empty(xnAdd)
			xnADd=1
		ENDIF
		lcNum=CHRTRAN(xcObjeto,CHRTRAN(xcObjeto,"1234567890",""),"")
		lnNUm=VAL(lcNum)+xnAdd
		RETURN IIF(lnNum>-1,STRTRAN(xcObjeto,lcnum)+TRANSFORM(lnNum),xcObjeto)
		
	ENDPROC

	PROCEDURE opera
		LOCAL ocontrol,oLabel,objCont,lnColor,objSel
		objSel=null
		lncolor=this.cursorcolor
		FOR EACH OCONTROL IN THISFORM.Controls
			IF oControl.class#"Cntmenu"
				LOOP
			ENDIF
			objCont=ocontrol
			FOR EACH oLabel IN ocontrol.controls
				IF olabel.Class#"Labmenu"
					LOOP
				ENDIF
				IF olabel.enabled AND olabel.BackStyle=1 ;
						AND olabel.backcolor=lnColor
					objSel=olabel
					EXIT
				ENDIF
			ENDFOR
		
		ENDFOR
		IF ISNULL(objSel)
			RETURN
		ENDIF
		objSel.click()
		
		
		
	ENDPROC

	PROCEDURE Unload
		IF this.onunloadquit
			QUIT
		ENDIF
		
	ENDPROC

	PROCEDURE tmrMenu1.Timer
		LOCAL lnBarras,lnForms,lRelease
		lnBarras=thisform.barras+1
		lnForms=_Screen.FormCount
		IF lnForms#lnBarras
			lRelease=.t.
		ELSE
			IF _screen.ActiveForm.name # thisform.Name
				lRelease=.t.
			ENDIF
			
		ENDIF
		IF lRelease
			this.Enabled=.f.
			thisform.Release
		ENDIF
		
		
	ENDPROC

	PROCEDURE tmrMenu2.Timer
		LOCAL ocontrol,oLabel,lcSCript,lnForms
		lnForms=0
		FOR EACH OCONTROL IN THISFORM.Controls
			IF oControl.class#"Cntmenu"
				LOOP
			ENDIF
			FOR EACH oLabel IN ocontrol.controls
				IF olabel.Class#"Labmenu"
					LOOP
				ENDIF
				
				IF !EMPTY(olabel.Condenable)
					oLabel.Enabled=EVALUATE(olabel.Condenable)
					LOOP
				ENDIF
				
				IF olabel.comando=="<CLOSEMYFORMS/>"
					olabel.Enabled=IIF(lnforms>0,.t.,.f.)
					LOOP
				ENDIF
				
				oLabel.Enabled=ISNULL(olabel.gaforms[1,1])
				IF ISNULL(olabel.gaforms[1,1])
					olabel.gaforms[1,2]=""
					thisform.Closable=IIF(thisform.countmyforms()=0,.t.,.f.)
				ELSE
					lnforms=lnforms+1		
				ENDIF
			ENDFOR
		ENDFOR
		IF thisform.autoshut
			IF ISNULL(thisform.condishut)
				this.Enabled=.f.
				thisform.Release
			ENDIF
		ENDIF
		
		*!*			IF olabel.Class#"Labmenu"
		*!*				LOOP
		*!*			ENDIF
		*!*			
		*!*			IF !ISNULL(olabel.gaforms[1,1])
		*!*				lnforms=lnforms+1
		*!*			ENDIF
		*!*					
		*!*			lcScript=olabel.Condenable
		*!*			IF !EMPTY(lcScript)
		*!*				oLabel.Enabled=EVALUATE(lcScript)
		*!*			ELSE
		*!*				IF olabel.comando=="<CLOSEMYFORMS/>"
		*!*					olabel.Enabled=IIF(lnforms>0,.t.,.f.)
		*!*				ELSE
		*!*					oLabel.Enabled=ISNULL(olabel.gaforms[1,1])
		*!*					IF ISNULL(olabel.gaforms[1,1])
		*!*						olabel.gaforms[1,2]=""
		*!*						thisform.Closable=IIF(thisform.countmyforms()=0,.t.,.f.)
		*!*					ENDIF
		*!*					
		*!*				ENDIF
		*!*			ENDIF
		
		
	ENDPROC

	PROCEDURE tmrMenu3.Timer
		LOCAL ocontrol,oLabel,lcSCript,lnForms,objActive
		TRY
			LOCAL loex as Exception
			objActive=_Screen.ActiveForm
			lnForms=0
			FOR EACH OCONTROL IN THISFORM.Controls
				IF oControl.class#"Cntmenu"
					LOOP
				ENDIF
				FOR EACH oLabel IN ocontrol.controls
					IF olabel.Class#"Labmenu"
						LOOP
					ENDIF
				
		*!*				IF !ISNULL(olabel.gaforms[1,1])
		*!*					lnforms=lnforms+1
		*!*				ENDIF
		
					IF !EMPTY(olabel.Condenable)
						oLabel.Enabled=EVALUATE(olabel.Condenable)
						LOOP
					ENDIF
					IF  olabel.comando=="<CLOSEMYFORMS/>"
						olabel.Enabled=IIF(lnforms>0,.t.,.f.)
						LOOP
					ENDIF
		
					IF ISNULL(olabel.gaforms[1,1])
						olabel.gaforms[1,2]=""
						thisform.Closable=IIF(thisform.countmyforms()=0,.t.,.f.)
						oLabel.Enabled=.t.
					ELSE
						lnforms=lnforms+1			
						olabel.Enabled=IIF(olabel.gaforms[1,1]=objACtive,.f.,.t.)
					ENDIF			
				ENDFOR
			ENDFOR
		CATCH TO loEx
		
		FINALLY
			IF thisform.autoshut
				IF ISNULL(thisform.condishut)
					this.Enabled=.f.
					thisform.Release
				ENDIF
			ENDIF
		ENDTRY
		
		*!*				lcScript=olabel.Condenable
		*!*				IF !EMPTY(lcScript)
		*!*					oLabel.Enabled=EVALUATE(lcScript)
		*!*				ELSE
		*!*					IF olabel.comando=="<CLOSEMYFORMS/>"
		*!*						olabel.Enabled=IIF(lnforms>0,.t.,.f.)
		*!*					ELSE
		*!*						*oLabel.Enabled=ISNULL(olabel.gaforms[1,1])
		*!*						IF ISNULL(olabel.gaforms[1,1])
		*!*							olabel.gaforms[1,2]=""
		*!*							thisform.Closable=IIF(thisform.countmyforms()=0,.t.,.f.)
		*!*							oLabel.Enabled=.t.
		*!*						ELSE
		*!*							olabel.Enabled=IIF(olabel.gaforms[1,1]=objACtive,.f.,.t.)
		*!*						ENDIF
		*!*					ENDIF
		*!*				ENDIF
		
		
	ENDPROC

ENDDEFINE

DEFINE CLASS gedit AS editbox 
 	*< CLASSDATA: Baseclass="editbox" Timestamp="" Scale="Pixels" Uniqueid="" />

	BorderColor = 114,136,141
	DisabledBackColor = 242,247,243
	DisabledForeColor = 0,0,0
	FontSize = 8
	Height = 53
	Name = "gedit"
	ScrollBars = 0
	SpecialEffect = 1
	Width = 100
	
	PROCEDURE Destroy
		IF PEMSTATUS(_screen,"ObjCopy",5)
			_screen.objcopy=null
			REMOVEPROPERTY(_screen,"ObjCopy")
		ENDIF
		IF PEMSTATUS(_screen,"ofrmCopy",5)
			_screen.oFrmCopy=null
			REMOVEPROPERTY(_screen,"oFrmCopy")
		ENDIF
		IF PEMSTATUS(thisform,"gmenu1",5)
			thisform.RemoveObject("gMenu1")
		ENDIF
	ENDPROC

	PROCEDURE Init
		LOCAL lcClassdir
		IF !PEMSTATUS(thisform,"gmenu1",5)
			lcClassdir=IIF(PEMSTATUS(_screen,"Classdir",5),ADDBS(_screen.Classdir),"")
			thisform.NewObject("gmenu1","gmenu",lcClassDir+"thmenu.vcx","",.t.)
		ENDIF
		
		
	ENDPROC

	PROCEDURE RightClick
		thisform.gmenu1.gCopyPaste(thisform,this)
		
	ENDPROC

ENDDEFINE

DEFINE CLASS gmenu AS custom 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: addlabel
		*m: bindhide
		*m: closeform
		*m: closemyforms
		*m: convoca
		*m: countmyforms
		*m: desactiver
		*m: gcopypaste
		*m: getfopen
		*m: getpopup		&& Genera el menu popup
		*m: getvaltag
		*m: gmforms
		*m: gralmenu
		*m: hidebymouse
		*m: hideform
		*m: hidefrm
		*m: hidemenu
		*m: menudefined
		*m: objprogram
		*m: pmltag
		*m: putshutdown
		*m: puttag
		*m: putwithin		&& Coloca un objeto dentro de los límites del form
		*m: qualifer
		*m: qualifer2
		*m: releasemenu
		*m: setfondo
		*m: showerror
		*m: shutforms
		*m: stuffmenu
		*m: wokupas
		*p: classdir
		*p: cursorcolor
		*p: kttmat
		*p: kttord
		*p: lbclose
		*p: menucaption
		*p: nitems		&& Cantidad de Items de Menu
		*p: qlabels
		*p: ttforms
		*a: gaforms[1,0]
		*a: gamenu[1,0]		&& Array de Menu
	*</DefinedPropArrayMethod>

	classdir = .F.
	cursorcolor = 6956042
	Name = "gmenu"
	nitems = 0		&& Cantidad de Items de Menu
	Width = 30
	
	PROCEDURE addlabel
		LPARAMETERS xoCnt,;
				xcCaption,;
				xcCommand,;
				xlEnabled,;
				xnWid,;
				xnBarra,;
				xcSubCommand,;
				xoParam,;
				xlTextbox
				
		LOCAL oControl,lnCont,lntop,lcName,lcControlClass,lctry,lcObjeto,;
			lnLab,lnShp,lcNameShape
		STORE 0 TO lnLab,lnShp,lnCont	
		lcObjeto=IIF(xlTextbox,"txtmenu","labmenu")
		lcTry="\<"
		IF VARTYPE(xnBarra)#"N"
			xnBarra=0
		ENDIF
		IF VARTYPE(xcSubCommand)#"C"
			xcSubCommand=""
		ENDIF
		
		
		lnTop=3
		IF UPPER(xcCaption)#"<RAYA/>"
			xoCnt.wkeys=xoCnt.Wkeys+UPPER(LEFT(xcCommand,1))+","
		ENDIF
		FOR EACH oControl IN xoCnt.Controls
			lcControlClass=LOWER(oControl.Class)
			DO case
				CASE INLIST(lcControlClass,"labmenu","txtmenu")
					lnCont=lnCont+1	
					lnLab=lnLab+1
					lntop=lnTop+oControl.Height			
				CASE lcControlClass="shline"
					lnCont=lnCont+1		
					lnShp=lnShp + 1
					lntop=lnTop+oControl.Height + 1
			ENDCASE
			
		
		ENDFOR
		lnCont=lnCont+1
		*lcName="LabMenu"+TRANSFORM(lnCont)
		DO CASE
			CASE UPPER(xcCaption)=="<RAYA/>"
				lnShp = lnShp + 1
				lcName="shpMenu"+TRANSFORM(lnShp)
				xoCnt.newObject(lcName,"ShLine",this.classdir+"thmenu.vcx")
				WITH xoCnt.&lcName
					.top=lnTop
					.Left=0
					
					.Width=xnWid+30
					.visible=.t.
					.Enabled=.f.
				ENDWITH
					
			OTHERWISE
				
			*	xoCnt.NewObject(lcName,"Labmenu",this.classdir+"thmenu.vcx")
				lnLab = lnLab + 1
				lcName="LabMenu"+TRANSFORM(lnLab)
				xoCnt.NewObject(lcName,lcObjeto,this.classdir+"thmenu.vcx")
				WITH xoCnt.&lcName.
					.top=lntop
					.left=3
					.Width=xnWid
					.height=17
					IF xlTextbox
						.Value=" "+IIF(AT(lcTry,xcCaption)=0,lcTry,"")+xcCaption
					ELSE
						.Caption=" "+IIF(AT(lcTry,xcCaption)=0,lcTry,"")+xcCaption
					ENDIF
					.Enabled=xlEnabled
					.Comando=xccommand
					.Barra=IIF(EMPTY(xnBarra),lnCont,xnBarra)
					.objForm=xoParam
					.SubCommand=xcSubCommand
					.Condenable=xcSubCommand
					.visible=.t.
				ENDWITH
		ENDCASE
		xoCnt.parent.qlabels=lnLab
		RETURN lnCont
		
	ENDPROC

	PROCEDURE bindhide
		LPARAMETERS xoObject,xnModo,xlNotMMScreen,xcNameMenu
		IF VARTYPE(xnModo)#"N"
			xnMOdo=0
		ENDIF
		
		LOCAL nlen,oparent,I,oControl,oPage,oCommand,lcHide
		IF xnModo=1
			lcHide="HideFrm"
		ELSE
			lcHIde="HideMenu"
		ENDIF
		
		
		DO case
			CASE LOWER(xoObject.name)=="screen"
				IF !PEMSTATUS(_screen,"gmenu1",5)
					_Screen.NewObject("gmenu1","gMenu",this.classdir+"thmenu.vcx")
				ENDIF
		
				BINDEVENT(_Screen,"click",_Screen.gmenu1,lcHide)	
				BINDEVENT(_Screen,"Rightclick",_Screen.gmenu1,lcHide)	
				IF !xlNotMMSCreen
					BINDEVENT(_Screen,"MouseMove",_Screen.gmenu1,"hidebymouse")
				endif
			CASE LOWER(xoObject.baseclass)=="pageframe"
				BINDEVENT(xoObject,"click",this,lcHide)
				FOR EACH OPAGE IN xoObject.pages
					BINDEVENT(opage,"click",this,lcHide)
					this.bindhide(opage,xnModo)
				ENDFOR
			CASE INLIST(LOWER(xoObject.baseclass),"commandgroup","optiongroup")
				FOR EACH ocommand IN xoObject.buttons
					this.bindhide(oCommand,xnModo)
				ENDFOR
		
			CASE LOWER(xoObject.baseclass)=="form"
				BINDEVENT(xoObject,"click",this,lcHide)
				BINDEVENT(xoObject,"moved",this,lcHide)
				FOR EACH ocontrol IN xoObject.Controls
					this.bindhide(oControl,xnModo)
				ENDFOR
		
			CASE INLIST(LOWER(xoObject.baseclass),"container","page")
				BINDEVENT(xoObject,"click",this,lcHide)
				FOR EACH ocontrol IN xoObject.Controls
					this.bindhide(oControl,xnModo)
				ENDFOR
				
			CASE INLIST(LOWER(xoObject.baseclass),"textbox","editbox","combobox","listbox","commandbutton","label","checkbox","shape","line","image")
				BINDEVENT(xoObject,"click",this,lcHide)	
				
		
		
		ENDCASE
		
		
	ENDPROC

	PROCEDURE closeform
		LPARAMETERS xnIndex
		* Cierra un formulario
		*_sCreen.Forms(xnIndex).Hide()
		_sCreen.Forms(xnIndex).release()
		RETURN
		
	ENDPROC

	PROCEDURE closemyforms
		LPARAMETERS xoform
		LOCAL ocontrol,olabel, i,j
		LOCAL ARRAY gaMenu(1)
		FOR EACH ocontrol IN xoform.controls
			IF oControl.Class#"Cntmenu"
				LOOP
			ENDIF
			FOR EACH olabel IN ocontrol.Controls
				IF !INLIST(olabel.class,"Labmenu","Txtmenu")
					LOOP
				ENDIF
				
				FOR j=1 TO ALEN(olabel.gaForms,1)
					IF !ISNULL(olabel.gaForms[j,1])
						olabel.gaForms[j,1].release
					ENDIF
				NEXT
			ENDFOR
		ENDFOR
			
	ENDPROC

	PROCEDURE convoca
		LPARAMETERS xoLabel
		
		LOCAL lcCommand,objSel,lnotFocus,LnBarra,;
			lcsel,objSel,lnInitSel,lnLength,lcText,lRelease,oform,;
			lcSubCommand,lQuit,lcExtract,objParam,lnMess,lcTrueCommand,;
			lDoit,lcNameMenu,oFormLabel,lJump
			
		lDoit=.T.
		TRY
			LOCAL loEx as Exception
			objSel=xolabel.parent.objCall
			oform=xoLabel.parent.parent
			oformLabel=xolabel.gaforms[1,1]
			LnBarra=xoLabel.barra
			lcTrueCommand=xoLabel.comando
			lcCommand=UPPER(ALLTRIM(xoLabel.Comando))
			lcSubCommand=xoLabel.SubCommand
			objParam=xoLabel.objform
			lcNameMenu=oform.implement
			
		
			IF PEMSTATUS(oform,"OperOnShut",5)
				oform.operonshut=lcSubCommand
			ENDIF
			
			DO CASE 
				CASE INLIST(lccommand,"<COPY>","<CUT>","<PASTE>")
					lnInitsel=objsel.SelStart
					lnLength=objSel.SelLength
					lcText=objsel.value
		
					DO case
						CASE lcCommand="<COPY>"
							_ClipText=objSel.SelText
							lRelease=.t.
						CASE LcCommand=="<CUT>"
							_ClipText=objSel.SelText
							objSel.Value=LEFT(lcText,lnInitSel);
								+SUBSTR(lcText,lnInitsel+lnLength+1)
			
							objSel.SelLength=0
							lRelease=.t.
						CASE LCCOMMAND=="<PASTE>"
							IF !EMPTY(objsel.SelText)
								lcText=LEFT(lcText,lnInitSel);
									+SUBSTR(lcText,lnInitsel+lnLength+1)
							ENDIF
							IF !EMPTY(_clipText)
								objSel.Value=LEFT(lcText,lnInitSel);
									+_ClipText ;
									+SUBSTR(lcText,lnInitSel + 1)
							ENDIF	
						
							objSel.SelLength=0
							lRelease=.t.
								
						OTHERWISE
			
					ENDCASE
				CASE lcCommand=="<FORM/>"
					lRelease=.t.
					lnotFocus=.t.
					IF _screen.FormCount>=LnBarra
						oform=_screen.Forms(LnBarra)
						WITH oform
							IF .windowState=1
								.WindowState=0
							ENDIF
								
							.Show()
						ENDWITH
					ENDIF
		
				CASE LEFT(LcCommand,LEN("<SCRIPT>"))=="<SCRIPT>"
		
					IF VARTYPE(oFormLabel)="O"
						oFormLabel.WindowState=0
						oFormLabel.Show()
						lJump=.t.
					ENDIF
					IF !lJump		
						lcExtract=STREXTRACT(lcCommand,"<SCRIPT>","</SCRIPT>")
						IF ISNULL(objParam)
							EXECSCRIPT(lcExtract)
						ELSE
		
							EXECSCRIPT(lcExtract,objparam)
						ENDIF
					ENDIF
					
				
				CASE LEFT(lcCommand,LEN("<DOFORM>"))=="<DOFORM>"
		
					IF VARTYPE(oFormLabel)="O"
						oFormLabel.WindowState=0
						oFormLabel.Show()
						lJump=.t.
					ENDIF
						
		
					IF !lJump
						LcForm=STREXTRACT(lcCommand,"<DOFORM>","</DOFORM>")
						lcName=STREXTRACT(lcCommand,"<NAME>","</NAME>")
						lcParam=STREXTRACT(lcCommand,"<PARAM>","</PARAM>")		
		
						loName=IIF(EMPTY(lcName),lcForm,lcName)	
						IF !EMPTY(lcForm)
		
							IF VARTYPE(&loname)="O"
								&loname..Windostate=0
								&loname..Show()
							ELSE
								IF !EMPTY(lcName)
									RELEASE &lcName
									PUBLIC &lcname
								ENDIF
							
								DO case
								CASE !EMPTY(lcName) AND !EMPTY(lcParam)
		
									DO FORM &lcForm NAME &lcname WITH &lcParam				
								CASE !EMPTY(lcname) AND EMPTY(lcparam)
									DO FORM &lcForm NAME &lcname
								CASE EMPTY(lcName) AND !EMPTY(lcParam)
									DO FORM &lcForm WITH &lcParam
								CASE EMPTY(lcName) AND EMPTY(lcParam)
									DO FORM &lcform
								ENDCASE
							ENDIF
						
						ENDIF
					ENDIF
								
				
				CASE lcCommand=="<CLOSEFORM/>"
					this.Shutforms()
				
					lRelease=.f.
					lnotFocus=.t.
		
			
		
				CASE LEFT(lcCommand,LEN("<DOFORM|C|="))=="<DOFORM|C|="
					LcdoForm=This.getvaltag(lcCommand)
					IF ISNULL(xoLabel.objForm)
						DO FORM &lcDoForm
						xoLabel.objForm=_Screen.Forms(1)
					ELSE
						xoLabel.objform.Show()
					ENDIF
				
				
				OTHERWISE
			
			ENDCASE
			IF AT("<PREVENT>",lcCommand)>0
				IF this.countmyforms(oForm)>0
					lnMess=MESSAGEBOX(STREXTRACT(lcTrueCommand,"<PREVENT>","</PREVENT>"),4,"Acción de Menú")
					IF lnMess#6
						LDOIT=.F.
					ENDIF
				ENDIF
							
			ENDIF
			IF LDOIT
				IF AT("<CLOSEMYFORMS/>",lcCommand)>0
					This.Closemyforms(oform)
					lRelease=.f.
					lNotFocus=.t.
				ENDIF
				IF AT("<CLOSEFORM/>",lcCommand)>0
					this.Shutforms()
					lRelease=.f.
					lnotFocus=.t.	
				ENDIF
				IF AT("<CLOSETHIS/>",lcCommand)>0
					IF VARTYPE(oform)=="O"
						oform.release
						oform=null
					ENDIF
				ENDIF
				IF AT("<SHUTDOWN>",lcCommand)>0
					IF PEMSTATUS(_screen,"ObjCopy",5) AND VARTYPE(_screen.objcopy)="O"
						_screen.objCopy.onUnloadQuit=.t.
					ENDIF
					IF PEMSTATUS(_screen,"openforms",5) AND VARTYPE(_screen.openforms)="O"
						_screen.openforms.onUnloadQuit=.t.
					ENDIF
					
					this.Shutforms()
					lRelease=.f.
					lnotFocus=.t.	
				ENDIF
			ENDIF
		CATCH TO loEx
			loex.UserValue=PROGRAM()
			this.showerror(loEx)
		FINALLY
			IF lRelease
		
				IF _Screen.MenuModo=1
					IF VARTYPE(_screen.objcopy)="O"
						_Screen.objCopy.Hide()
						_Screen.objCopy.release
					ENDIF
					
				ELSE
					xoLabel.parent.visible=.f.	
				ENDIF
				IF !lNotFocus
					objSel.SetFocus 
				ENDIF
				
			ENDIF
		
		
		ENDTRY
		
		
	ENDPROC

	PROCEDURE countmyforms
		LPARAMETERS xoform
		LOCAL ocontrol,olabel, i,j,lnForms
		LOCAL ARRAY gaMenu(1)
		
		lnForms=0
		FOR EACH ocontrol IN xoform.controls
			IF oControl.Class#"Cntmenu"
				LOOP
			ENDIF
			FOR EACH olabel IN ocontrol.Controls
		*!*			IF olabel.class#"Labmenu"
		*!*				LOOP
		*!*			ENDIF
			
				IF !INLIST(olabel.class,"Labmenu","Txtmenu")
					LOOP
				ENDIF
					
				FOR j=1 TO ALEN(olabel.gaForms,1)
					IF !ISNULL(olabel.gaForms[j,1])
						lnForms=lnForms + 1
					ENDIF
				NEXT
			ENDFOR
		ENDFOR
		RETURN lnForms
		
	ENDPROC

	PROCEDURE desactiver
		LPARAMETERS xoCnt
		LOCAL ocontrol
		FOR EACH ocontrol IN xoCnt.controls
			IF INLIST(ocontrol.baseclass,"Label","Textbox")
				oControl.BackStyle=0
				ocontrol.ForeColor=RGB(0,0,0)
			ENDIF
		ENDFOR
		
	ENDPROC

	PROCEDURE gcopypaste
		LPARAMETERS xoform,xoObjeto
		LOCAL lnMouse,lnTimer,i,lnModo,lNotBind,lnItems,;
			lNotImage,lnMinWidth
		lnItems=4
		WITH this
			DIMENSION .gamenu(lnItems,6)
			.gaMenu[1,1]=[Copiar]
			.gaMenu[1,2]="<COPY>"
			.gaMenu[1,3]=!EMPTY(xoObjeto.SelTExt)
			.gamenu[1,4]=1
			.gamenu[1,6]=null
		
			.gaMenu[2,1]=[Recortar]
			.gaMenu[2,2]="<CUT>"
			.gaMenu[2,3]=IIF(!EMPTY(xoObjeto.SelTExt) and !xoObjeto.readonly,.t.,.f.)
			.gamenu[2,4]=2
			.gamenu[2,6]=null
		
			.gaMenu[3,1]=[<RAYA/>]
			.gaMenu[3,2]=""
			.gaMenu[3,3]=.f.
			.gamenu[3,4]=3
			.gamenu[3,6]=null
		
			.gaMenu[4,1]=[Pegar]
			.gaMenu[4,2]="<PASTE>"
			.gaMenu[4,3]=IIF(!EMPTY(_clipText) AND !xoObjeto.readonly,.t.,.f.)
			.gamenu[4,4]=4
			.gaMenu[4,6]=null
		ENDWITH
		
		lnMouse=1
		lnTimer=0
		lnModo=1
		lnotBind=.F.
		lNotImage=.t.
		lnMinWidth=100
		This.getpopup(xoform,xoObjeto,lnModo,lnMouse,lnTimer,lNotBind,lnItems,.f.,.f.,null,;
			.f.,.f.,.t.,lnMinWidth)
		
		*	PROCEDURE getpopup		&& Genera el menu popup
		*	LPARAMETERS xoform,xoObjeto,xnModo,xnMouseObj,xnTimer,;
		*	xlNotBind,xnItemsMenu,xlNotMMScreen,xlNotOnTop,xoCondiShut,;
		*	xcCaption,xcScriptDestroy,xlNotImage,xnMinWidth
		
	ENDPROC

	PROCEDURE getfopen
		LPARAMETERS xcFile,xnHandler,xlNotVerb,xnPrivileg,xlOpenEmpty
		**************************************************************
		*!*	Objeto: abrir un archivo con FOPEN()
		*!*	xcFile:    	Ruta y Nombre de archivo completo que se intenta abrir
		*!*				Se puede pasar como xcfile+"<eof/>" 
		*!*				para que quede en EOF()
		*!*	xnHandler: @ Handler pasado por referencia
		*!*	xlNotVerb: suprime comentarios si es .t.
		*!*	xnPrivileg, may be:
		*!*		0 Read Only Buffer
		*!*	 	1 Write ONly Buffer
		*!*	 	2 Read Write Buffer
		*!*	 	10 Read Only No Buffer
		*!*	 	11 Write ONly No Buffer
		*!*	 	12 Read Write No Buffer
		*!*	xlOpenEmpty: Valida la apertura de un archivo vacío
		*!* --------------------------------------------------------------
		*!*	IF !This.GetFopen(addbs(lcRoot)+"archivo.txt",@nfop,.F.,12)
		*!*		RETURN
		*!*	ENDIF
		*!* --------------------------------------------------------------
		
		local lRet,gnEnd,gnTop,nat,lcTag
		lREt=.t.
		STORE "" TO lcTag
		IF EMPTY(xcfile)
			IF !xlNotVerb
				MESSAGEBOX("Nombre de archivo vacío",0,"GetFopen Message")
			ENDIF
			RETURN .F.
		ENDIF
		nat=AT("<",xcFile)
		IF nat > 0
			lcTag=LOWER(TRIM(SUBSTR(xcFile,nat)))
			xcFile=LEFT(xcfile,nat-1)
		ENDIF
		
		IF !file(xcFile)
			if !xlNotVerb
				MESSAGEBOX("El archivo &xcFile no existe",0,"GetFopen Message")
			endif
			RETURN .F.
		endif
		if vartype(xnPrivileg)#"N"
			xnPrivileg=0
		ENDIF
		IF !INLIST(xnPrivileg,0,1,2,10,11,12)
			xnPrivileg=12
		ENDIF
		
		xnHandler=fopen(xcFile,xnPrivileg)
		if xnHandler=-1
			if !xlNotVerb
				MESSAGEBOX("El archivo &xcFile no pudo abrirse",0,"GetFopen Message")
			ENDIF
			RETURN .F.
		ENDIF
		gnEnd=Fseek(xnHandler,0,2)
		IF EMPTY(lcTag) OR lcTag#"<eof/>"
			gntop=Fseek(xnHandler,0)	
		ENDIF
		
		IF !xlOpenEmpty AND gnEnd<=0
			if !xlnotVerb
				MESSAGEBOX("El archivo &xcFile no tiene contenido",0,"GetFopen Message")
			endif
			FCLOSE(xnHandler)
			lRet=.f.
		ENDIF
		
		RETURN lret
		
		
	ENDPROC

	PROCEDURE getpopup		&& Genera el menu popup
		LPARAMETERS xoform,xoObjeto,xnModo,xnMouseObj,xnTimer,;
			xlNotBind,xnItemsMenu,xlNotMMScreen,xlNotOnTop,xoCondiShut,;
			xcCaption,xcScriptDestroy,xlNotImage,xnMinWidth,xcNameMenu,;
			xnCursorColor
		
		
		
		IF VARTYPE(xcNamemenu)#"C" OR EMPTY(xcNameMenu)
			xcNameMenu="OFRMCOPY"
		ENDIF	
		IF VARTYPE(xnCursorColor)#"N"
			xncursorcolor=this.cursorcolor
		ENDIF
			
		IF VARTYPE(xoform)#"O"
			xoForm=_Screen
		ENDIF
		IF VARTYPE(xoObjeto)#"O"
			xoObjeto=_Screen
		ENDIF
		IF VARTYPE(xnModo)#"N"
			xnModo=1
		ENDIF
		IF VARTYPE(xnItemsMenu)#"N"
			xnItemsMenu=ALEN(this.gamenu,1)
		ENDIF
		IF VARTYPE(xnTimer)="L"
			xnTimer=IIF(xnTimer,1,0)
		ENDIF
		IF VARTYPE(xnMinWidth)#"N" OR EMPTY(xnMinWidth)
			xnMinWidth=180
		ENDIF
		
		
		IF PEMSTATUS(_screen,xcNamemenu,5)
			IF VARTYPE(_screen.&xcNameMenu.)="O"
				_screen.&xcNameMenu..release
			ENDIF
			REMOVEPROPERTY(_screen,xcNameMenu)
		ENDIF
		IF PEMSTATUS(_screen,"MenuModo",5)
			REMOVEPROPERTY(_screen,"MenuModo")
		ENDIF
		
		LOCAL ARRAY gaMouse(1),gaProp(4,3)
		LOCAL I,lnLabels,lnTop,lnWid,lnAdd,lAutoCenter,;
			lnTop,lnLeft,lnBarHei,lcRoot,objMenu
		
		lnTop=25
		lnLeft=10
		lnBarHei=IIF(EMPTY(xcCaption),0,25)
		
		lnAdd=2
		
		AMOUSEOBJ(gaMouse,1)
		
		lnWid=0
		FOR I=1 TO ALEN(This.gaMenu,1)
			lnWid=MAX(this.wokupas(This.gaMenu[i,1])+20,lnWid)
		NEXT
		lnWid=MAX(xnMinWidth,lnWid)
		LOCAL lnModo
		lnModo=IIF(xoForm.WindowType=0,1,0)
		lnTop=0
		ADDPROPERTY(_Screen,"MenuModo",lnModo)
		IF lnModo=1
			IF VARTYPE(xnMouseObj)="L"
				xnMouseObj=IIF(xnMouseObj,1,0)
			ENDIF
			* xnMouseObj: 0-Screen 1-Objeto 2-Read_topLeft
		
			* Con Formulario
		
			ADDPROPERTY(_Screen,xcNameMenu,NEWOBJECT("FrmMenu",this.classdir+"thmenu.vcx"))
			
			objMenu=_Screen.&xcNameMenu.
			
			objMenu.NewObject("Cnt_Copy","Cntmenu",this.classdir+"thmenu.vcx")
			IF UPPER(xcNameMenu)=="OFRMCOPY"
				_Screen.objCopy=objMenu
			ENDIF
			*.Cnt_Copy	
			WITH objMenu
				DO case
					CASE xnMouseObj=0
						.top=MCOL(_Screen.Name,3)
						.left=MROW(_Screen.Name,3)			
					CASE xnMOuseObj=1
						.top=gaMouse[4]
						.left=gaMOuse[3]			
					CASE xnMouseObj=2
						* debe leer la posición de alguna parte
						.Top=lnTop
						.left=lnLeft
					CASE xnMOuseObj=3
						lAutoCenter=.t.
					
					CASE xnMouseObj=4
						* Inferior derecho
				ENDCASE
				
				.Cnt_Copy.top=1+lnAdd
				.Cnt_Copy.Left=1+lnAdd
				.Cnt_Copy.objCall=xoObjeto
				.Cnt_Copy.visible=.t.
			ENDWITH	
			FOR I=1 TO ALEN(This.gaMenu,1)
				lnLabels=This.addlabel(objMenu.Cnt_Copy ,;
					This.gaMenu[i,1],;
					This.gaMenu[i,2],;
					This.gaMenu[i,3],;
					lnWid,;
					This.gaMenu[i,4],;
					this.gaMenu[i,5],;
					this.gaMenu[i,6])
			NEXT	
			
			FOR EACH ocontrol IN objMenu.Cnt_Copy.Controls
				IF INLIST(LOWER(ocontrol.Class),"labmenu","txtmenu","shline")
					lntop=oControl.top+oControl.Height
				ENDIF
			ENDFOR
			WITH objMenu.Cnt_copy
				.BackStyle=1
				.BackColor=RGB(255,255,255)
				.Shape3d1.visible=.f.
				.Shape3d2.visible=.f.
				.Width=lnWid + 5 
				.Height=lnTop + 3
			ENDWITH		
		
			WITH objMenu
				.Titlebar=IIF(EMPTY(xcCaption),0,1)
				IF !EMPTY(xcCaption)
					.Caption=xcCaption
				ENDIF	
			
				.Width=.cnt_Copy.left*2+.Cnt_Copy.Width
				.Height=.Cnt_copy.top*2+.Cnt_Copy.Height
				.MaxHeight=.height
				.MaxWidth=.Width
				.barras=xnItemsMenu
				.tmrMenu1.Enabled=IIF(xnTimer=1,.t.,.f.)
				.tmrMenu2.Enabled=IIF(xnTimer=2,.t.,.f.)
				.tmrMenu3.Enabled=IIF(xnTimer=3,.t.,.f.)
				.AutoShut=!ISNULL(xoCondishut)
				.CondiShut=xoCondishut
				.ScriptDestroy=xcScriptDestroy
				
		*		.Alwaysontop=!xlNotBind
				.AlwaysOnTop=IIF(xlNotBind,.f.,!xlNotOntop)
				IF !.alwaysontop
				*	.imgMenu.Visible=.t.
					.imgMenu.top=.Height-.IMgMenu.Height-4
					.imgMenu.left=.Width - .imgMenu.Width - 4
					.imgMenu.zorder(0)
				ENDIF
				.ShowImage=!xlNotImage		
				.gmove1.gbindtit()
				.CursorColor=xnCursorColor
				
		*		.AutoCenter=lAutoCenter
		*		.Show()
			ENDWITH	
		
			DO CASE
		
				CASE INLIST(xnMouseObj,0,1)
					this.putwithin(objMenu)
			
		
				CASE xnMouseObj=3
					objMenu.Autocenter=.t.
				CASE xnMouseObj=4
					* INferior derecha
					WITH objMenu
						.top=_Screen.Height-.Height-2-lnBarHei
						.Left=_Screen.Width - .Width - 2
					ENDWITH
		
				CASE xnMouseObj=5
					* Inferior izquierda
					WITH objMenu
						.top=_Screen.Height-.Height-2-lnBarHei
						.Left=2
					ENDWITH
				
			ENDCASE
				
			objMenu.Show()
		ELSE
		
			IF PEMSTATUS(xoForm,"Cnt_Copy",5)
				xoForm.RemoveObject("Cnt_Copy")
			ENDIF
			xoForm.NewObject("Cnt_Copy","cntMenu",this.classdir+"thmenu.vcx")
		
			_Screen.objCopy=xoform.Cnt_Copy
		
		
			WITH xoForm.Cnt_Copy
				.top=gaMouse[4]
				.left=gaMOuse[3]
				.ObjCall=xoObjeto
				.Visible=.t.
			ENDWITH
			FOR I=1 TO ALEN(This.gaMenu,1)
				lnLabels=This.addlabel(xoForm.Cnt_Copy ,This.gaMenu[i,1],;
					This.gaMenu[i,2],;
					This.gaMenu[i,3],;
					lnWid,;
					this.gaMenu[i,4])
			NEXT
			FOR EACH ocontrol IN xoForm.Cnt_Copy.Controls
				IF INLIST(LOWER(ocontrol.Class),"labmenu","txtmenu","shline")
					lntop=oControl.top+oControl.Height
				ENDIF
			ENDFOR
			WITH xoForm.Cnt_copy
				.Shape3d2.top=1
				.Shape3d2.Left=2
				.Shape3d1.Width=lnWid+5
				.Shape3d1.Height=lntop+4
				.Shape3d1.top=2
				.Shape3d1.left=1
				.shape3d2.Width=.Shape3d1.width
				.Shape3d2.height=.Shape3d1.height
				.Width=.shape3d1.left+.Shape3d1.Width+1
				.Height=.shape3d1.top+.Shape3d1.Height+1
			ENDWITH	
			FOR EACH ocontrol IN xoForm.Cnt_Copy.Controls
				IF LOWER(ocontrol.class)="shline"
					oControl.Left=1
					oControl.Width=lnWid+4
				ENDIF
			ENDFOR
			
			this.putwithin(xoForm.Cnt_Copy)
			
		ENDIF
		IF !xlNotBind
			this.bindhide(xoForm,lnModo,xlNotMMScreen,xcNamemenu)
		ENDIF
		
		IF VARTYPE(xoObjeto)="O" AND xoObjeto.name # _screen.Name
			xoObjeto.setfocus
		ENDIF
		
		
	ENDPROC

	PROCEDURE getvaltag
		LPARAMETERS xcTag,xlReturnObj
		**************************************
		* PROCEDURE getValTag(xcTag,xlReturnObj)
		**************************************
		* Etiquetas calificadas ( <NOMBRE|N|1250.12/>  )
		*-----------------------------------------------
		* Si xlREturnObj=.F. (Default)
		* 	Devuelve el valor de una etiqueta
		*	lcTag="<ESTADO|L|.T./>
		*	? GetValTag(lcTag)	&& muestra .T.
		*
		* Si xlReturnObj= .T.
		*	Devuelve la referencia a un objeto "empty"
		*	con tres propiedades: Tag, Value y Type
		*
		*	lcTag="<IMPORTE|N|12726.15/>
		*	obj=GetValTAg(LcTag,.t.)
		*	if !isnull(obj)
		*		? obj.value	&& devuelve 12726.15
		*		? obj.Tag	&& devuelve "IMPORTE"
		*		? Obj.type	&& devuelve "N"
		*		obj=null
		*	ENDIF
		*-----------------------------------------------------
		* Etiquetas cerradas simples
		*-----------------------------------------------------
		* lcTag="<ANIMAL=PERRO/>
		* ? GetvalTAg(lcTag)	&& muestra "PERRO"
		*
		* 	obj=GetValTag(lcTag,.t.)
		*	IF !isnull(obj)
		*		? Obj.TAg	&& muestra "ANIMAL"
		*		? obj.Value	&& muestra "PERRO"
		*		? obj.type	&& siempre muestra "C"
		*	ENDIF
		*-------------------------------------------------------
		* Rutina de exploración:
		*	LOCAL obj,fcr,nHand,lnResp
		*	FCR=ADDBS(FullPath(""))+"formula.txt"
		*	nhand=-1
		*	IF !This.GetFopen(fcr,@nhand,.f.,12)
		*		RETURN
		*	ENDIF
		*	DO WHILE !FEOF(nhand)
		*		lcTag=FGETS(nhand,2048)
		*		DO case
		*			CASE AT("|S|=",UPPER(lcTag))#0	&& ExecScrip()
		*				=GetValTAg(lcTag)
		
		*			CASE AT("#|=",lcTAg)#0			&& Define la tag como variable de paso y le asigna el valor
		*				obj=GetValTAg(lcTAg,.t.)
		*				IF !ISNULL(obj)
		*					lcEtiq=obj.Tag
		*					&lcEtiq=obj.Value
		*					obj=null
		*				ENDIF
		*
		*			OTHERWISE
		*		
		*				lnResp=GetValtag(lcTag)		&& Asigna a lnResp el valor contenido de la tag (puede ser |E|)
		*				
		*		ENDCASE
		*	
		*	ENDDO
		*	=FCLOSE(nhand)
		*	
		******************************************************
		
		LOCAL lcLast,lcREs,lnLines,nPart,lcVari,lctype,;
			lxReturn,objReturn,lcTryValor
		
		IF VARTYPE(xctag)#"C" OR EMPTY(xcTag)
			RETURN IIF(xlREturnObj,null,"")
		ENDIF
		LOCAL ARRAY gaTags(1),gaTypes(1)
		xcTAg=ALLTRIM(xcTag)
		xcTAg=ALLTRIM(xctag)
		* Tag inválida
		IF LEFT(xcTag,1)#"<" OR ;
				AT("=",xcTAg)=0 OR ;
				RIGHT(xcTag,1)#">"
			RETURN IIF(xlREturnObj,null,"")
		ENDIF
		lxREturn=""
		lcType="C"
		
		xcTag=ALLTRIM(xcTag)
		lcLast=IIF(RIGHT(xcTag,2)=="/>","/>",RIGHT(xcTag,1))
		lcRes=STREXTRACT(xcTag,"<",lcLast)
		
		IF AT("|=",lcRes)#0
			lnlines=ALINES(gaTags,lcRes,1+2,"|=")
			IF lnLines>0
				gaTAgs[1]=gaTags[1]+"|"
			ENDIF
		ELSE
			lnLines=ALINES(gatags,lcRes,1+2,"=")
		ENDIF
		*lcVari=gatags[1]
		IF lnLines>1
			lcTryValor=""
			FOR i=2 TO lnLines
				lcTryValor=lcTryValor+gaTags[i]
			NEXT
			IF AT("#|",gatags[1])#0
				xlREturnObj=.t.
				gaTAgs[1]=STRTRAN(gaTAgs[1],"#|","|")
			ENDIF
			lcVari=gatags[1]
			lcTryValor=gatags[2]
			nat=AT("|",gatags[1])
			IF nAt=LEN(gatags[1])-IIF(RIGHT(gatags[1],1)="|",2,1)
				nPart=ALINES(gatypes,gatags[1],5,"|")
				lcVari=gatypes[1]
				lcType=UPPER(gatypes[2])
				DO case
					CASE lcType$"NI"
						lxReturn=VAL(lcTryValor)
					CASE lcType="L"
						lxReturn=IIF(AT("T",lcTryValor)#0,.t.,.f.)
					
					CASE LCTYPE="D"
						lxReturn=CTOD(lcTryValor)
					
					CASE LCTYPE="T"
						lxReturn=CTOT(lcTryValor)
					CASE lctype="E"
						lxReturn=EVALUATE(lcTRyValor)
					CASE lcType="S"
						lcTryValor=CHRTRAN(lcTryValor,CHR(10),"")
						lcTryValor=CHRTRAN(lcTRyValor,CHR(28),CHR(13))
						lxReturn = EXECSCRIPT(lcTryValor)
					CASE lctype="X"
						lxREturn=null
					CASE lcType="O"
						lxReturn=null
					OTHERWISE
						lxReturn=lcTRyValor
				ENDCASE
			ELSE
				lxReturn = lcTryValor		
			ENDIF
		ENDIF
		IF xlREturnObj
			objReturn=CREATEOBJECT("empty")
			ADDPROPERTY(objReturn,"Tag",lcVari)
			ADDPROPERTY(objReturn,"Value",lxREturn)
			ADDPROPERTY(objReturn,"Type",lctype)
		ENDIF
		RETURN IIF(xlReturnObj,ObjReturn,lxREturn)
		
	ENDPROC

	PROCEDURE gmforms
		LPARAMETERS xcShutDown,xcCaption
		LOCAL fmCount, lnMouse,lTimer,lnAdd,lnPas,;
			lNotMmScreen,lcCaption
		
		lcCaption=xcCaption
			
		lnAdd=IIF(EMPTY(xcShutDown),2,4)
		
		IF PEMSTATUS(_screen,"ofrmCopy",5)
			IF VARTYPE(_Screen.OpenForms)="O"
				_Screen.OpenForms.release
			ENDIF
			REMOVEPROPERTY(_screen,"OpenForms")
		ENDIF
		IF PEMSTATUS(_screen,"MenuModo",5)
			REMOVEPROPERTY(_screen,"MenuModo")
		ENDIF
		
		FmCount=_screen.FormCount
		IF fmCount=0
			MESSAGEBOX("No hay formularios activos",0,"gmForms Message")
			RETURN
		ENDIF
		
		WITH this
			DIMENSION .gamenu(fmCount+lnAdd,6)
			FOR i=fmCount TO 1 STEP -1
				.gaMenu[i,1]=_screen.Forms[i].Caption
				.gaMenu[i,2]="<FORM/>"
				.gaMenu[i,3]=.t.
				.gaMenu[i,4]=i+1
			ENDFOR
			lnPas=1
			.gaMenu[fmCount+lnPas,1]=[<RAYA/>]
			.gaMenu[fmCount+lnPas,2]=""
			.gaMenu[fmCount+lnPas,3]=.F.
			.gaMenu[fmCount+lnPas,4]=0	
			
			lnPas=lnPas+1
			.gaMenu[fmCount+lnPas,1]="Cerrar Formularios"
			.gaMenu[fmCount+lnPas,2]="<CLOSEFORM/>"
			.gaMenu[fmCount+lnPas,3]=.T.
			.gaMenu[fmCount+lnPas,4]=0
		
			IF !EMPTY(xcShutdown)
				lnPas=lnPas+1
				.gaMenu[fmCount+lnPas,1]=[<RAYA/>]
				.gaMenu[fmCount+lnPas,2]=""
				.gaMenu[fmCount+lnPas,3]=.F.
				.gaMenu[fmCount+lnPas,4]=0	
				
				lnPas=lnPas+1
				.gaMenu[fmCount+lnPas,1]="Cerrar Theodore..." 
				.gaMenu[fmCount+lnPas,2]="<SHUTDOWN>"
				.gaMenu[fmCount+lnPas,3]=.T.
				.gaMenu[fmCount+lnPas,4]=0
			*	.gaMenu[fmCount+lnPas,5]=xcShutDown
				
			ENDIF
			FOR I=1 TO ALEN(.gaMenu,1)
				.gamenu[i,5]=""
				.gamenu[i,6]=null
			NEXT
			
		ENDWITH
		
		
		lTimer=.T.
		lnotMMScreen=!EMPTY(xcShutDown)
		lnMouse=IIF(EMPTY(xcShutDown),0,3)
		
		This.getpopup(_Screen,_Screen,1,lnMouse,lTimer,.f.,FmCount,;
			lNotMMScreen,.f.,null,lcCaption,.f.,.f.,150,"OPENFORMS")
		
		*
		
		*!*	LPARAMETERS xoform,xoObjeto,xnModo,xnMouseObj,xnTimer,;
		*!*		xlNotBind,xnItemsMenu,xlNotMMScreen,xlNotOnTop,xoCondiShut,;
		*!*		xcCaption,xcScriptDestroy,xlNotImage,xnMinWidth
		************************************************************************
		
		
	ENDPROC

	PROCEDURE gralmenu
		LPARAMETERS xgaARray,;
			xnPosicion,;
			xnTimer,;
			xlNotOntop,;
			xoCondishut,;
			xcCaption,;
			xcSCriptDestroy,;
			xlBindHide,;
			xcNameMenu,;
			xnCursorColor
			
		EXTERNAL ARRAY xgaArray
		
		*!*	--------------------------------------------------------------------------
		*!*	xgaArray	Matriz de 6 columnas
		*!*	xnPosicion 	0-MouseScreen 1-MouseObjeto 2-Config 3-Autocenter
		*!*				4-Esq Inf derecha 5-Esq Inf Izquierda
		*!*	xnTimer 0-Ninguno, 1-tmrMenu1, 2-tmrMenu2
		*!*	tmrMenu1: Permite que el menú se cierre cuando se hace click en otro objeto
		*!*	tmrMenu2: Lee la propiedad Condenable. Determina si un item está activo o no
		*!*	xoCondishut: Referencia objeto Form. Si se cierra xoCondishut, se cierra el menú
		*!*	xcCaption: Caption del frmMenu. Si tiene un valor, se mostrará la TitleBar
		*!*	xcScripDestroy: Script que ejecutará frmMenu.Destroy.
		*!*	xcScripDestroy Formato: "<SCRIPT>Comandos</SCRIPT><PARAM>Parametros</PARAM>"
		*!*	xlBindHide: Si el formulario se cierra cuando el puntero del mouse abandona el form.
		*!*	--------------------------------------------------------------------------
		*!*	Tags:
		*!*	1) Separador: xgaArray[i,1]="<RAYA/>"
		*!*	2) tags para xgaArray[i,2]:
		*!*	2.1) <SHUTDOWN> 		Cerrar el sistema
		*!*	2.2) <CLOSEFORMS/> 		Cierra todos los forms abiertos
		*!*	2.3) <CLOSEMYFORMS/> 	Cierra los forms abiertos por un proceso de menú
		*!*	2.4) <CLOSETHIS/>		Cierra el Menú
		*!*	<PREVENT>Mensaje para Messagebox</PREVENT> con Shutdown,CloseForms,CloseMyForms,CloseThis
		*!*	2.5) <SCRIPT>Comandos</SCRIPT><PARAM>Param1,param2,param3</PARAM>
		
		LOCAL fmCount,i,j,ji,lnRow,lnCol,lError,lcMens,;
			lnModo,lnPosicion,lnTimer,lNotBind,lNotMMScreen
		
		lNotBind=!xlBindHide
		IF VARTYPE(xcNameMenu)#"C" OR EMPTY(xcNameMenu)
			xcNameMenu="gralMenu"
		ENDIF
		
		* Para capitalización de claves.
		LOCAL ARRAY gaClave(15)
		gaClave[1]="<CLOSETHIS/>"
		gaClave[2]="<CLOSEFORM/>"
		gaClave[3]="<CLOSEMYFORMS/>"
		gaClave[4]="<SHUTDOWN>"
		gaClave[5]="<PREVENT>"
		gaClave[6]="</PREVENT>"
		gaClave[7]="<FORM/>"
		gaClave[8]="<SCRIPT>"
		gaClave[9]="</SCRIPT>"
		gaClave[10]="<PARAM>"
		gaClave[11]="</PARAM>"
		gaClave[12]="<DOFORM>"
		gaClave[13]="</DOFORM>"
		gaClave[14]="<NAME>"
		gaClave[15]="</NAME>"
			
		lcMens="Mensaje de Error"
		lnModo=1
		lnPosicion=EVL(xnPosicion,0)	&& May be 0,4,5
		lnTimer=EVL(xnTimer,2)			&& May be 0,1,2
		lnNotbind=.f.
		lNotMMScreen=.f.
		
		lnRow=ALEN(xgaArray,1)
		lnCol=ALEN(xgaArray,2)
		IF lnCol<6
			* Se necesitará reposicionar el array
			* Cuando se agregan columnas a un array, se desplazan los elementos
			* Por lo que es necesario reponer los elementos originales.
			ACOPY(xgaArray,gapaso)
			DIMENSION xgaArray(lnRow,6)
			FOR i=1 TO ALEN(gapaso,1)
				FOR j=1 TO ALEN(gapaso,2)
					xgaArray[i,j]=gapaso[i,j]
				NEXT
			NEXT
			
		ENDIF
		
		FOR i=1 TO lnRow
			IF VARTYPE(xgaArray[i,5])#"C"
				xgaARray[i,5]=""
			ENDIF
			IF !INLIST(VARTYPE(xgaArray[i,6]),"O","X")
				xgaArray[i,6]=null
			ENDIF
		NEXT
		
		
		*<Verificación y Capitalización>
		FOR i=1 TO lnRow
			lcItem=UPPER(EVL(xgaArray[i,2],""))
			DO CASE 
				
				CASE EMPTY(xgaARray[i,1]) AND EMPTY(xgaArray[i,2])
					lError=.t.
					lcMens="Las columnas 1 y 2 no pueden estar ambas vacías * Row="+TRANSFORM(i)
				CASE xgaArray[i,1]=="<RAYA/>"
					xgaArray[i,2]=""
				
				CASE VARTYPE(xgaArray[i,2])#"C"
					lcMens="La columna 2 debe ser tipo character * Row="+TRANSFORM(i)
					lError=.t.	
				CASE UPPER(LEFT(xgaArray[i,2],LEN("<SCRIPT>")))=="<SCRIPT>"
					IF AT("</SCRIPT>",lcItem)=0
						lcMens="Falta </SCRIPT> en el comando o está mal escrito * Row="+TRANSFORM(i)
						lError=.t.
					ELSE
						lnScript=LEN(STREXTRACT(lcItem,"<SCRIPT>","</SCRIPT>"))
						xgaArray[i,2]="<SCRIPT>"+SUBSTR(xgaArray[i,2],LEN("<SCRIPT>")+1,lnScript)+"</SCRIPT>"
					
					ENDIF
				
					
			ENDCASE
		
			FOR ji=1 TO ALEN(gaClave)
				IF AT(gaClave[ji],xgaArray[i,2])>0
					xgaArray[i,2]=this.stuffmenu(xgaArray[i,2],gaClave[ji])
				ENDIF
			NEXT
			
		
			
		NEXT
		IF lError
			MESSAGEBOX(lcMens,0,PROGRAM())
			RETURN
		ENDIF
		
		IF VARTYPE(xcSCriptDestroy)#"C"
			xcSCriptDestroy=""
		ENDIF
		IF !EMPTY(xcScriptDestroy)
			xcScriptDestroy=UPPER(ALLTRIM(xcSCriptDestroy))
			LnScript=ALINES(gaScript,xcScriptDestroy,16,">")
			IF !INLIST(lnScript,2,4)
				xcScriptDestroy=""
			ELSE
				xcSCriptDestroy="<SCRIPT>"+LEFT(gaSCript[2],AT("<",gaScript[2])-1)+"</SCRIPT>"
				IF lnScript>3
					xcScriptDestroy=xcSCriptDestroy;
						+"<PARAM>"+LEFT(gaSCript[4],AT("<",gaScript[4])-1)+"</PARAM>"
			
				ENDIF
			ENDIF
		ENDIF
		
		*</Verificación y Capitalización>
		
		*!*	IF PEMSTATUS(_screen,"gralMenu",5)
		*!*		IF VARTYPE(_screen.gralMenu)="O"
		*!*			_screen.gralMenu.release
		*!*		ENDIF
		*!*		REMOVEPROPERTY(_screen,"gralMenu")
		*!*	ENDIF
		*!*	IF PEMSTATUS(_screen,"MenuModo",5)
		*!*		REMOVEPROPERTY(_screen,"MenuModo")
		*!*	ENDIF
		
		TRY
			LOCAL loMenu as Exception
		
			DIMENSION this.gamenu(lnRow,lnCol)
			FOR i=1 TO lnRow
				FOR j=1 TO lnCol
					this.gaMenu[i,j]=xgaArray[i,j]
				NEXT
			NEXT
				
			This.getPopup(_Screen,_Screen,lnModo,lnPosicion,lnTimer,;
				lNotBind,lnRow,lNotMMScreen,xlnotOntop,;
				xoCondiShut,xcCaption,xcSCriptDestroy,.f.,,xcNameMenu,;
				xnCursorColor)
		
		
		*!*	LPARAMETERS xoform,xoObjeto,xnModo,xnMouseObj,xnTimer,;
		*!*		xlNotBind,xnItemsMenu,xlNotMMScreen,xlNotOnTop,xoCondiShut,;
		*!*		xcCaption,xcScriptDestroy,xlNotImage,xnMinWidth,xcNameMenu
		
		CATCH TO loMenu
			loMenu.UserValue=PROGRAM()
			this.showerror(loMenu)
		FINALLY
			loMenu=null
		ENDTRY
		RETURN
		
		*!*------------------------------------------------------
		*!*	<SAMPLE1>
		*!*------------------------------------------------------
		*!*	LOCAL fmCount,lnTimer,lnAdd,lnPas,;
		*!*		lcScript,lnPosicion
		*!*		
		*!*	lnAdd=2
		*!*	fmCount=6
		*!*	LOCAL ARRAY gaMenu(fmCount,6)
		*!*	TEXT TO lcScript NOSHOW PRETEXT 1
		*!*	IF VARTYPE(BUFON_TRAN)="O"
		*!*		BUFON_TRAN.RELEASE
		*!*	ENDIF
		*!*	RELEASE BUFON_TRAN
		*!*	PUBLIC BUFON_TRAN
		*!*	do form &dformu\busorden NAME BUFON_TRAN WITH "FON_TRAN","FON_TVIM"
		*!*	ENDTEXT
		*!*			
		*!*	gaMenu[1,1]="\<Transferencias de Fondos"
		*!*	gaMenu[1,2]="<SCRIPT>"+lcScript+"</SCRIPT>"
		*!*	gaMenu[1,3]=!mnConsul[38]
		*!*	gaMenu[1,4]=1
		*!*	gaMenu[1,5]="!mnConsul[38]"
		*!*	
		*!*	TEXT TO lcScript NOSHOW PRETEXT 1
		*!*	IF VARTYPE(BUFON_DIS)="O"
		*!*		BUFON_DIS.RELEASE
		*!*	ENDIF
		*!*	RELEASE BUFON_DIS
		*!*	PUBLIC BUFON_DIS
		*!*	do form &dformu\busorden NAME BUFON_DIS WITH "FON_DIS","FON_VIM"
		*!*	ENDTEXT
		*!*	
		*!*	gaMenu[2,1]="\<Disposición de Fondos"
		*!*	gaMenu[2,2]="<SCRIPT>"+lcScript+"</SCRIPT>"
		*!*	gaMenu[2,3]=!mnConsul[39]
		*!*	gaMenu[2,4]=2
		*!*	gaMenu[2,5]="!mnConsul[39]"
		*!*		
		*!*	TEXT TO lcScript NOSHOW PRETEXT 1
		*!*	IF VARTYPE(BUFON_ING)="O"
		*!*		BUFON_ING.RELEASE
		*!*	ENDIF
		*!*	RELEASE BUFON_ING
		*!*	PUBLIC BUFON_ING
		*!*	do form &dformu\busorden NAME BUFON_ING WITH "FON_ING","FON_IVIM"
		*!*	ENDTEXT
		*!*			
		*!*	gaMenu[3,1]="\<Ingreso de Fondos"
		*!*	gaMenu[3,2]="<SCRIPT>"+lcScript+"</SCRIPT>"
		*!*	gaMenu[3,3]=!mnConsul[40]
		*!*	gaMenu[3,4]=3	
		*!*	gaMenu[3,5]="!mnConsul[40]"
		*!*	
		*!*	gaMenu[4,1]=[<RAYA/>]
		*!*	gaMenu[4,2]=""
		*!*	gaMenu[4,3]=.F.
		*!*	gaMenu[4,4]=4
		*!*	
		*!*	TEXT TO lcScript NOSHOW PRETEXT 1
		*!*	IF VARTYPE(BUFON_TRAN)="O"
		*!*		BUFON_TRAN.RELEASE
		*!*	ENDIF
		*!*	IF VARTYPE(BUFON_DIS)="O"
		*!*		BUFON_DIS.RELEASE
		*!*	ENDIF
		*!*	IF VARTYPE(BUFON_ING)="O"
		*!*		BUFON_ING.RELEASE
		*!*	ENDIF
		*!*	RELEASE bufon_tan,bufon_dis,bufon_Ing	
		*!*	ENDTEXT
		*!*			
		*!*	gaMenu[5,1]=[\<Cerrar Consultas]
		*!*	gaMenu[5,2]="<SCRIPT>"+lcScript+"</SCRIPT>"
		*!*	gaMenu[5,3]=.T.
		*!*	gaMenu[5,4]=5	
		*!*	gaMenu[5,5]=[VARTYPE(bufon_tran)="O" or VARTYPE(bufon_dis)="O" or VARTYPE(bufon_ing)="O"]	
		
		*!*	gaMenu[6,1]=[Ce\<rrar Menú]
		*!*	gaMenu[6,2]="<CLOSETHIS/>"
		*!*	gaMenu[6,3]=.T.
		*!*	gaMenu[6,4]=6
		*!*	
		*!*		
		*!*	FOR i=1 TO ALEN(gaMenu,1)
		*!*		gaMenu[i,6]=null
		*!*	NEXT
		*!*		
		*!*	lnPosicion=5
		*!*	lnTimer=2
		*!*	lNotOnTop=.t.
		*!*	lcCaption="Consulta de Fondos"
		*!*	objMenu=NEWOBJECT("gmenu","clases\thmenu.vcx")
		*!*	objMenu.GralMenu(@gaMenu,lnPosicion,lnTimer,lNotOnTop,null,lcCaption)
		*!*	objMenu=null
		*!*	</SAMPLE1>
		*!*	----------------------------------------------------------------------
		
		*!*	<SAMPLE2>
		*!*	----------------------------------------------------------------------
		*!*	LOCAL nlis,i,lcScript,objMenu,lnPosicion,lnTimer,lNotOntop,;
		*!*		lcCaption,lRaya,lshat,ldoti,lcScriptDestroy,;
		*!*		lcMensaje
		*!*		
		*!*	lcCaption="Cajas del Sistema"
		*!*	lnPosicion=5
		*!*	lnTimer=2
		*!*	lNotOnTop=.t.
		*!*	lcScriptDestroy="<SCRIPT>mnConsul[77]=.F.</SCRIPT>"
		
		*!*	* Archivo
		*!*	LOCAL ARRAY amatri(6,2)
		*!*	aMatri[1,1]=[CAJAS]
		*!*	aMatri[2,1]=[RENDIR]
		*!*	aMatri[3,1]=[ANTISUEL]
		*!*	aMatri[4,1]=[BOLTAR]
		*!*	aMatri[5,1]=[CAJATIK]
		*!*	aMatri[6,1]=[FONDOFI]
		
		*!*	FOR i=1 TO ALEN(amatri,1)
		*!*		amatri[i,2]=0
		*!*		lcFile=amatri[i,1]
		*!*		lShat=.f.
		*!*		ldoit=USED(lcfile)
		*!*		IF !ldoit
		*!*			lcUsed=ADDBS(dplan)+lcfile
		*!*			ldoit=Netuse(lcUsed,.f.,3)
		*!*			lshat=ldoit
		*!*		ENDIF
		*!*		IF ldoit
		*!*			SELECT (lcfile)
		*!*			COUNT TO aMatri[i,2]
		*!*			IF lshat
		*!*				USE
		*!*			ENDIF
		*!*		ENDIF
		*!*	NEXT
		*!*	LOCAL ARRAY gaMenu(1,6)
		*!*	lRaya=.f.
		*!*	nlis=0
		*!*	*1
		
		*!*	IF aMatri[1,2]#0
		
		*!*		TEXT TO lcScript NOSHOW PRETEXT 1
		*!*		IF VARTYPE(FCAJAS)="O"
		*!*			FCAJAS.RELEASE
		*!*		ENDIF
		*!*		RELEASE FCAJAS
		*!*		PUBLIC FCAJAS
		*!*		DO FORM &DFORMU\VCAJASEL NAME FCAJAS WITH "C","1"
		*!*		ENDTEXT
		*!*		nlis=nLis+1
		*!*		DIMENSION gaMenu(nlis,6)
		*!*		gaMenu[nlis,1]=[\<Cajas de Dinero en Efectivo]
		*!*		gaMenu[nlis,2]="<SCRIPT>"+lcScript+"</SCRIPT>"
		*!*		gaMenu[nlis,3]=.T.
		*!*		gaMenu[nlis,4]=nlis
		*!*		gaMenu[nlis,5]=""
		*!*		gaMenu[nlis,6]=null
		
		*!*		*2
		*!*		nLis=nLis+1
		*!*		DIMENSION gamenu(nlis,6)
		*!*		gaMenu[nlis,1]=[<RAYA/>]
		*!*		gaMenu[nlis,2]=""
		*!*		gaMenu[nlis,3]=.F.
		*!*		gaMenu[nlis,4]=nlis
		*!*		gaMenu[nlis,5]=""
		*!*		gaMenu[nlis,6]=null
		*!*		lRaya=.t.
		*!*	ENDIF
		
		*!*	*3
		*!*	IF amatri[2,2]#0
		*!*		nlis=nLis+1
		*!*		DIMENSION gamenu(nlis,6)
		*!*		TEXT TO lcScript NOSHOW PRETEXT 1
		*!*		IF VARTYPE(FRENDIR)="O"
		*!*			FRENDIR.RELEASE
		*!*		ENDIF
		*!*		RELEASE FRENDIR
		*!*		PUBLIC FRENDIR
		*!*		DO FORM &DFORMU\VCAJASEL NAME FRENDIR WITH "G","1"
		*!*		ENDTEXT
		
		*!*		gaMenu[nlis,1]=[\<Gastos a Rendir]
		*!*		gaMenu[nlis,2]="<SCRIPT>"+lcScript+"</SCRIPT>"
		*!*		gaMenu[nlis,3]=.T.
		*!*		gaMenu[nlis,4]=nlis
		*!*		gaMenu[nlis,5]=""
		*!*		gaMenu[nlis,6]=null
		*!*		lRaya=.f.
		*!*	ENDIF
		
		
		*!*	*4
		*!*	IF amatri[3,2]#0
		*!*		TEXT TO lcScript NOSHOW PRETEXT 1
		*!*		IF VARTYPE(FSUELDOS)="O"
		*!*			FSUELDOS.RELEASE
		*!*		ENDIF
		*!*		RELEASE FSUELDOS
		*!*		PUBLIC FSUELDOS
		*!*		DO FORM &DFORMU\VCAJASEL NAME FSUELDOS WITH "S","1"
		*!*		ENDTEXT
		*!*		nlis=nLis+1
		*!*		DIMENSION gamenu(nlis,6)
		*!*		gaMenu[nlis,1]=[Cuentas de \<Sueldos]
		*!*		gaMenu[nlis,2]="<SCRIPT>"+lcScript+"</SCRIPT>"
		*!*		gaMenu[nlis,3]=.T.
		*!*		gaMenu[nlis,4]=nlis
		*!*		gaMenu[nlis,5]=""
		*!*		gaMenu[nlis,6]=null
		*!*		lRaya=.f.
		*!*	ENDIF
		*!*	IF !lRaya
		*!*		nlis=nlis+1
		*!*		DIMENSION gaMenu(nlis,6)
		*!*		gaMenu[nlis,1]=[<RAYA/>]
		*!*		gaMenu[nlis,2]=""
		*!*		gaMenu[nlis,3]=.F.
		*!*		gaMenu[nlis,4]=nlis
		*!*		gaMenu[nlis,5]=""
		*!*		gaMenu[nlis,6]=null	
		*!*		lRaya=.t.
		
		*!*	ENDIF
		
		*!*	IF amatri[4,2]#0
		*!*		TEXT TO lcScript NOSHOW PRETEXT 1
		*!*		IF VARTYPE(FTARJE)="O"
		*!*			FTARJE.RELEASE
		*!*		ENDIF
		*!*		RELEASE FTARJE
		*!*		PUBLIC FTARJE
		*!*		DO FORM &DFORMU\VCAJASEL NAME FTARJE WITH "J","1"
		*!*		ENDTEXT
		*!*		nlis=nLis+1
		*!*		DIMENSION gamenu(nlis,6)
		*!*		gaMenu[nlis,1]=[\<Tarjetas en Cartera]
		*!*		gaMenu[nlis,2]="<SCRIPT>"+lcScript+"</SCRIPT>"
		*!*		gaMenu[nlis,3]=.T.
		*!*		gaMenu[nlis,4]=nlis
		*!*		gaMenu[nlis,5]=""
		*!*		gaMenu[nlis,6]=null
		*!*		lRaya=.f.
		
		*!*	ENDIF
		*!*	IF amatri[5,2]#0
		*!*		TEXT TO lcScript NOSHOW PRETEXT 1
		*!*		IF VARTYPE(FFIJOS)="O"
		*!*			FFIJOS.RELEASE
		*!*		ENDIF
		*!*		RELEASE FFIJOS
		*!*		PUBLIC FFIJOS
		*!*		DO FORM &DFORMU\VCAJASEL NAME FFIJOS WITH "F","1"
		*!*		ENDTEXT
		*!*		nlis=nLis+1
		*!*		DIMENSION gamenu(nlis,6)
		*!*		gaMenu[nlis,1]=[\<Fondos de Terceros]
		*!*		gaMenu[nlis,2]="<SCRIPT>"+lcScript+"</SCRIPT>"
		*!*		gaMenu[nlis,3]=.T.
		*!*		gaMenu[nlis,4]=nlis
		*!*		gaMenu[nlis,5]=""
		*!*		gaMenu[nlis,6]=null
		*!*		lRaya=.f.
		*!*	ENDIF
		*!*	IF amatri[6,2]#0
		*!*		TEXT TO lcScript NOSHOW PRETEXT 1
		*!*		IF VARTYPE(FTIKET)="O"
		*!*			FTIKET.RELEASE
		*!*		ENDIF
		*!*		RELEASE FTIKET
		*!*		PUBLIC FTIKET
		*!*		DO FORM &DFORMU\VCAJASEL NAME FTIKET WITH "K","1"
		*!*		ENDTEXT
		*!*		nlis=nLis+1
		*!*		DIMENSION gamenu(nlis,6)
		*!*		gaMenu[nlis,1]=[Ti\<ket de Sueldos]
		*!*		gaMenu[nlis,2]="<SCRIPT>"+lcScript+"</SCRIPT>"
		*!*		gaMenu[nlis,3]=.T.
		*!*		gaMenu[nlis,4]=nlis
		*!*		gaMenu[nlis,5]=""
		*!*		gaMenu[nlis,6]=null
		*!*		lRaya=.f.
		*!*	ENDIF
		
		
		*!*	* + 3
		*!*	****** finale ****************
		*!*	IF !lRaya
		*!*		nLis=nLis+1
		*!*		DIMENSION gamenu(nlis,6)
		*!*		gaMenu[nlis,1]=[<RAYA/>]
		*!*		gaMenu[nlis,2]=""
		*!*		gaMenu[nlis,3]=.F.
		*!*		gaMenu[nlis,4]=nlis
		*!*		gaMenu[nlis,5]=""
		*!*		gaMenu[nlis,6]=null
		*!*	ENDIF
		
		*!*	nlis=nlis+1
		*!*	DIMENSION gamenu(nlis,6)
		*!*	gaMenu[nlis,1]=[\<Cerrar Formularios]
		*!*	gaMenu[nlis,2]="<CLOSEMYFORMS/>"
		*!*	gaMenu[nlis,3]=.t.
		*!*	gaMenu[nlis,4]=nlis
		*!*	gaMenu[nlis,5]=""
		*!*	gaMenu[nlis,6]=null
		
		*!*	lcMensaje="Desea cerrar el Menú?"+CHR(13)+"Se cerrarán todos los formularios dependientes"
		*!*	nlis=nlis+1
		*!*	DIMENSION gamenu(nlis,6)
		*!*	gaMenu[nlis,1]=[Ce\<rrar Menú]
		*!*	gaMenu[nlis,2]="<CLOSEMYFORMS/><CLOSETHIS/><PREVENT>"+lcMensaje+"</PREVENT>"
		*!*	gaMenu[nlis,3]=.t.
		*!*	gaMenu[nlis,4]=nlis
		*!*	gaMenu[nlis,5]=""
		*!*	gaMenu[nlis,6]=null
		
		*!*	objMenu=NEWOBJECT("gmenu","clases\thmenu.vcx")
		*!*	objMenu.GralMenu(@gaMenu,lnPosicion,lnTimer,;
		*!*		lNotOnTop,null,lcCaption,lcScriptDestroy)
		*!*	objMenu=null
		*!*	mnConsul[77]=.t.
		*!*	----------------------------------------------------------------------
		*!*	</SAMPLE2>
		
	ENDPROC

	PROCEDURE hidebymouse
		LPARAMETERS nButton, nShift, nXCoord, nYCoord
		LOCAL nEvents
		LOCAL ARRAY gaEvent(1)
		nEvents=AEVENTS(gaEvent,0)
		IF nEvents=0
			RETURN
		ENDIF
		obj=gaEvent[1]
		*MESSAGEBOX(PROGRAM())
		IF VARTYPE(_Screen.oFrmCopy)="O"
			_Screen.oFrmCopy.Release
		
		ENDIF
	ENDPROC

	PROCEDURE hideform
		LPARAMETERS xnIndex
		TRY
			LOCAL loEx as Exception
			_Screen.Forms(xnIndex).HIde()
		CATCH TO loEx
			loex.UserValue=PROGRAM()
			ShowError(loex,.t.)
		FINALLY
		ENDTRY
	ENDPROC

	PROCEDURE hidefrm
		LOCAL nEvents
		LOCAL ARRAY gaEvent(1)
		nEvents=AEVENTS(gaEvent,0)
		IF nEvents=0
			RETURN
		ENDIF
		obj=gaEvent[1]
		*MESSAGEBOX(PROGRAM())
		IF VARTYPE(_Screen.oFrmCopy)="O"
			_Screen.oFrmCopy.Release
		
		ENDIF
	ENDPROC

	PROCEDURE hidemenu
		LOCAL nEvents
		LOCAL ARRAY gaEvent(1)
		nEvents=AEVENTS(gaEvent,0)
		IF nEvents=0
			RETURN
		ENDIF
		obj=gaEvent[1]
		IF VARTYPE(_Screen.objCopy)="O"
			_Screen.objCopy.visible=.f.
		ENDIF
		
		
	ENDPROC

	PROCEDURE Init
		LPARAMETERS xlAdded
		IF !PEMSTATUS(_Screen,"objCopy",5)
			ADDPROPERTY(_Screen,"ObjCopy",null)
		ENDIF
		this.classdir=ADDBS(IIF(PEMSTATUS(_screen,"ClassDir",5),_screen.classdir,"Libs"))
		
		IF xlAdded
			BINDEVENT(thisform,"Destroy",this,"releasemenu")
		ENDIF
		
		*!*	This.Cursorcolor=RGB(10,36,106) && 6956042
		
		
		*!*	------------------------------------------
		*!*	<Implementación Formularios>
		*!*	Menu Formularios Abiertos
		*!*	LOCAL obj
		*!*	obj=NEWOBJECT("gmenu","clases\thmenu.vcx")
		*!*	obj.GmForms()
		*!*	obj=null
		*!*	SKIP FOR EMPTY(_screen.FormCount)
		*!*	</Implementación Formularios>
		*!*	------------------------------------------
		*!*	<Implementación Copy, Cut, Paste>
		*!*	Debe hacerse a través de cuadros de clase
		*!*	Ver modelo en Clase "gEdit" ("EditBox")
		*!*	</Implementación Copy, Cut, Paste>
		*!*	------------------------------------------
		
		*!*	Sample Model
		*!*	WITH this
		*!*		DIMENSION .gamenu(fmCount+2,6)
		*!*		FOR i=fmCount TO 1 STEP -1
		*!*			.gaMenu[i,1]=_screen.Forms[i].Caption
		*!*			.gaMenu[i,2]="<FORM/>"
		*!*			.gaMenu[i,3]=.t.
		*!*			.gaMenu[i,4]=i+1
		*!*		ENDFOR
		
		*!*		.gaMenu[fmCount+1,1]=[<RAYA/>]
		*!*		.gaMenu[fmCount+1,2]=""
		*!*		.gaMenu[fmCount+1,3]=.F.
		*!*		.gaMenu[fmCount+1,4]=0	
		
		*!*		.gaMenu[fmCount+2,1]="Cerrar Formularios"
		*!*		.gaMenu[fmCount+2,2]="<CLOSEFORM/>"
		*!*		.gaMenu[fmCount+2,3]=.T.
		*!*		.gaMenu[fmCount+2,4]=0
		
		*!*	ENDWITH
	ENDPROC

	PROCEDURE menudefined
	ENDPROC

	PROCEDURE objprogram
		LOCAL nItems,i,cProg,lcExact,objRet
		objret=NEWOBJECT("empty")
		ADDPROPERTY(objret,"gaProg[1]","")
		lcExact=SET("Exact")
		SET EXACT ON
		nItems=0
		FOR i=1 TO 128
			cprog=PROGRAM(i)
			IF EMPTY(cProg)
				EXIT
			ENDIF
			IF cProg#"OBJPROGRAM"
				nItems=nItems+1
				DIMENSION OBJRET.gaprog(nItems)
				objret.gaprog[nItems]=cProg
			ENDIF
		NEXT
		SET EXACT &lcExact
		RETURN objREt
		
		
	ENDPROC

	PROCEDURE pmltag
		LPARAMETERS xcTAg,xnLevel,xlClose,xnFlag
		*!*	Genera un tag abierta con xnLevel desplazamiento
		*!*	0 - Nada
		*!*	1 - Upper
		*!*	2 - Proper
		*!*	3 - Lower
		*!*	------------------------------------------------------
		IF VARTYPE(xnLevel)#"N"
			xnLevel=0
		ENDIF
		
		DO case
			CASE VARTYPE(xnFlag)="L"
				xnFlag=""
			CASE VARTYPE(xnFlag)="N"
				xnFlag=TRANSFORM(xnFlag)
		ENDCASE
		
		DO case
			CASE EMPTY(xnFlag)
		
			CASE xnFlag$'uU1'
				xcTag=UPPER(xctag)
				
			CASE xnLfag$'pP2'
				xcTag=PROPER(xctag)		
				
			CASE xnFlag$'lL3'
				xcTag=LOWER(xcTag)
		
		ENDCASE
		RETURN REPLICATE(CHR(9),xnLevel)+IIF(xlClose,"</","<")+ALLTRIM(xctag)+">"
		
	ENDPROC

	PROCEDURE putshutdown
		LPARAMETERS xnFlag
		*******************
		LOCAL n_fop,fcr,nfCount,lcTag,lPut,lDoit,ii_,lnVisi
		STORE 0 TO lnVisi,nfCount,ii_
		IF VARTYPE(xnFlag)#"N"
			xnFlag=0
		ENDIF
		fcr=ADDBS(_screen.dapli)+"OpenOnShut.txt"
		
		DO case
			CASE xnFlag=0
				LOCAL objProg as Object,xi as Integer
				objProg=this.ObjProgram()
				lcTag="OpenBeforeShutDown"	
				n_fop=FCREATE(fcr)
				=FPUTS(n_fop,"<Programs>")	
				FOR xi=1 TO ALEN(objProg.gaprog)
					=FPUTS(n_fop,CHR(9)+objprog.gaprog[xi])
				NEXT
				=FPUTS(n_fop,"</Programs>")
				lPut=.t.
			CASE xnFlag=1
				lcTag="OpenAfterShutDown"
				n_fop=-1
				lput=this.getfopen(fcr,@n_fop,.t.,12,.t.)
				IF lput
					FSEEK(n_fop,0,2)
				ENDIF
		
			CASE xnFlag=2
				lcTag="OpenAfterShutDownAgain"
				n_fop=-1
				lput=this.getfopen(fcr,@n_fop,.t.,12,.t.)
				IF lput
					FSEEK(n_fop,0,2)
				ENDIF	
			CASE xnFlag=3
				lcTag="OpenVisibleForms"
				n_fop=-1
				lput=this.getfopen(fcr,@n_fop,.t.,12,.t.)
				IF lput
					FSEEK(n_fop,0,2)
				ENDIF		
				
		ENDCASE
		nfCount=_Screen.FormCount
		IF lput
			=FPUTS(n_fop,"<"+lcTag+">")
			=FPUTS(n_fop,CHR(9)+"<ShutDownTime="+TTOC(DATETIME())+"/>")
			=FPUTS(n_fop,CHR(9)+"<FormCount="+TRANSFORM(nfCount)+"/>")
		
			
			FOR ii_=1 TO nfCount
				lDoit=IIF(xnFlag#3,.t.,_Screen.Forms[ii_].visible)	
				IF ldoit
					=FPUTS(n_fop,CHR(9)+"<open>"+TRANSFORM(ii_)+"-"+this.Qualifer(_screen.Forms[ii_].caption);
						+this.Qualifer(_Screen.forms[ii_].name)+"</open>")
					lnVisi=lnVisi+1
				ENDIF
				
			NEXT
			IF xnFlag=3
				=FPUTS(n_fop,CHR(9)+"<HideForms="+TRANSFORM(nfCount-lnVisi)+"/>")
			ENDIF
			=FPUTS(n_fop,"</"+lcTag+">")
			=FCLOSE(n_fop)
		ENDIF
		
		
	ENDPROC

	PROCEDURE puttag
		LPARAMETERS xcClave,xcValor,xnLevel,xcForceType,xlNotype,xcSep1,xcSep2
		****************************************************************************
		* PROCEDURE This.This.PutTag(xcClave,xcValor,xnLevel,xcForceType,xlNotype,xcSep1,xcSep2)
		****************************************************************************
		* Genera una Tag Cerrada
		*!*		xcClave:		Clave de etiqueta
		*!*		xcValor:		Valor de la etiqueta
		*!*		xnLevel:		Desplazamiento de escritura (REPLICATE(CHR(9),xnLevel)
		*!*		xcForceType:	Tipo Forzado (I,E,S) cuando se necesita un comportamiento especial
		*!*		xlNoType:		Etiqueta no calificada (cerrada normal)
		*!*		xcSep1:			Separador de apertura	("<" default)
		*!*		xcSep2:			Separador de cierre		("/>" default)
		*-----------------------------------------------------------------------------------------
		* xlNotype=.F. (Default)
		* <NOMBRE|N|1250.12/> (tipo numérico)
		* <DIA|D|25/12/2013/> (Tipo date)
		* <RESOLVE|E|SQRT( lnCateto1**2 + lnCateto2**2 )/>
		* <PROCEDE|S|MESSAGEBOX("Resultado="+LTRIM(STR(lnResp,14,4)))/>
		*---------------------------------------------------------------
		* Los tipos "CNLDT" se autocalifican
		* This.This.PutTag("VALOR",2012) genera: "<VALOR|N|=2012/>"
		* This.This.PutTag("ESTADO",.T.) genera: "<ESTADO|L|.T./>"
		* This.This.PutTag("CUIT","20120482980") genera "<CUIT|C|=2012048298/>"
		* This.This.PutTag("FECHA",17/12/2013")  genera "FECHA|D|=17/12/2013/>"
		*
		*-------------------------------------------------------------------------
		* Definición forzada
		*
		*	Escritura
		*	LOCAL lcform,lcPut
		*	LCFORM=""
		*	TEXT TO LCFORM TEXTMERGE NOSHOW PRETEXT 7
		*	<<This.This.PutTag("LNRESP",0,0,"*N")>>
		*	<<This.This.PutTag("LNCATETO1",12,0,"*N")>>
		*	<<This.This.PutTag("LNCATETO2",20,0,"*N")>>
		*	<<This.This.PutTag("LNRESP","SQRT( lnCateto1**2 + lnCateto2**2 )",0,"*E")>>
		*	<<This.This.PutTag("LNRESP","(lnResp+LnResp**2)/2",0,"*E")>>
		*	<<This.This.PutTag("MESSAGE",[MESSAGEBOX("Resultado="+LTRIM(STR(lnResp,14,4)))],0,"S")>>
		*	ENDTEXT
		*
		*	LcFile=ADDBS(fULLPATH(""))+"Formula.txt"
		*	STRTOFILE(lcForm,lcFile)
		*
		*	Nota: En xcForceType se utiliza "*", pero también se puede utilizar
		*	      cualiquier otro símbolo que no sea una letra
		*	      También se podría escribir a la inversa, "E*" en lugar de "*E"   	
		*
		*-------------------------------------------------------------------------------------
		*	REsultado (Archvivo Formula.txt)
		*	<LNRESP|N#|=0/>						&& define lnREsp=0
		*	<LNCATETO1|N#|=12/>					&& define LnCateto1=12
		*	<LNCATETO2|N#|=20/>					&& define LnCateto2=20
		*	<LNRESP|E#|=SQRT( lnCateto1**2 + lnCateto2**2 )/> 	&& lnResp=Sqrt(ln..."
		*	<LNRESP|E#|=(lnResp+LnResp**2)/2/>			&& lnResp=(lnResp+lnResp**2)/2
		*	<MESSAGE|S|=MESSAGEBOX("Resultado="+LTRIM(STR(lnResp,14,4)))/>
		*
		*	Nota: Al ejecutar, el Messagebox mostrará "Resultado=283.6619"
		*
		*---------------------------------------------------------------
		* Ejemplo para type "S" [ ExecScript() ]
		*	*Generación de la etiquta
		*
		*	LOCAL lcform,lcPut
		*	LCFORM=""
		*	TEXT TO LCFORM NOSHOW PRETEXT 7
		*	USE C:\THEODORE\ALOJA IN 0 EXCLUSIVE
		*	SELECT ALOJA
		*	IF RECCOUNT()>10
		*		GO 10
		*		replace valchar WITH "RGB() FUNCTION"
		*	ENDIF
		*	BROWSE
		*	USE
		*	ENDTEXT
		*
		*	LCPUT="SCRIPT"
		*	LcFile=ADDBS(Fullpath(""))+"ScripTag.txt"
		*	STRTOFILE(This.This.PutTag(lcPut,lcForm,,"S"),lcFile)
		*
		*	*Ejecuta procedimiento
		*	LcFile=ADDBS(FullPath(""))+"ScripTag.txt"
		*	=This.GetValTag(FILETOSTR(lcFile))
		*------------------------------------------------------
		
		LOCAL lcType,lcPutVal,lcAddComm
		STORE "" TO lcAddComm
		lcType=VARTYPE(xcValor)
		IF VARTYPE(xcForceType)="C" AND !EMPTY(xcForceType) 
			xcForceType=UPPER(ALLTRIM(xcForceType))
			IF LEN(xcForceType)>1
				xcForceType=This.ValidTExt(xcForceType,2)
				lcAddComm="#"
			ENDIF
			IF xcForceType$'CNDTLES'
				lcType=xcForceType
				xlNotype=.F.
				IF lcType="S"
					xcValor=CHRTRAN(xcValor,CHR(10),"")
					xcValor=CHRTRAN(xcValor,CHR(13),CHR(28))
				ENDIF
				
			ENDIF
		ENDIF
		
		
		DO case
			CASE lcType="N"
		
				LcPutVal=ltrim(str(xcValor,20,this.TelDecim(xcValor)))
			CASE LCTYPE="L"
				lcPutVal=IIF(xcValor,".T.",".F.")
			CASE lcType="D"
				lcPutVal=DTOC(xcValor)	
			CASE lcType="T"
				lcPutVal=TTOC(xcValor)
			CASE lcType="X"
				LcPutVal=".null."
			CASE lcType="O"
				lcPutVal="Object Reference"
			OTHERWISE
				LcPutVal=xcValor
		ENDCASE
		
		IF VARTYPE(xcSep1)#"C" OR EMPTY(xcSep1)
			xcSep1="<"
		ENDIF
		IF VARTYPE(xcSep2)#"C" OR EMPTY(xcSep2)
			xcSep2="/>"
		ENDIF
		IF VARTYPE(xnLevel)#"N"
			xnLevel=0
		ENDIF
		lcType=lcType+lcAddComm
		RETURN REPLICATE(CHR(9),xnLevel);
			+xcSep1;
			+ALLTRIM(xcClave);
			+IIF(xlNoType,"","|"+lcType+"|");
			+"=";
			+ALLTRIM(lcPutVal);
			+xcSep2
		
	ENDPROC

	PROCEDURE putwithin		&& Coloca un objeto dentro de los límites del form
		LPARAMETERS xobj
		LOCAL ntop,nleft,nwidth,nheight,nhEnd,nwEnd,oform
		DO CASE
			CASE LOWER(XOBJ.BASECLASS)="form"
				oform=xobj
				WITH xobj
					nleft=.Left
					ntop=.Top
					nWidth=.Width
					nHeight=.Height
				ENDWITH
				
				nwEnd=nleft+nWidth
				nhEnd=ntop+nHeight
				IF nwEnd>_Screen.Width
					xobj.Left=MAX(3,_Screen.Width-nwidth-10)
				ENDIF
				IF nhEnd>_Screen.Height
					xobj.top=MAX(3,_Screen.Height-nheight-1)
				ENDIF		
			OTHERWISE
				oform=xobj.parent
				WITH xobj
					nLeft=.left
					ntop=.top
					nWidth=.width
					nHeight=.Height
				ENDWITH
				nwEnd=nleft+nWidth
				nhEnd=ntop+nHeight
				IF nwEnd>oForm.Width
					xobj.Left=MAX(3,oForm.Width-nwidth-3)
				ENDIF
				IF nhEnd>oForm.Height
					xobj.top=MAX(3,oForm.Height-nheight-1)
				ENDIF
		ENDCASE
	ENDPROC

	PROCEDURE qualifer
		LPARAMETERS xDato,xcTipo,xcSymbol,xlNotQuotes
		***************************************
		* Calificador de datos simil Delimited
		
		LOCAL lcQuot,lcClin,lcRemp
		lcQuot=IIF(xlNotQuotes,[],["])
		if vartype(xcSymbol)#"C" OR empty(xcSymbol)
			xcSymbol=","
		endif
		LOCAL kvt,vret,qdezim
		*lparameters xdato
		* n,i,c,d,l
		*kvt=vartype(xDato)
		kvt=EVL(xcTipo,VARTYPE(xDato))
		vret=""
		lcClin=CHR(9)+CHR(10)+CHR(13)
		lcRemp=REPLICATE("",3)
		do case
			CASE kvt="C"
				vret=lcQuot+alltrim(strtran(xdato,xcSymbol))+lcQuot	
			case kvt="M"
				xDato=CHRTRAN(xDato,lcClin,lcRemp)
				vret=lcQuot+alltrim(strtran(xdato,xcSymbol))+lcQuot
			case kvt="N"
				qDezim=TelDecim(xDato)
				vret=ltrim(str(xDato,20,qDezim))
			case kvt="L"
				vret=iif(xdato,".T.",".F.")	
			case kvt="D"
				vret=dtoc(xdato)
			case kvt="T"
				vret=ttoc(xdato)
			case kvt="I"
				vret=transform(xdato)
			OTHERWISE
			
			
		endcase
		
		return vret+xcSymbol
		
		
	ENDPROC

	PROCEDURE qualifer2
		LPARAMETERS xDato,xcTipo,xcSymbol,xlNotQuotes
		***************************************
		* Calificador de datos simil Delimited
		* Retorna el dato sin agregado de calificador.
		
		LOCAL lcQuot,lcClin,lcRemp
		lcQuot=IIF(xlNotQuotes,[],["])
		if vartype(xcSymbol)#"C" OR empty(xcSymbol)
			xcSymbol=","
		endif
		LOCAL kvt,vret,qdezim
		*lparameters xdato
		* n,i,c,d,l
		*kvt=vartype(xDato)
		kvt=EVL(xcTipo,VARTYPE(xDato))
		vret=""
		lcClin=CHR(9)+CHR(10)+CHR(13)
		lcRemp=REPLICATE("",3)
		do case
			CASE kvt="C"
				vret=lcQuot+alltrim(strtran(xdato,xcSymbol))+lcQuot	
			case kvt="M"
				xDato=CHRTRAN(xDato,lcClin,lcRemp)
				vret=lcQuot+alltrim(strtran(xdato,xcSymbol))+lcQuot
			case kvt="N"
				qDezim=TelDecim(xDato)
				vret=ltrim(str(xDato,20,qDezim))
			case kvt="L"
				vret=iif(xdato,".T.",".F.")	
			case kvt="D"
				vret=dtoc(xdato)
			case kvt="T"
				vret=ttoc(xdato)
			case kvt="I"
				vret=transform(xdato)
			OTHERWISE
			
			
		endcase
		
		return vret
		
	ENDPROC

	PROCEDURE releasemenu
		LOCAL objf
		TRY
			LOCAL loEx as Exception
			IF PEMSTATUS(_screen,"ObjCopy",5) 
				IF VARTYPE(_Screen.objCopy)="O"
					objF=_screen.objcopy
					DO case
						CASE LOWER(objF.Baseclass)="form"
							objF.Hide()
							objF.Release	
						CASE LOWER(objF.baseclass)="container"
							lcName=objF.name
							objF.visible=.f.
							Thisform.RemoveObject(lcName)
					ENDCASE
				ENDIF
				_Screen.objcopy=null
				REMOVEPROPERTY(_screen,"objCopy")
			ENDIF
		
		CATCH TO loEx
			loEx.UserValue=PROGRAM()
		FINALLY
			IF PEMSTATUS(_screen,"MenuModo",5)
				REMOVEPROPERTY(_screen,"MenuModo")
			ENDIF
			IF PEMSTATUS(_screen,"oFrmCopy",5)
				_screen.ofrmCopy=null
				REMOVEPROPERTY(_screen,"oFrmCopy")
			ENDIF	
		ENDTRY
		
			
		
	ENDPROC

	PROCEDURE setfondo
		LPARAMETERS xoLabel,xlLeave
		LOCAL oparent,oControl,lnColor
		lnColor=xoLabel.parent.Parent.CursorColor
		IF !xlLeave
			oparent=xolabel.parent
			
			FOR EACH ocontrol IN oparent.controls
				IF INLIST(ocontrol.baseclass,"Label","Textbox")
					oControl.BackStyle=0
					ocontrol.ForeColor=RGB(0,0,0)
				ENDIF
			ENDFOR
		ENDIF
		
		WITH xoLabel
			.backstyle=IIF(xlLeave,0,1)
			IF xolabel.baseclass="Label"
				.Backcolor=IIF(xlLeave,RGB(255,255,255),lnColor)
			ELSE
				.DisabledBackcolor=IIF(xlLeave,RGB(255,255,255),lnColor)
			ENDIF
			.ForeColor=IIF(xlLeave,RGB(0,0,0),RGB(255,255,255))
		ENDWITH
		
		
	ENDPROC

	PROCEDURE showerror
		LPARAMETERS objExcep
		LOCAL lcMens
		lcMens="Fecha "+TRANSFORM(DATETIME());
			+CHR(13)+"Mensaje: "+objExcep.message;
			+CHR(13)+"ErrorNo: "+TRANSFORM(objExcep.Errorno);
			+CHR(13)+"Llamada: "+objExcep.Uservalue 
		IF VERSION(2)#0
			lcMens=lcMens+CHR(13)+"Línea: "+TRANSFORM(objExcep.lineNo)
		ENDIF
		
		STRTOFILE(lcMens+CHR(13),"ThError.log",1)
		lcMens="Se ha producido un error:"+chr(13)+lcMens
		MESSAGEBOX(lcMens,0,"Mensaje del Sistema")
	ENDPROC

	PROCEDURE shutforms
		* Cerrar cualquier formulario que quede abierto
		************************************************
		LOCAL lni,lnLoop
		LnLoop=0
		this.PutShutDown(0)
		lni=_Screen.FormCount
		IF lni>0
			*<DeactivateSector>
			FOR i=_screen.FormCount TO 1 STEP -1
				this.HideForm(i)
			NEXT
			this.PutShutDown(3)
		ENDIF
		
		DO WHILE _screen.FormCount > 0
			this.closeform(_Screen.FormCount)
			lnLoop=m.lnLoop+1
			IF m.lnLoop > m.lni
				EXIT
			ENDIF
		ENDDO
		this.PutShutDown(1)
		RETURN _SCREEN.FormCount
		
	ENDPROC

	PROCEDURE stuffmenu
		LPARAMETERS xcString,xcBuscar
		XCBUSCAR=UPPER(xcBuscar)
		RETURN STUFF(xcSTring,AT(xcBuscar,UPPER(xcString)),LEN(xcBuscar),xcBuscar)
		
		
		
	ENDPROC

	PROCEDURE wokupas
		LPARAMETERS xcTexto,xcFontName,xnFontSize,xcEstilo,xnAdd
		*********************************************************
		* xcTexto: 		Cadena para la que se determina el ancho
		* xcFontName:	Nombre de la fuente (default="Arial")
		* xnFontSize:	Ancho de la fuente  (default=8)
		* xcEStilo:		FontBold ($'NBnb' ; Numeric 0 ó 1 ; boolean)
		* xnAdd:		Pixels que se agregan al determinado (may be < 0)
		*****************************************************************
		xcFontName=EVL(xcFontName,"Arial")
		xnFontSize=EVL(xnFontSize,8)
		xnAdd=EVL(xnADd,0)
		DO case
			CASE VARTYPE(xcEstilo)="L"
				xcEstilo=IIF(xcEstilo,"B","N")
			CASE VARTYPE(xcEstilo)="C"
				xcEstilo=UPPER(xcEstilo)
				IF NOT xcEstilo$'BN'
					xcEstilo="N"
				ENDIF
			CASE VARTYPE(xcEstilo)="N"
				DO case
					CASE xcEstilo=0
						xcEStilo="N"
					CASE xcEStilo=1
						xcEStilo="B"
					OTHERWISE
						xcEstilo="N"
				ENDCASE
				
			OTHERWISE
				xcEstilo="N"
		ENDCASE
		
		nvtex=TxtWidth(xcTExto,xcFontName,xnFontSize,xcEstilo) * FontMetric(6,xcFontName,xnFontSize,xcEstilo)
		if xnAdd=0
			xnAdd=Int(nvTex/20)
		endif
		Return xnAdd+nvTex
	ENDPROC

ENDDEFINE

DEFINE CLASS gmove AS custom 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: gbindtit
		*m: gmousemove
	*</DefinedPropArrayMethod>

	Name = "gmove"
	Width = 30
	
	PROCEDURE gbindtit
		LOCAL oControl,oElemen
		BINDEVENT(thisform,"MouseMove",this,"gMouseMove")
		FOR EACH oControl IN thisform.Controls
			DO CASE
			CASE UPPER(ocontrol.baseclass)=="SHAPE"
				BINDEVENT(oControl,"MouseMove",this,"gmousemove")
			
			CASE UPPER(oControl.baseclass)=="CONTAINER"
				BINDEVENT(oControl,"MouseMove",this,"gmousemove")
				FOR EACH oElemen IN oControl.controls
					IF INLIST(LOWER(oElemen.baseclass),"shape","line")
						BINDEVENT(oElemen,"MouseMove",this,"gmousemove")
					ENDIF
				ENDFOR
			ENDCASE
		ENDFOR
	ENDPROC

	PROCEDURE gmousemove
		LPARAMETERS nButton, nShift, nXCoord, nYCoord
		
		#DEFINE WM_LBUTTONDOWN 513
		#DEFINE WM_RBUTTONUP 517
		#DEFINE WM_RBUTTONDOWN 516
		#DEFINE WM_LBUTTONUP 514
		#DEFINE WM_SYSCOMMAND 274
		#DEFINE MOUSE_MOVE 61458
		=SendMessage(THISFORM.HWND, WM_LBUTTONUP, 0, 0)
		=SendMessage(THISFORM.HWND, WM_SYSCOMMAND, MOUSE_MOVE, 0)
		
		*!*	WM_MOUSEFIRST = 0x200
		*!*	WM_MOUSEMOVE = 0x200		512 Mouse paseando sobre cualquier control / form
		*!*	WM_LBUTTONDOWN = 0x201		513 Click sobre cualquier control o sobre el form Par3=1
		*!*	WM_LBUTTONUP = 0x202		514 Click sobre cualquier contorl o sobre el form Par3=0
		*!*	WM_LBUTTONDBLCLK = 0x203	515 No detectado
		*!*	WM_RBUTTONDOWN = 0x204		516 Click derecho s/cualquier control / form Par3=2
		*!*	WM_RBUTTONUP = 0x205		517 Click derecho s/cualquier control / form Par3=0
	ENDPROC

ENDDEFINE

DEFINE CLASS labmenu AS label 
 	*< CLASSDATA: Baseclass="label" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*p: barra
		*p: comando		&& Acción de menú que ejecuta en gmenu.convoca
		*p: condenable
		*p: objform
		*p: subcommand		&& Subcomando de menu
		*a: gaforms[1,0]		&& Calcula formularios que se abren con click
	*</DefinedPropArrayMethod>

	BackStyle = 0
	barra = 0
	Caption = "TextoMenu"
	comando = 		&& Acción de menú que ejecuta en gmenu.convoca
	condenable = .F.
	DisabledBackColor = 255,255,255
	FontSize = 8
	Height = 17
	MousePointer = 15
	Name = "labmenu"
	objform = null
	subcommand = 		&& Subcomando de menu
	Width = 126
	
	PROCEDURE Click
		LOCAL lnfIni,lnFPost,lnfDiff,i,lnIt,lcCaption,;
			lcCaptionIni,lcNameIni,ldoit
		STORE "" TO lcCaption,lcCaptionIni,lcNameIni
		lnIt=ALEN(this.gaforms,1)
		IF lnIt=1 AND ISNULL(this.gaforms[1,1])
			lnIt=0
		ENDIF
		
		lnfIni=_screen.FormCount
		IF lnfIni>0
			lcCaptionIni=_Screen.Forms(1).caption
			lcNameIni=_Screen.Forms(1).Name
		ENDIF
		This.parent.gmenu1.Convoca(tHIS)
		
		IF _Screen.FormCount>0 
			lDoit=EMPTY(lnfIni)
			IF !lDoit
				&& otro form.scx
				ldoit=IIF(_screen.Forms(1).Name # lcNameIni , .t. ,.f.)
				IF !ldoit
					&& otra sesión del mismo form, diferenciado por Caption
					ldoit=IIF(_screen.Forms(1).Caption # lcCaptionIni,.t.,.f.)
				ENDIF
			ENDIF
		ENDIF
		IF ldoit
			this.gaforms[1,1]=_Screen.Forms(1)
			this.gaforms[1,2]=lcCaption
		ENDIF
		
		*!*	lnfPost=_Screen.FormCount
		*!*	lnDiff=_Screen.FormCount - lnfIni
		*!*	IF lnDiff=0 AND lnfPost>0 AND !EMPTY(lcNameIni)
		*!*		DO case
		*!*			CASE _Screen.Forms(1).Name = lcNameINi AND ;
		*!*				_screen.Forms(1).Caption # lcCaptionIni
		*!*				lnDiff=1
		*!*			CASE _Screen.Forms(1).Name # lcNameIni
		*!*				lndiff=1
		*!*			
		*!*		ENDCASE
		*!*	ENDIF
		
		*!*	IF lnDiff>0
		*!*		FOR i=1 TO lnDiff
		*!*			lcCaption=ALLTRIM(_Screen.Forms(i).Caption)
		*!*			IF ASCAN(this.gaforms,lcCaption)=0
		*!*				lnIt=lnIt+1
		*!*				DIMENSION this.gaForms(lnIt,2)
		*!*				this.gaforms[lnIt,1]=_Screen.Forms(i)
		*!*				this.gaforms[lnIt,2]=lcCaption
		*!*			ENDIF
		*!*		NEXT
		*!*	ENDIF
		
	ENDPROC

	PROCEDURE Init
		DIMENSION this.gaforms(1,2)
		this.gaforms[1,1]=null	&& form Object
		this.gaforms[1,2]=""	&& Form.caption
	ENDPROC

	PROCEDURE MouseLeave
		LPARAMETERS nButton, nShift, nXCoord, nYCoord
		This.Parent.gmenu1.SEtfondo(This,.T.)
	ENDPROC

	PROCEDURE MouseMove
		LPARAMETERS nButton, nShift, nXCoord, nYCoord
		This.Parent.gmenu1.SEtfondo(This)
	ENDPROC

ENDDEFINE

DEFINE CLASS listcopy AS listbox 
 	*< CLASSDATA: Baseclass="listbox" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*p: objcall		&& objeto activo
	*</DefinedPropArrayMethod>

	AutoHideScrollbar = 1
	BorderColor = 114,136,141
	FontSize = 8
	Height = 54
	Name = "listcopy"
	objcall = null		&& objeto activo
	SpecialEffect = 1
	Width = 100
	
	PROCEDURE Click
		LOCAL lcsel,lnItem,objSel,lnInitSel,lnLength,lcText
		objSel=this.objcall
		lnInitsel=objsel.SelStart
		lnLength=objSel.SelLength
		lnitem=this.ListItemId
		lcText=objsel.value
		IF !EMPTY(lnItem)
			lcSel=this.ListItem(lnitem,2)
			DO case
				CASE lcSEl="C"
					_ClipText=objSel.SelText
					
				CASE lcSel="X"
					_ClipText=objSel.SelText
					objSel.Value=LEFT(lcText,lnInitSel-1);
						+SUBSTR(lcText,lnInitsel+lnLength+1)
					
				CASE lcSel="P"
					IF !EMPTY(objsel.SelText)
						lcText=LEFT(lcText,lnInitSel-1);
							+SUBSTR(lcText,lnInitsel+lnLength+1)
					ENDIF
					IF !EMPTY(_clipText)
						objSel.Value=LEFT(lcText,lnInitSel);
							+_ClipText+" ";
							+SUBSTR(lcText,lnInitSel + 1)
					
					ENDIF
					
			ENDCASE
		ENDIF
		
	ENDPROC

	PROCEDURE Init
		LPARAMETERS xobjeto
		this.objcall=xobjeto
			
		ADDPROPERTY(_Screen,"poList","")
		WITH this
			.BoundColumn=2
			.ControlSource='_Screen.poList'
			.AddListItem("Copiar",1,1)
			.AddListitem("C",1,2)
			.AddListItem("Recortar",2,1)
			.AddListItem("X",2,2)
			.AddListItem("Pegar",3,1)
			.AddListItem(IIF(EMPTY(_clipText),"\P","P"),3,2)
			.Requery
			.Refresh
		ENDWITH
		
	ENDPROC

ENDDEFINE

DEFINE CLASS shape3d AS shape 
 	*< CLASSDATA: Baseclass="shape" Timestamp="" Scale="Pixels" Uniqueid="" />

	BackColor = 221,226,222
	Height = 30
	Name = "shape3d"
	SpecialEffect = 0
	Width = 100

ENDDEFINE

DEFINE CLASS shline AS shape 
 	*< CLASSDATA: Baseclass="shape" Timestamp="" Scale="Pixels" Uniqueid="" />

	Height = 2
	Name = "shline"
	SpecialEffect = 0
	Width = 100

ENDDEFINE

DEFINE CLASS txtmenu AS textbox 
 	*< CLASSDATA: Baseclass="textbox" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*p: barra
		*p: comando
		*p: condenable
		*p: objform
		*p: subcommand
		*a: gaforms[1,2]
	*</DefinedPropArrayMethod>

	BackStyle = 0
	barra = 0
	BorderStyle = 0
	comando = 
	condenable = .F.
	DisabledBackColor = 255,255,255
	FontSize = 8
	Height = 17
	Name = "txtmenu"
	objform = null
	ReadOnly = .T.
	SpecialEffect = 1
	subcommand = 
	Width = 100
	
	PROCEDURE Click
		LOCAL lnfIni,lnFPost,lnfDiff,i,lnIt,lcCaption,;
			lcCaptionIni,lcNameIni,ldoit
		STORE "" TO lcCaption,lcCaptionIni,lcNameIni
		lnIt=ALEN(this.gaforms,1)
		IF lnIt=1 AND ISNULL(this.gaforms[1,1])
			lnIt=0
		ENDIF
		
		lnfIni=_screen.FormCount
		IF lnfIni>0
			lcCaptionIni=_Screen.Forms(1).caption
			lcNameIni=_Screen.Forms(1).Name
		ENDIF
		This.parent.gmenu1.Convoca(tHIS)
		
		IF _Screen.FormCount>0 
			lDoit=EMPTY(lnfIni)
			IF !lDoit
				&& otro form.scx
				ldoit=IIF(_screen.Forms(1).Name # lcNameIni , .t. ,.f.)
				IF !ldoit
					&& otra sesión del mismo form, diferenciado por Caption
					ldoit=IIF(_screen.Forms(1).Caption # lcCaptionIni,.t.,.f.)
				ENDIF
			ENDIF
		ENDIF
		IF ldoit
			this.gaforms[1,1]=_Screen.Forms(1)
			this.gaforms[1,2]=lcCaption
		ENDIF
	ENDPROC

	PROCEDURE Init
		DIMENSION this.gaforms(1,2)
		this.gaforms[1,1]=null	&& form Object
		this.gaforms[1,2]=""	&& Form.caption
	ENDPROC

	PROCEDURE MouseLeave
		LPARAMETERS nButton, nShift, nXCoord, nYCoord
		This.Parent.gmenu1.SEtfondo(This,.T.)
	ENDPROC

	PROCEDURE MouseMove
		LPARAMETERS nButton, nShift, nXCoord, nYCoord
		This.Parent.gmenu1.SEtfondo(This)
	ENDPROC

ENDDEFINE
